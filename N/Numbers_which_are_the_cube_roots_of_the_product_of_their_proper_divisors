#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/xx
#t# inprogress
#c# 2022-xx-xx >RC
#p# OK

my @res;

use v5.36;
use ntheory 'divisors';

my $c;
for my $num (1 .. 1_000_000) {

    if ($num == 1 or 8  == scalar divisors($num) ) {
        $c++;
        if ($c <= 50) {
            print "$num ";
        } elsif ($c == 500) {
            say '';
            say '  500 '.$num;
        } elsif ($c == 5000) {
            say ' 5000 '.$num;
        } elsif ($c == 50000) {
            say '50000 '.$num;
        }
    }
}

__END__

# code goes here

say my $result = join "\n", @res;
my $ref = <<'END';
END

use Test::More;
chomp $ref;
is($result, $ref);
#is(($result =~ s/\s//gr), ($ref =~ s/\s//gr));
done_testing();

__END__

=={{header|Perl}}==
{{trans|xx}}
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre style="height:20ex">
</pre>
[[File:xx|300px|thumb|right]]
# or
[https://github.com/SqrtNegInf/Rosettacode-Perl-Smoke/blob/master/ref/xx xx]
