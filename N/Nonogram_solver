#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Nonogram_solver
#c# 2019-04-02 <RC
#p# OK

use strict;
use warnings;
use feature 'say';
my @res;

my $file = 'ref/nonograms.txt';
open my $fd, '<', $file or die "$! opening $file";

while( <$fd> ) {
  /\S/ or next;
  my @rpats = makepatterns(split);
  my @cpats = makepatterns(split ' ', <$fd>);
  my @rows = ( '.' x @cpats ) x @rpats;
  for( my $prev = ''; $prev ne "@rows"; ) {
    $prev = "@rows";
    try(\@rows, \@rpats);
    my @cols = map { join '', map { s/.//; $& } @rows } 0..$#cpats;
    try(\@cols, \@cpats);
    @rows = map { join '', map { s/.//; $& } @cols } 0..$#rpats;
  }
  push @res, "\n";
  push @res, "@rows" =~ /\./ ? "Failed\n" : map { tr/01/.#/r, "\n" } @rows;
}

sub try {
  my ($lines, $patterns) = @_;
  for my $i ( 0 .. $#$lines ) {
    while( $lines->[$i] =~ /\./g ) {
      for my $try ( 0, 1 ) {
        $lines->[$i] =~ s/.\G/$try/r =~ $patterns->[$i] or
          $lines->[$i] =~ s// 1 - $try /e;
        }
      }
    }
}

sub makepatterns {
  map qr/^$_$/, map { '[0.]*' . join('[0.]+', map { "[1.]{$_}" }
    map -64+ord, split //) . '[0.]*' } @_;
}

say my $result = join '', @res;

my $ref = <<'EOD';

.###....
##.#....
.###..##
..##..##
..######
#.#####.
######..
....#...
...##...

..........######....
........###.#..###..
...#..###...#....###
..###.##############
...#..#............#
..#.#.##..........##
#####..##........##.
#####...#........#..
#####..###.###.###..
########.###.###.###

....###.#...........
....##.####.#.......
....#.###.###.......
..##.####...........
.###.###.#....###...
###..##.##...#.###..
##..##.##....##.##..
....##.#.#..##.#.#..
....#.##.#...####...
....#.#.##.....##...
.....##.##..########
....##.##...##..####
....#.##.##.#...#..#
###..###.#####.....#
#.#.###.#....#....##
##..###.#....###.###
.#.###.##.########..
.####.###.########..
...#.####.##.#####..
...#.####.##...##...
....####..##...#####
...#####.###...#####
...####.#..........#
..####.##...........
..###.###...........

....................#####
..##..............###..##
.##..............#####..#
##.............########..
##....#####.###########..
#.#..##....#....######...
#..##.....#.......###....
##........#.............#
.##.....######.........##
..###############....####
.....##########..########
....##.#.####.###..######
........#################
........#################
.......##################
.......#...##############
.......#.#.##############
........#####...#########
.................########
..................#######
EOD

use Test::More;
is ($result, $ref);
done_testing();
