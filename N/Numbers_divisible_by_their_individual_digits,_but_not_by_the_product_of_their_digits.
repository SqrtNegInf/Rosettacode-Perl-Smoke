#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Numbers_divisible_by_their_individual_digits,_but_not_by_the_product_of_their_digits.
#c# 2021-04-18 <RC
#p# OK
#n# 2023-05-02 not much better, hard to get around issue of dual topic vars.

use strict;
use warnings;
use feature 'say';

my $n;
my @n = grep {
        ! /0/
    and ($n = $_) % eval s/\B/*/gr
    and 0 == grep $n % $_, split //
} 1 .. 999;

# same code, but layout improved over RC version
#my @n = grep {
#    my $n = $_;
#        ! /0/ 
#    and $n % eval s/\B/*/gr 
#    and 0 == grep $n % $_, split //
#} 1 .. 999;

#say my $result = @n . " n found\n\n@n\n" =~ s/.{25}\K /\n/gr;
 say my $result = @n . " numbers found\n\n" . (sprintf '%4d'x@n, @n) =~ s/.{36}\K/\n/gr;
#say my $result = @n . " numbers found\n\n" . (join '', map {sprintf '%4d', $_} @n) =~ s/.{36}\K/\n/gr;

my $ref = <<'EOD';
45 numbers found

  22  33  44  48  55  66  77  88  99
 122 124 126 155 162 168 184 222 244
 248 264 288 324 333 336 366 396 412
 424 444 448 488 515 555 636 648 666
 728 777 784 824 848 864 888 936 999
EOD

use Test::More;
is ($result, $ref);
done_testing();
