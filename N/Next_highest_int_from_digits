#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Next_highest_int_from_digits
#c# 2020-03-06 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

my @res;

use bigint;
use List::Util 'first';

sub comma { reverse ((reverse shift) =~ s/(.{3})/$1,/gr) =~ s/^,//r }

sub next_greatest_index {
    my($str) = @_;
    my @i = reverse split //, $str;
    @i-1 - (1 + first { $i[$_] > $i[$_+1] } 0 .. @i-1);
}

sub next_greatest_integer {
    my($num) = @_;
    my $numr;
    return 0 if length $num < 2;
    return ($numr = 0 + reverse $num) > $num ? $numr : 0 if length $num == 2;
    return 0 unless my $i = next_greatest_index( $num ) // 0;
    my $digit = substr($num, $i, 1);
    my @rest  = sort split '', substr($num, $i);
    my $next  = first { $rest[$_] > $digit } 1..@rest;
    join '', substr($num, 0, $i), (splice(@rest, $next, 1)), @rest;
}

say 'Next largest integer able to be made from these digits, or zero if no larger exists:';

for (0, 9, 12, 21, 12453, 738440, 45072010, 95322020, 9589776899767587796600, 3345333) {
    push @res, sprintf "%30s  ->  %s", comma($_), comma next_greatest_integer $_;
}

say my $result = join "\n", @res;
my $ref = <<'END';
                             0  ->  0
                             9  ->  0
                            12  ->  21
                            21  ->  0
                        12,453  ->  12,534
                       738,440  ->  740,348
                    45,072,010  ->  45,072,100
                    95,322,020  ->  95,322,200
 9,589,776,899,767,587,796,600  ->  9,589,776,899,767,587,900,667
                     3,345,333  ->  3,353,334
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
