#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Delegates
#t# skiptest
#c# 2018-07-28 <RC
#p# OK
#n# skipping Moose implementation

use feature 'say';
my $result;


# Translation of: Python
use strict;
 
package Delegator;
sub new {
   bless {}
}
sub operation {
   my ($self) = @_;
   if (defined $self->{delegate} && $self->{delegate}->can('thing')) {
      $self->{delegate}->thing;
   } else {
      'default implementation';
   }
}
1;
 
package Delegate;
sub new {
   bless {};
}
sub thing {
   'delegate implementation'
}
1;
 
 
package main;
# No delegate
my $a = Delegator->new;
$a->operation eq 'default implementation' or die;
 
# With a delegate that does not implement "thing"
$a->{delegate} = 'A delegate may be any object';
$a->operation eq 'default implementation' or die;
 
# With delegate that implements "thing"
$a->{delegate} = Delegate->new;
$a->operation eq 'delegate implementation' or die;
 

say $result; 
my $ref = <<'EOD';
EOD

use Test::More;
#is ($result, $ref);
#done_testing();
