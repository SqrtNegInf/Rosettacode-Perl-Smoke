#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Lucky_and_even_lucky_numbers
#c# 2018-09-17 >RC
#p# OK

use feature 'say';

sub luck {
my($a,$b) = @_;

#gather {
	push @taken, $a;
	my @rotor;
	my $i = $b;
 
say 'rotor ' . join ' ', @rotor;
	loop: {
	    for (my $j = 0; $j < @rotor; $j++) {
		    --$rotor[$j] or last;
	    }
	    if ($j < @rotor) {
		    $rotor[$j] = $taken[$j+1];
	    }
	    else {
		    push @taken, $i;
		    push @rotor, $i - @taken;
	    }
	    $i += 2;
	}
#    }
    return @taken;
}
 
say join ' ', @lucky     = luck(3,7);
#@evenlucky = luck(2,4);

__END__
 
#subset Luck where m:i/^ 'even'? 'lucky' $/;
 
multi MAINly (Int $num where * > 0) {
    say @lucky[$num-1];
}
 
multi MAINly (Int $num where * > 0, ',', Luck $howlucky = 'lucky') {
    say @::(lc $howlucky)[$num-1];
}
 
multi MAINly (Int $first where * > 0, Int $last where * > 0, Luck $howlucky = 'lucky') {
    say @::(lc $howlucky)[$first-1 .. $last - 1];
}
 
multi MAINly (Int $min where * > 0, Int $neg-max where * < 0, Luck $howlucky = 'lucky') {
    say grep * >= $min, (@::(lc $howlucky) ...^ * > abs $neg-max);
}

my $ref = <<'EOD';
EOD

use Test::More;
is(@lucky[^20], '1 3 7 9 13 15 21 25 31 33 37 43 49 51 63 67 69 73 75 79');
is((@evenlucky[^20]), '2 4 6 10 12 18 20 22 26 34 36 42 44 50 52 54 58 68 70 76');
is(@lucky[1000], '8827');
#is ($result, $ref);
#done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre  style="height:35ex"></pre>
