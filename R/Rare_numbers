#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Rare_numbers
#c# 2021-11-25 <RC, 2022-03-15 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

use integer;

my $count = 0;
my @squares;
for my $large ( 0 .. 1e3 )
  {
  my $largesquared = $squares[$large] = $large * $large; # faster?
  #my $largesquared = $squares[$large] = $large ** 2;
  for my $small ( 0 .. $large - 1 )
    {
    my $n = $largesquared + $squares[$small];
    2 * $large * $small == reverse $n or next;
    push @res, sprintf "%12s %s", $n, scalar reverse $n;
    $n == reverse $n and die "oops!"; # palindrome check
    ++$count >= 5 and exit;
    }
  }

say my $result = join "\n", @res;
my $ref = <<'EOD';
          65 56
      621770 077126
EOD
#   281089082 280980182
#  2022652202 2022562202
#  2042832002 2002382402

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing;
