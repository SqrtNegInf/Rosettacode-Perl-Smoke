#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Rosetta_Code_Rank_languages_by_number_of_users
#c# 2019-05-01 >RC
#p# OK

use strict;
use warnings;
use feature 'say';
my $result;

use LWP::UserAgent;
use URI::Escape;
use JSON;

my $client = LWP::UserAgent->new;
$client->agent("Rosettacode Perl task solver");
my $url = 'http://rosettacode.org/mw';

my $minimum = 100;

sub uri_query_string {
    my(%fields) = @_;
        'action=query&format=json&formatversion=2&' . 
    join '&', map { $_ . '=' . uri_escape($fields{$_}) } keys %fields
}

sub mediawiki_query {
    my($site, $type, %query) = @_;
    my $url = "$site/api.php?" . uri_query_string(%query);
    my %languages = ();

    my $req = HTTP::Request->new( GET => $url);
    my $response = $client->request($req);
    $response->is_success or die "Failed to GET '$url': ", $response->status_line;
    my $data = decode_json($response->content);
    for my $row ( @{${$data}{query}{pages}} ) { 
        next unless defined $$row{categoryinfo} && $$row{title} =~ /User/;
        my($title) = $$row{title} =~ /Category:(.*?) User/;
        my($count) = $$row{categoryinfo}{pages};
        $languages{$title} = $count;
    }
    %languages;
}

my %table = mediawiki_query(
    $url, 'pages',
    ( generator => 'categorymembers',
    gcmtitle => 'Category:Language users',
    gcmlimit => '999',
    rawcontinue => '',
    prop => 'categoryinfo')
);

for my $k (sort { $table{$b} <=> $table{$a} } keys %table) {
    $result .= sprintf "%4d %s\n", $table{$k}, $k if $table{$k} > $minimum;
}

say $result;

use Test::More;
ok $result =~ /1[89]\d Perl/;
done_testing();

__END__

As of 2020-12-06:

 420 C
 304 Java
 298 C++
 295 Python
 271 JavaScript
 180 Perl       <=== testing this value
 180 PHP
 156 SQL
 144 UNIX Shell
 129 C sharp
 128 Pascal
 125 BASIC
 111 Haskell
