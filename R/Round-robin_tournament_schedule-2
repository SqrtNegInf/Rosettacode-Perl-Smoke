#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Round-robin_tournament_schedule
#c# 2021-11-14 <RC
#p# OK
#n# Tybalt89's original version commented; generalized a bit (but still doesn't handle odd number of teams)

my @res;

use strict;
use warnings;
use feature 'say';

#my @teams = 1 .. 12;
#for (1 .. 11) {
#    @teams[0,11,1..10] = @teams;
#    push @res, sprintf 'Round %2d:' . '%4d vs %2d'x6 . "\n", $_, @teams[ map { $_, 11-$_} 0..5 ];
#}

my $n = 12;
my @teams = 1 .. $n;
for (1 .. $n-1) {
    @teams[0,$n-1,1..$n-2] = @teams;
    push @res, sprintf 'Round %2d:' . '%4d vs %2d'x($n/2) . "\n", $_, @teams[ map { ($_, $n-1-$_) } 0..($n/2)-1 ]
}

say my $result = join '', @res;

my $ref = <<'EOD';
Round  1:   1 vs  2   3 vs 12   4 vs 11   5 vs 10   6 vs  9   7 vs  8
Round  2:   1 vs  3   4 vs  2   5 vs 12   6 vs 11   7 vs 10   8 vs  9
Round  3:   1 vs  4   5 vs  3   6 vs  2   7 vs 12   8 vs 11   9 vs 10
Round  4:   1 vs  5   6 vs  4   7 vs  3   8 vs  2   9 vs 12  10 vs 11
Round  5:   1 vs  6   7 vs  5   8 vs  4   9 vs  3  10 vs  2  11 vs 12
Round  6:   1 vs  7   8 vs  6   9 vs  5  10 vs  4  11 vs  3  12 vs  2
Round  7:   1 vs  8   9 vs  7  10 vs  6  11 vs  5  12 vs  4   2 vs  3
Round  8:   1 vs  9  10 vs  8  11 vs  7  12 vs  6   2 vs  5   3 vs  4
Round  9:   1 vs 10  11 vs  9  12 vs  8   2 vs  7   3 vs  6   4 vs  5
Round 10:   1 vs 11  12 vs 10   2 vs  9   3 vs  8   4 vs  7   5 vs  6
Round 11:   1 vs 12   2 vs 11   3 vs 10   4 vs  9   5 vs  8   6 vs  7
EOD

use Test::More;
is ($result, $ref);
done_testing;
