#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Rosetta_Code/Count_examples
#c# 2018-08-21 <RC, 2019-04-12 >RC
#p# OK
#n# replaced non-working LWP::Simple version with HTTP::Tiny
#n# Mojo version: 'return' doesn't quit the anon. sub, so 'last' instead (thus 'no warnings')
#n# should start using 'mediawiki-query' like P6...

use strict;
use warnings;
use feature 'say';
my (@res1,@res2);

my $site = "http://rosettacode.org";
my $list_url = "/mw/api.php?action=query&list=categorymembers&cmtitle=Category:Programming_Tasks&cmlimit=10&format=xml";

use HTTP::Tiny;
my $response = HTTP::Tiny->new->get("$site$list_url");

for ($response->{content} =~ /cm.*?title="(.*?)"/g) {
    (my $slug = $_) =~ tr/ /_/;
    my $response = HTTP::Tiny->new->get("$site/wiki/$slug");
    my $count = () = $response->{content} =~ /toclevel-1/g;
    push @res1, "$_: $count examples";
    last if $_ eq '15 puzzle solver';
}

my $result1 = join "\n", @res1;

use Mojo::UserAgent;

my $ua = Mojo::UserAgent->new;
$ua->get("$site$list_url")->res->dom->find('cm')->each(sub {
    no warnings;
    (my $slug = $_->{title}) =~ tr/ /_/;
    my $count = $ua->get("$site/wiki/$slug")->res->dom->find("#toc .toclevel-1")->size;
    push @res2, "$_->{title}: $count examples";
    last if $_->{title} =~ /15 puzzle solver/;
});

my $result2 = join "\n", @res2;

use Test::More;
ok $result1 =~ /100 doors: 3\d\d examples/;
ok $result1 =~ /15 Puzzle Game: [5-9]\d examples/;
is($result1,$result2);
done_testing();

__END__

2020-07-27
100 doors: 305 examples
100 prisoners: 41 examples
15 Puzzle Game: 66 examples
2048: 49 examples
21 Game: 20 examples
24 game: 95 examples
24 game/Solve: 58 examples
4-rings or 4-squares puzzle: 53 examples
9 billion names of God the integer: 56 examples
99 Bottles of Beer: 310 examples
