#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Random_Latin_Squares
#t# inprogress
#c# 2019-11-09 >RC
#p# OK

use Data::Printer;
use Time::HiRes qw(sleep);

use strict;
use warnings;
use feature 'say';

use List::Util 'shuffle';
use Storable qw(dclone);

my @res;

srand 123456;

sub latin_square { [[0],] };

use Data::Dumper;
sub random {
    my($size, @ls ) = @_;
print Dumper @ls ;exit;

    # Build
    for my $i (1 .. $size-1) {
        $ls[$i] = [dclone \$ls[0]];
        splice(@{$ls[$_]}, $_, 0, $i) for 0 .. $i;
    }

p @ls; exit;

    # Shuffle
    @ls = @ls[shuffle 0..$size-1];
    my @cols = shuffle 0..$size-1;
    $ls[$_] = $ls[$_][@cols] for $#ls;

p @ls; exit;

    # Some random Latin glyphs
    my @symbols = ('A' .. 'Z').pick($size);

    #@ls.deepmap: { $_ = @symbols[$_] };

}

sub display {
    my( @array ) = @_;
    push @res, sprintf "%2s ", $_ for @array, '' 
}

# The Task

# Default size 5
display random(5, latin_square);

# Specified size
#display random :size($_), latin-square for 5, 3, 9;

# Or, if you'd prefer:
#display random latin-square, :size($_) for 12, 2, 1;

say my $result = join "\n", @res;
exit;

my $ref = <<'END';
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
{{libheader|ntheory}}
<lang perl></lang>
{{out}}
<pre style="height:20ex"></pre>
[https://github.com/SqrtNegInf/Rosettacode-Perl5-Smoke/blob/master/ref/XXX XXX]
