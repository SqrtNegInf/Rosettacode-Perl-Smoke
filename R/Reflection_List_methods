#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Reflection_List_methods
#c# 2019-03-28 >RC
#p# OK
#n# lame, but better than nothing?

my $result;

use strict;
no strict 'refs';
use warnings;
use feature 'say';

package Nums;

use overload (
	'<=>'	=> \&compare,
);

sub new     { my $self = shift; bless [@_] }
sub flip    { my @a = @_; 1/$a }
sub double  { my @a = @_; 2*$a }
sub compare { my ($a, $b) = @_; abs($a) <=> abs($b) }

package main;

# Introspect the symbol table hash 

my $a = Nums->new(1);
$result .= "$_\n" for sort keys %{ref ($a)."::" };

use Class::MOP;
my $meta = Class::MOP::Class->initialize( ref $a );
$result .= join "\n", sort $meta->get_all_method_names();

say $result;

my $ref = <<'EOD';
((
(<=>
BEGIN
a
compare
double
flip
new
(<=>
DOES
VERSION
can
compare
double
flip
isa
new
EOD

use Test::More;
chomp $ref;
is($result,$ref);
done_testing();
