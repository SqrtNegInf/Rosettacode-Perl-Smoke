#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Range_extraction
#c# 2018-08-19 <>RC
#p# OK

use strict;
use warnings;
use feature 'say';

# Using regexes. Also handles +/- and negative integer ranges.
sub rangext {
    my $str = join ' ', @_;
    1 while $str =~ s{([+-]?\d+) ([+-]?\d+)}
        {$1.(abs($2 - $1) == 1 ? '~' : ',').$2}eg; # abs for neg ranges
    $str =~ s/(\d+)~(?:[+-]?\d+~)+([+-]?\d+)/$1-$2/g;
    $str =~ tr/~/,/;
    return $str;
}

# Test and display
my @test = qw(0  1  2  4  6  7  8 11 12 14
             15 16 17 18 19 20 21 22 23 24
             25 27 28 29 30 31 32 33 35 36
             37 38 39);
say my $result = rangext(@test); #, "\n";

#use Set::IntSpan;
#sub rangext { return Set::IntSpan->new(@_) . '' }  # stringized

#use Set::IntSpan::Fast;
#sub rangext { return Set::IntSpan::Fast->new(@_)->as_string }
# Set::IntSpan and Set::IntSpan::Fast are similar. "Fast" does a binary search for member testing (not part of the task here). Both accept negatives.

use Test::More;
is ($result, '0-2,4,6-8,11,12,14-25,27-33,35-39');
done_testing;
