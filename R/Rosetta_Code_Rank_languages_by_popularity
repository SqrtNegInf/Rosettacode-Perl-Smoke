#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity
#c# 2018-08-21 <RC, 2019-09-11 >RC, 2022-09-07 >RC
#p# OK
#n# test needs to be revised every time a new language crosses the 1000-task barrier
#n# 2020-01-29 Pleased to welcome 'C' to the '1000 club'
#n# 2020-02-24 'Java' joins the no-longer-quite-so-exclusive club
#n# 2020-11-05 Pleased to welcome 'J' to the club
#n# 2021-02-24 Pleased to welcome 'Ruby' AND 'Wren' to the club (on the same day)
#n# 2021-03-25 Pleased to welcome 'C++' to the club (hey, when did Zkl sneak in?)
#n# 2021-04-06 Pleased to welcome 'Nim' to the club
#n# 2021-04-09 Pleased to welcome 'Haskell' to the club
#n# 2021-09-07 Pleased to welcome 'Mathematica' to the club
#n# 2022-02-20 Pleased to welcome 'FreeBASIC' to the club (BASIC shambles onward, 50 years later...)
#n# 2022-07-01 Pleased to welcome 'Sidef' to the club
#n# 2022-08-27 'Sidef' dropped off? Must be error of RC hosting move [p.s. now it's back]

my @res;

use strict;
use warnings;
use feature 'say';

use MediaWiki::API;

my $api =
  MediaWiki::API->new( { api_url => 'https://rosettacode.org/w/api.php' } );

my @languages;
my $gcmcontinue;
while (1) {
    my $apih = $api->api(
        {
            action      => 'query',
            generator   => 'categorymembers',
            gcmtitle    => 'Category:Programming Languages',
            gcmlimit    => 350,
            prop        => 'categoryinfo',
            gcmcontinue => $gcmcontinue
        }
    );
    push @languages, values %{ $apih->{'query'}{'pages'} };

    last if not $gcmcontinue = $apih->{'continue'}{'gcmcontinue'};
}

for (@languages) {
    $_->{'title'} =~ s/Category://;
    $_->{'categoryinfo'}{'size'} //= 0;
}

my @sorted_languages =
  reverse sort { $a->{'categoryinfo'}{'size'} <=> $b->{'categoryinfo'}{'size'} }
  @languages;

binmode STDOUT, ':encoding(utf8)';
my $n = 1;
for (@sorted_languages) {
    next unless $_->{'categoryinfo'}{'size'} > 1000;
    push @res, sprintf "%3d. %20s - %3d", $n++, $_->{'title'},
      $_->{'categoryinfo'}{'size'};
}

say join "\n", @res;

use Test::More;
ok @res == 21;
done_testing();
