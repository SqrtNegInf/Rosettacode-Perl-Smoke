#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Reflection_List_properties
#c# 2019-03-28 >RC
#p# OK
#n# half-baked at best

my @res;

use strict;
use warnings;
use feature 'say';

{
     package Point;
     use Class::Spiffy -base;

     field 'x';
     field 'y';
}

{
     package Circle;
     use base qw(Point);
     field 'r';
}

package main;

my $p1 = Point->new(x => 8, y => -5);
my $c1 = Circle->new(r => 4);
my $c2 = Circle->new(x => 1, y => 2, r => 3);

for (sort keys %$p1) { push @res, "$_: " . $$p1{$_} }
for (sort keys %$c1) { push @res, "$_: " . $$c1{$_} }
for (sort keys %$c2) { push @res, "$_: " . $$c2{$_} }

say my $result = join "\n", @res;

my $ref = <<'EOD';
x: 8
y: -5
r: 4
r: 3
x: 1
y: 2
EOD

use Test::More;
chomp $ref;
is($result,$ref);
done_testing;
