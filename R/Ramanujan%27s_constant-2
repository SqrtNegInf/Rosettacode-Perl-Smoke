#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Ramanujan%27s_constant
#p# OK
#n# current limits depend on built-in π value
#n# not on RC
#n# using 'rat 19' promotes all further values to rational

use strict;
#use warnings;
use feature 'say';
my $result;

use Math::AnyNum qw(:all);
local $Math::AnyNum::PREC = 248;

sub continued_fraction {
    my ($a, $b, $n) = (@_[0,1], $_[2] // 100);
    $a->() + ($n && $b->() / continued_fraction($a, $b, $n-1));
}

#my $pi = continued_fraction do { my $n; sub { $n++ ? 2 : 1 } }, do { my $n; sub { rat (1+2*$n++)**2 } }, 100;
#say ' cπ = ' . as_dec((4*(1/$pi)),40);
#say ' rπ = ' . as_dec(pi,40);
#exit;

my$r163 = rat(continued_fraction do { my $n; sub { $n++ ? 2*12 : 12 } }, do { my $n; sub { rat 19 } }, 40);
#say '  r = ' . as_dec($r163,40);
#my $pi   = 4*rat(continued_fraction do { my $n; sub { rat $n++ ? 1 + 2*($n-2) : 0 } }, do { my $n; sub { say $n++ ? (rat $n>2 ? ($n-2)**2 : 1) : rat 4 } }, 100);
#`{ π/4  } my $pi   =       4 * continued-fraction(140, :a( 0,|(1, 3 ... *)),       :b(4, 1, |((1, 2, 3 ... *) X** 2)));
#say ' cπ = ' . as_dec($pi,40); 
#say '  π = ' . as_dec(pi,40); exit;
my $p    = pi * $r163;
my $R = Math::AnyNum->new( 1+$p/(continued_fraction do { my $n; sub { $n++ ? $p+($n+0) : 1 } }, do { my $n; sub { $n++; -1*$n*$p } }, 180));
say my $result = as_dec($R,58);

my $ref = '262537412640768743.9999999999992500725971981856888793538563';

use Test::More;
is ($result, $ref);
done_testing();
