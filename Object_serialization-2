#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Object_serialization
#c# 2018-08-20 <RC
#p# OK

use feature 'say';
my $result;

# Library: MooseX
# The same, using MooseX to serialize to JSON.

use MooseX::Declare;

class Greeting {
    use MooseX::Storage;
    with Storage('format' => 'JSON', io => 'File');
    has string => (is => 'ro', default => "Hello world!\n");
}
class Son::Of::Greeting extends Greeting {
    has string => (is => 'ro', default => "Hello from Junior!\n");
}

my $g1 = Greeting->new;
my $s1 = Son::Of::Greeting->new;

$result .= $g1->string;
$result .= $s1->string;

$g1->store('run/object1.json');
my $g2 = Greeting->load('run/object1.json');

$s1->store('run/object2.json');
my $s2 = Son::Of::Greeting->load('run/object2.json');

$result .= $g2->string;
$result .= $s2->string;

# This time the objects were serialized to the JSON format. Other supported formats are Storable and YAML.

say $result;

my $ref = <<'EOD';
Hello world!
Hello from Junior!
Hello world!
Hello from Junior!
EOD

use Test::More;
is ($result, $ref);
done_testing();
