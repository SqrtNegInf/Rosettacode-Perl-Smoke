#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Factors_of_an_integer
#c# 2018-08-03 <RC
#p# OK

use feature 'say';
my $result;

sub factors {
  my $n = shift;
  $n = -$n if $n < 0;
  my @divisors;
  for (1 .. int(sqrt($n))) {  # faster and less memory than map/grep
    push @divisors, $_ unless $n % $_;
  }
  # Return divisors including top half, without duplicating a square
  @divisors, map { $_*$_ == $n ? () : int($n/$_) } reverse @divisors;
}
say $result = join " ", factors(64);

use Test::More;
is ($result, '1 2 4 8 16 32 64');
done_testing();
