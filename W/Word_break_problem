#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Word_break_problem
#c# 2018-10-25 >RC
#p# OK
#n# doesn't show all combinations, finds 'a do' but not 'ad o'

use strict;
use warnings;
use feature 'say';
my @res;

my @words = <a o ad do is in pi ion par per sip miss able>;

push @res, "$_: " . word_break($_,@words) for <a ado amiss admission parable opera operable inoperable permission permissible mississippi>;

sub word_break { 
    my($word,@dictionary) = @_;
    my @matches;
    my $one_of = join '|', @dictionary;
    @matches = $word =~ /^ ($one_of)(?!\1) (?:($one_of)(?!\2))? (?:($one_of)(?!\3))? (?:($one_of)(?!\4))? $/x;
    return join(' ', grep {$_} @matches) || "(not possible)";
}

say my $result = join "\n", @res;

my $ref = <<'END';
a: a
ado: a do
amiss: a miss
admission: ad miss ion
parable: par able
opera: o per a
operable: o per able
inoperable: in o per able
permission: per miss ion
permissible: (not possible)
mississippi: miss is sip pi
END

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
