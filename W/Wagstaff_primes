#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Wagstaff_primes
#c# 2022-09-16 >RC
#p# OK
#n# no way to speed this up, 'bigint' makes it slow

my @res;

use v5.36;

use ntheory 'is_prime';
use bigint try => 'GMP';

#sub abbr ($d) { my $l = length $d; $l < 61 ? $d : substr($d,0,30) . '..' . substr($d,-30) . " ($l digits)" }
sub abbr ($d,$w) { my $l = length $d; $l < $w+1 ? $d : substr($d,0,$w/2) . '..' . substr($d,-$w/2) . " ($l digits)" }

my($p,@W) = 2;
until (@W == 20) {
    next unless 0 != ++$p % 2;
    push @W, $p if is_prime($p) and is_prime((2**$p + 1)/3);
}

push @res, sprintf "%2d: %3d - %s\n", $_+1, $W[$_], abbr( (2**$W[$_] + 1) / 3, 60) for 0..$#W;

say my $result = join '', @res;

my $ref = <<'END';
 1:   3 - 3
 2:   5 - 11
 3:   7 - 43
 4:  11 - 683
 5:  13 - 2731
 6:  17 - 43691
 7:  19 - 174763
 8:  23 - 2796203
 9:  31 - 715827883
10:  43 - 2932031007403
11:  61 - 768614336404564651
12:  79 - 201487636602438195784363
13: 101 - 845100400152152934331135470251
14: 127 - 56713727820156410577229101238628035243
15: 167 - 62357403192785191176690552862561408838653121833643
16: 191 - 1046183622564446793972631570534611069350392574077339085483
17: 199 - 267823007376498379256993682056860433753700498963798805883563
18: 313 - 556246623937737000623703569314..370363869220418099018130434731 (94 digits)
19: 347 - 955624423329196463171175373042..686867002917439712921903606443 (104 digits)
20: 701 - 350675726769891567149399325525..838589548478180862167823854251 (211 digits)
END

use Test::More;
is($result, $ref);
done_testing();
