#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Wolstenholme_numbers
#c# 2023-05-03 NOT ON RC
#p# OK
#n# faster than other version

my @res;

use v5.36;

use ntheory 'is_prime';
use Math::AnyNum qw(:overload numerator);

sub abbr ($d) { my $l = length $d; $l < 41 ? $d : substr($d,0,20) . '..' . substr($d,-20) . " ($l digits)" }

my @W = 1/1;
push @W, $W[-1] + 1/$_**2 for 2..10000;

push @res, 'Wolstenholme numbers:';
push @res, sprintf "%5s: %s", $_, abbr numerator($W[$_-1]) for 1..20, 5e2, 1e3, 2.5e3, 5e3, 1e4;

push @res, "\nPrime Wolstenholme numbers:";
my($n,$c);
do { push @res, sprintf "%5s: %s", ++$c, abbr numerator($W[$n]) if is_prime numerator($W[++$n]) } until $c == 15;

say my $result = join "\n", @res;

my $ref = <<'END';
Wolstenholme numbers:
    1: 1
    2: 5
    3: 49
    4: 205
    5: 5269
    6: 5369
    7: 266681
    8: 1077749
    9: 9778141
   10: 1968329
   11: 239437889
   12: 240505109
   13: 40799043101
   14: 40931552621
   15: 205234915681
   16: 822968714749
   17: 238357395880861
   18: 238820721143261
   19: 86364397717734821
   20: 17299975731542641
  500: 40989667509417020364..48084984597965892703 (434 digits)
 1000: 83545938483149689478..99094240207812766449 (866 digits)
 2500: 64537911900230612090..12785535902976933153 (2164 digits)
 5000: 34472086597488537716..22525144829082590451 (4340 digits)
10000: 54714423173933343999..49175649667700005717 (8693 digits)

Prime Wolstenholme numbers:
    1: 5
    2: 266681
    3: 40799043101
    4: 86364397717734821
    5: 36190908596780862323..79995976006474252029 (104 digits)
    6: 33427988094524601237..48446489305085140033 (156 digits)
    7: 22812704758392002353..84405125167217413149 (218 digits)
    8: 28347687473208792918..45794572911130248059 (318 digits)
    9: 78440559440644426017..30422337523878698419 (520 digits)
   10: 22706893975121925531..02173859396183964989 (649 digits)
   11: 27310394808585898968..86311385662644388271 (935 digits)
   12: 13001072736642048751..08635832246554146071 (984 digits)
   13: 15086863305391456002..05367804007944918693 (1202 digits)
   14: 23541935187269979100..02324742766220468879 (1518 digits)
   15: 40306783143871607599..58901192511859288941 (1539 digits)
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
