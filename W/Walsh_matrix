#!/usr/local/bin/perl
#u# https://www.rosettacode.org/wiki/Walsh_matrix
#c# 2023-11-07 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

use List::AllUtils qw( bundle_by pairwise nsort_by );

sub Kronecker {
  my ($ac, $bc) = map scalar($_->[0]->@*), my ($A, $B) = @_;
  return [ bundle_by { [ @_ ] } $ac * $bc, pairwise { $a * $b }
    @{[ map { map { ($_) x $bc } (@$_) x @$B } @$A ]}, # left side
    @{[ ( map { (@$_) x $ac } @$B ) x @$A ]} ];        # right side
}

sub Walsh { # Task - write a routine that, given k, returns Walsh of 2**k
  my $k = shift;
  $k > 0 ? Kronecker [ [1,1],[1,-1] ], Walsh( $k - 1 ) : [[1]];
}

for my $k ( 1, 3, 2, 4 ) { # test code out of order just for fun
  push  @res, sprintf '%3d'x@$_, @$_ for [], (my $w = Walsh($k))->@*, [];
  push @res, nsort_by { scalar(() = /(.)\1*/g) }
    map { join '', (0, '_', '#')[@$_] } $w->@*;
  }

say my $result = join "\n", @res;

my $ref = <<'EOD';

  1  1
  1 -1

__
_#

  1  1  1  1  1  1  1  1
  1 -1  1 -1  1 -1  1 -1
  1  1 -1 -1  1  1 -1 -1
  1 -1 -1  1  1 -1 -1  1
  1  1  1  1 -1 -1 -1 -1
  1 -1  1 -1 -1  1 -1  1
  1  1 -1 -1 -1 -1  1  1
  1 -1 -1  1 -1  1  1 -1

________
____####
__####__
__##__##
_##__##_
_##_#__#
_#_##_#_
_#_#_#_#

  1  1  1  1
  1 -1  1 -1
  1  1 -1 -1
  1 -1 -1  1

____
__##
_##_
_#_#

  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1 -1  1 -1  1 -1  1 -1  1 -1  1 -1  1 -1  1 -1
  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1
  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1
  1  1  1  1 -1 -1 -1 -1  1  1  1  1 -1 -1 -1 -1
  1 -1  1 -1 -1  1 -1  1  1 -1  1 -1 -1  1 -1  1
  1  1 -1 -1 -1 -1  1  1  1  1 -1 -1 -1 -1  1  1
  1 -1 -1  1 -1  1  1 -1  1 -1 -1  1 -1  1  1 -1
  1  1  1  1  1  1  1  1 -1 -1 -1 -1 -1 -1 -1 -1
  1 -1  1 -1  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1
  1  1 -1 -1  1  1 -1 -1 -1 -1  1  1 -1 -1  1  1
  1 -1 -1  1  1 -1 -1  1 -1  1  1 -1 -1  1  1 -1
  1  1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1  1
  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1 -1  1 -1
  1  1 -1 -1 -1 -1  1  1 -1 -1  1  1  1  1 -1 -1
  1 -1 -1  1 -1  1  1 -1 -1  1  1 -1  1 -1 -1  1

________________
________########
____########____
____####____####
__####____####__
__####__##____##
__##__####__##__
__##__##__##__##
_##__##__##__##_
_##__##_#__##__#
_##_#__##__#_##_
_##_#__#_##_#__#
_#_##_#__#_##_#_
_#_##_#_#_#__#_#
_#_#_#_##_#_#_#_
_#_#_#_#_#_#_#_#
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
