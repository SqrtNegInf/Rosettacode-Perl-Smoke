#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Hickerson_series_of_almost_integers
#c# 2018-08-12 <RC
#p# OK

use feature 'say';
my $result;


# We'll use Math::BigFloat, which comes with perl.
# Conveniently, it includes a sufficiently precise logarithm function.
# To avoid doing factorials or exponentiations or divisions in the loop, we first
# calculate the inverse of the natural log of 2, and then compute a running value of h.

use strict;
use warnings;
use Math::BigFloat;

my $iln2 = 1 / Math::BigFloat->new(2)->blog;
my $h = $iln2 / 2;

for my $n ( 1 .. 17 ) {
	$h *= $iln2;
	$h *= $n;
	my $s = $h->copy->bfround(-3)->bstr;
	$result .= sprintf "h(%2d) = %22s is%s almost an integer.\n",
		$n, $s, ($s =~ /\.[09]/ ? '' : ' NOT');
}

say $result; 

my $ref = <<'EOD';
h( 1) =                  1.041 is almost an integer.
h( 2) =                  3.003 is almost an integer.
h( 3) =                 12.996 is almost an integer.
h( 4) =                 74.999 is almost an integer.
h( 5) =                541.002 is almost an integer.
h( 6) =               4683.001 is almost an integer.
h( 7) =              47292.999 is almost an integer.
h( 8) =             545834.998 is almost an integer.
h( 9) =            7087261.002 is almost an integer.
h(10) =          102247563.005 is almost an integer.
h(11) =         1622632572.998 is almost an integer.
h(12) =        28091567594.982 is almost an integer.
h(13) =       526858348381.001 is almost an integer.
h(14) =     10641342970443.085 is almost an integer.
h(15) =    230283190977853.037 is almost an integer.
h(16) =   5315654681981354.513 is NOT almost an integer.
h(17) = 130370767029135900.458 is NOT almost an integer.
EOD

use Test::More;
is ($result, $ref);
done_testing();
