#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Hilbert_curve
#c# 2018-11-24 >RC
#t# graphical
#p# OK
#f# RC file: hilbert_curve.svg

use constant pi => 2 * atan2(1, 0);

# Compute the curve with a Lindemayer-system
%rules = (

    'A' => '-BF+AFA+FB-',
    'B' => '+AF-BFB-FA+' 
);    
my $moore = 'AFA+F+AFA';
$moore =~ s/([AB])/$rules{$1}/eg for 1..5;

# Draw the curve in SVG
my($x, $y) = (100, 100);
my $theta = 0;
my $r = 3;
my $svg;

for (split //, $moore) {
    if (/F/) {
            $svg .= sprintf "<line x1='%.0f' y1='%.0f' ", $x, $y;
            $svg .= sprintf "x2='%.0f' ", $x += $r * cos($theta);
            $svg .= sprintf "y2='%.0f' ", $y += $r * sin($theta);
            $svg .= "style='stroke:rgb(0,0,0)'/>\n";
            #$svg .= "style='stroke:rgb(0,0,0);stroke-width:1'/>\n";
    }
    elsif (/\+/) { $theta += pi/2; }
    elsif (/\-/) { $theta -= pi/2; }
}

open  $fh, '>', 'run/moore_curve.svg';
print $fh  qq{<svg height="100%" width="100%" xmlns="http://www.w3.org/2000/svg">\n$svg</svg>};
close $fh;
