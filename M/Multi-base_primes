#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Multi-base_primes
#t# inprogress
#c# 2021-10-06 >RC
#p# OK

my @res;

use Data::Printer;

use strict;
use warnings;
use feature 'say';

use List::AllUtils <firstidx max>;
use ntheory qw/fromdigits todigitstring primes/;

my $chars = 4;
my $threshold = fromdigits( '1' . 'Z' x $chars, 36);

my %prime_base;
my @primes = @{primes( $threshold )};

for my $base (2..36) {
    my $n = todigitstring($base-1, $base) x $chars;
    $threshold = fromdigits($n, $base);
    my $i = firstidx { $_ > $threshold } @primes;
    map { push @{$prime_base{ todigitstring($primes[$_],$base) }}, $base } 1..$i;
}

my %maxx;
for (keys %prime_base) {
    no warnings 'uninitialized';
    next unless defined $prime_base{$_};
    my $l = length $_;
    $maxx{$l} = max $maxx{$l}, $#{$prime_base{$_}};
}

for my $m (1 .. $chars) {
    push @res, "$m character strings that are prime in maximum bases:";
    for (sort grep { length($_) ==  $m } keys %prime_base) {
        my @foo = $prime_base{$_};
        next unless $maxx{$m} eq $#{$foo[0]};
        push @res,  "$_: " . join ' ', @{$foo[0]};
    }
    push @res, ''
}

say my $result = join "\n", @res;

my $ref = <<'END';
1 character strings that are prime in maximum bases:
3: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36

2 character strings that are prime in maximum bases:
21: 3 5 6 8 9 11 14 15 18 20 21 23 26 29 30 33 35 36

3 character strings that are prime in maximum bases:
131: 4 5 7 8 9 10 12 14 15 18 19 20 23 25 27 29 30 34
551: 6 7 11 13 14 15 16 17 19 21 22 24 25 26 30 32 35 36
737: 8 9 11 12 13 15 16 17 19 22 23 24 25 26 29 30 31 36

4 character strings that are prime in maximum bases:
1727: 8 9 11 12 13 15 16 17 19 20 22 23 24 26 27 29 31 33 36
5347: 8 9 10 11 12 13 16 18 19 22 24 25 26 30 31 32 33 34 36
END

use Test::More;
#chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Raku}}
{{libheader|ntheory}}
<lang perl>
</lang>
{{out}}
<pre>
</pre>
