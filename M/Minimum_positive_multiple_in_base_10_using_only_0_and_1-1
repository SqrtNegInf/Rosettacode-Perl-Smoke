#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Minimum_positive_multiple_in_base_10_using_only_0_and_1
#c# 2020-03-03 >RC
#p# OK
#n# special-case all 9's, otherwise intolerably slow even for minimum results

use strict;
use warnings;
use feature 'say';

my @res;

use Math::AnyNum qw(:overload as_bin digits2num);

for my $x (1..10, 95..105, 297, 576, 594, 891, 909, 999) {
    my $y;
    if ($x =~ /^9+$/) { $y = digits2num([(1) x (9 * length $x)],2)  } # all 9's implies all 1's
    else              { while (1) { last unless as_bin(++$y) % $x } }
    push @res, sprintf "%4d: %28s  %s", $x, as_bin($y), as_bin($y)/$x;
}

say my $result = join "\n", @res;

my $ref = <<'END';
   1:                            1  1
   2:                           10  5
   3:                          111  37
   4:                          100  25
   5:                           10  2
   6:                         1110  185
   7:                         1001  143
   8:                         1000  125
   9:                    111111111  12345679
  10:                           10  1
  95:                       110010  1158
  96:                     11100000  115625
  97:                     11100001  114433
  98:                     11000010  112245
  99:           111111111111111111  1122334455667789
 100:                          100  1
 101:                          101  1
 102:                      1000110  9805
 103:                     11100001  107767
 104:                      1001000  9625
 105:                       101010  962
 297:          1111011111111111111  3740778151889263
 576:              111111111000000  192901234375
 594:         11110111111111111110  18703890759446315
 891:          1111111111111111011  1247038284075321
 909:          1011111111111111111  1112333455567779
 999:  111111111111111111111111111  111222333444555666777889
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
