#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Mertens_function
#c# 2020-01-xx >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use utf8;
use List::Util 'uniq';

my @res;

sub prime_factors {
    my ($n, $d, @factors) = (shift, 1);
    while ($n > 1 and $d++) {
        $n /= $d, push @factors, $d until $n % $d;
    }
    @factors
}

sub möebius {
    my($n) = @_;
    my @p = prime_factors($n);
    @p == uniq(@p) ? (0 == @p % 2) ? 1 : -1 : 0
}

sub progressive_sum {
    my @pr_sum = shift @_;
    push @pr_sum, $pr_sum[-1] + $_ for @_;
    @pr_sum;
}
 
my $max1 = 1000;
my $max2 =  199;

my @möebius;
push @möebius, möebius($_) for 1..$max1;
my @mertens = progressive_sum @möebius;

#say "Mertens sequence - First $max2 terms:";
my $result = (' 'x4 . sprintf "@{['%4d' x $max2]}", @mertens[0..$max2]) =~ s/((.){80})/$1\n/gr;
$result   .= sprintf "\nEquals zero %3d times between 1 and $max1\n", scalar grep { 0 == $_ } @mertens;
$result   .= sprintf "Crosses zero%3d times between 1 and $max1\n",   scalar grep { ! $mertens[$_-1] and $mertens[$_] } 1 .. @mertens;

say $result;

my $ref = <<'END';
       1   0  -1  -1  -2  -1  -2  -2  -2  -1  -2  -2  -3  -2  -1  -1  -2  -2  -3
  -3  -2  -1  -2  -2  -2  -1  -1  -1  -2  -3  -4  -4  -3  -2  -1  -1  -2  -1   0
   0  -1  -2  -3  -3  -3  -2  -3  -3  -3  -3  -2  -2  -3  -3  -2  -2  -1   0  -1
  -1  -2  -1  -1  -1   0  -1  -2  -2  -1  -2  -3  -3  -4  -3  -3  -3  -2  -3  -4
  -4  -4  -3  -4  -4  -3  -2  -1  -1  -2  -2  -1  -1   0   1   2   2   1   1   1
   1   0  -1  -2  -2  -3  -2  -3  -3  -4  -5  -4  -4  -5  -6  -5  -5  -5  -4  -3
  -3  -3  -2  -1  -1  -1  -1  -2  -2  -1  -2  -3  -3  -2  -1  -1  -1  -2  -3  -4
  -4  -3  -2  -1  -1   0   1   1   1   0   0  -1  -1  -1  -2  -1  -1  -2  -1   0
   0   1   1   0   0  -1   0  -1  -1  -1  -2  -2  -2  -3  -4  -4  -4  -3  -2  -3
  -3  -4  -5  -4  -4  -3  -4  -3  -3  -3  -4  -5  -5  -6  -5  -6  -6  -7  -7  -8

Equals zero  92 times between 1 and 1000
Crosses zero 59 times between 1 and 1000

END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
<lang perl></lang>
{{out}}
<pre></pre>
