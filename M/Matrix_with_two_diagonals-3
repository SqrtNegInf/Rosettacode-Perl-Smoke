#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Matrix_with_two_diagonals
#c# 2022-02-17 <RC
#p# OK
#n# tybalt89's version

my @res;

use strict;
use warnings;
use feature 'say';

sub diagonal {
  my $n =  shift() - 1;
  local $_ = 1 . 0 x ($n - 1) . 2 . "\n" . (0 . 0 x $n . "\n") x $n;
  1 while s/(?<=1...{$n})0/1/s or s/(?<=2.{$n})[01]/2/s;
  return tr/2/1/r =~ s/\B/ /gr;
}

push @res, diagonal($_) for 4, 5;

say my $result = join "\n", @res;
exit;

my $ref = <<'EOD';
1 0 0 1
0 1 1 0
0 1 1 0
1 0 0 1
 
1 0 0 0 1
0 1 0 1 0
0 0 1 0 0
0 1 0 1 0
1 0 0 0 1
 
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
