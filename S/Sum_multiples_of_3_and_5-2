#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sum_multiples_of_3_and_5
#c# 2018-08-25 >RC
#p# OK

use feature 'say';
my $result;

use strict ;
use warnings ;

# Translation of: Tcl
# An alternative approach, using the analytical solution from the Tcl example.

sub tri {
    my $n = shift;
    $n*($n+1) / 2;
}

sub sum
{
    my $n = (shift) - 1;
    (3 * tri( int($n/3) ) + 5 * tri( int($n/5) ) - 15 * tri( int($n/15) ) );
}

for my $n (1..9) {
$result .= sprintf "%d\n", sum(10**$n)
}

use bigint; # Machine precision was sufficient for the first calculation
$result .= sum(1e20);

say $result;

my $ref = <<'END';
23
2318
233168
23331668
2333316668
233333166668
23333331666668
2333333316666668
233333333166666668
2333333333333333333316666666666666666668
END

use Test::More;
chop $ref;
is($result,$ref);
done_testing();
