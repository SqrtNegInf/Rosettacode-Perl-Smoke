#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Synchronous_concurrency
#c# 2018-08-12 <RC
#p# OK

use feature 'say';
my $result;

use threads;
use Thread::Queue qw();

my $q1 = Thread::Queue->new;
my $q2 = Thread::Queue->new;

my $reader = threads->create(sub {
     my $q1 = shift;
     my $q2 = shift;

     open my $fh, '<', 'ref/sync_concur.base';
     $q1->enqueue($_) while <$fh>;
     close $fh;
     $q1->enqueue(undef);

     $result .= $q2->dequeue;
}, $q1, $q2);

my $printer = threads->create(sub {
     my $q1 = shift;
     my $q2 = shift;

     my $count;
     while (my $line = $q1->dequeue) {
         print $line;
         #$result .= $line; # DH not capturing, scope issue?
         $count++;
     };

     $q2->enqueue($count);
}, $q1, $q2);

say $result = $reader->join;
$printer->join;

use Test::More;
is ($result, 5);
done_testing();
