#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sieve_of_Eratosthenes
#c# 2018-08-16 <RC
#p# OK
#n# https://www.perlmonks.org/?node_id=1125331

use strict;
use warnings;
use feature 'say';
my $result;

sub string_sieve {
  my($n) = shift;
  my $i  = 7;
  my ($s, $d, @primes);

  local $_ = '110010101110101110101110111110' .
             '101111101110101110101110111110' x ($n/30);

  until (($s = $i*$i) > $n) {
    $d = $i<<1;
    do { substr($_, $s, 1, '1') } until ($s += $d) > $n;
    1 while substr($_, $i += 2, 1);
  }
  $_ = substr($_, 1, $n); 
  # For just the count:  return ($_ =~ tr/0//);
  push @primes, pos while m/0/g;
  @primes;
}

say $result = join ' ', string_sieve(100);

use Test::More;
is ($result, '2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97');
done_testing();
