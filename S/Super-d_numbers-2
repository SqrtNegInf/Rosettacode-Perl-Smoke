#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-10 >RC
#p# OK
#n# thundergnat's version, just testing for basic functionality

use strict;
use warnings;
use feature 'say';
#use bigint;

my @res;

sub super {
    my $d = shift;
    my $run = $d x $d;
    my @super;
    my $i = 0;
    my $n = 0;
    while ( $i < 10 ) {
        if (index($n ** $d * $d, $run) > -1) {
            push @super, $n;
            ++$i;
        }
        ++$n;
    }
    @super;
}
 
push @res, "\nFirst 10 super-$_ numbers:\n" . join ' ', super($_) for 2..4;

say my $result = join "\n", @res;

my $ref = <<'END';

First 10 super-2 numbers:
19 31 69 81 105 106 107 119 127 131

First 10 super-3 numbers:
261 462 471 481 558 753 1036 1046 1471 1645

First 10 super-4 numbers:
1168 4972 7423 7752 8431 10267 11317 11487 11549 11680
END

#First 10 super-5 numbers:
#4602 5517 7539 12955 14555 20137 20379 26629 32767 35689

#First 10 super-6 numbers:
#27257 272570 302693 323576 364509 502785 513675 537771 676657 678146

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
