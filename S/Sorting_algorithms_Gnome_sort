#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sorting_algorithms/Gnome_sort
#c# 2018-08-15 <RC
#p# OK

use feature 'say';
my $result;

sub gnome_sort
{
    my @a = @_;

    my $size = scalar(@a);
    my $i = 1;
    my $j = 2;
    while($i < $size) {
	if ( $a[$i-1] <= $a[$i] ) {
	    $i = $j;
	    $j++;
	} else {
	    @a[$i, $i-1] = @a[$i-1, $i];
	    $i--;
	    if ($i == 0) {
		$i = $j;
		$j++;
	    }
	}
    }
    return @a;
}
#my @arr = ( 10, 9, 8, 5, 2, 1, 1, 0, 50, -2 );
#print "$_\n" foreach gnome_sort( @arr );

use Test::More;
say 'input: ' . join ' ', @a = map+(int rand 100), 0 .. 50;
is_deeply([gnome_sort(@a)], [sort { $a <=> $b } @a]);
done_testing();
