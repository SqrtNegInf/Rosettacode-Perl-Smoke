#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Self_numbers
#c# 2021-01-13 >RC,  2022-05-28 >RC
#p# OK
#n# pretty inefficient, definitely don't try for 10**8

use strict;
use warnings;
use feature 'say';

use List::Util qw(max sum);

my ($i, $pow, $digits, $offset, $lastSelf, @selfs) 
 = ( 1,   10,       1,       9,         0,       );

my $final = 50;

while () {
   my $isSelf = 1;
   my $sum = my $start = sum split //, max(($i-$offset), 0);
   for ( my $j = $start; $j < $i; $j++ ) {
      ($isSelf *= 0) and last if $j+$sum == $i; # silly dodge to avoid warning 'should be =='
      #if ($j+$sum == $i) { $isSelf = 0 ; last }
      ($j+1)%10 != 0 ? $sum++ : ( $sum = sum split '', $j+1);
   }

   if ($isSelf) {
      push @selfs, $lastSelf = $i;
      last if @selfs == $final;
   }

   next unless ++$i % $pow == 0;
   $pow    *= 10;
   $offset  =  9 * $digits++
}

say my $result = "The first 50 self numbers are:\n" . join ' ', @selfs;

my $ref = <<'END';
The first 50 self numbers are:
1 3 5 7 9 20 31 42 53 64 75 86 97 108 110 121 132 143 154 165 176 187 198 209 211 222 233 244 255 266 277 288 299 310 312 323 334 345 356 367 378 389 400 411 413 424 435 446 457 468
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
