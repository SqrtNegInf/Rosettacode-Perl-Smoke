#!/usr/local/bin/perl
#u# https://www.rosettacode.org/wiki/Singular_value_decomposition
#c# 2024-09-20 <RC
#p# OK
#n# to get Math::GSL working again: cd /opt/local/lib; sudo ln -s libgsl.28.dylib 'libgsl.27.dylib'

my @res;

use strict;
use warnings;
use feature 'say';

use Math::GSL::Matrix;
use Math::GSL::Linalg qw/gsl_linalg_SV_decomp/;

my  $M         =   Math::GSL::Matrix->new(2, 2);
$M->set_elem(0,0,3)->set_elem(0,1,0)->set_elem(1,0,4)->set_elem(1,1,5);

my  $V         =   Math::GSL::Matrix->new(2, 2);
my ($S, $work) = ( Math::GSL::Vector->new(2), Math::GSL::Vector->new(2) );

gsl_linalg_SV_decomp($M->raw, $V->raw, $S->raw, $work->raw);

push @res, "U factor:\n";
for my $i (0 .. $M->rows - 1) { push @res, join(", ",$M->row($i)->as_list),"\n" }
push @res, "singular values:\n";
push @res, join(", ", map { sprintf("%.10g", $_) } $S->as_list), "\n";
push @res, "Vt factor:\n";
for my $i (0 .. $V->rows - 1) { push @res, join(", ",$V->row($i)->as_list),"\n" }


say my $result = join "", @res;

my $ref = <<'EOD';
U factor:
-0.316227766016838, -0.948683298050514
-0.948683298050514, 0.316227766016838
singular values:
6.708203932, 2.236067977
Vt factor:
-0.707106781186547, -0.707106781186547
-0.707106781186547, 0.707106781186547
EOD

use Test::More;
is ($result, $ref);
done_testing();
