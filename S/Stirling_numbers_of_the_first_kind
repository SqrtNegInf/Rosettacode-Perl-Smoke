#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Stirling_numbers_of_the_first_kind
#c# 2019-09-03 >RC
#p# OK

use strict;
use warnings;
use bigrat;
use feature 'say';
use feature 'state';
no warnings 'recursion';

use List::Util qw(max);

my @res;

sub Stirling1 {
    my($n, $k) = @_;
    return 1 unless $n || $k;
    return 0 unless $n && $k;
    state %seen;
    $seen{"{$n - 1}|{$k - 1}"} //= Stirling1($n - 1, $k - 1) +
    ($n - 1) * ($seen{"{$n - 1}|{$k}"} //= Stirling1($n - 1, $k))
}

my $upto = 12;
my $mx   = 1 + length max map { Stirling1(12,$_) } 0..$upto;

push @res, 'Unsigned Stirling1 numbers of the first kind: S1(n, k):';
push @res, 'n\k' . sprintf "%${mx}s"x(1+$upto), 0..$upto;

for my $row (0..$upto) {
    push @res, sprintf '%-3d', $row;
    map { $res[-1] .= sprintf "%${mx}d", Stirling1($row, $_) } 0..$row;
}

push @res, "\nMaximum value from the S1(100, *) row:";
push @res, max map { Stirling1(100,$_) } 0..100;

say my $result = join "\n", @res;

my $ref = <<'EOD';
Unsigned Stirling1 numbers of the first kind: S1(n, k):
n\k         0         1         2         3         4         5         6         7         8         9        10        11        12
0           1
1           0         1
2           0         1         1
3           0         2         3         1
4           0         6        11         6         1
5           0        24        50        35        10         1
6           0       120       274       225        85        15         1
7           0       720      1764      1624       735       175        21         1
8           0      5040     13068     13132      6769      1960       322        28         1
9           0     40320    109584    118124     67284     22449      4536       546        36         1
10          0    362880   1026576   1172700    723680    269325     63273      9450       870        45         1
11          0   3628800  10628640  12753576   8409500   3416930    902055    157773     18150      1320        55         1
12          0  39916800 120543840 150917976 105258076  45995730  13339535   2637558    357423     32670      1925        66         1

Maximum value from the S1(100, *) row:
19710908747055261109287881673376044669240511161402863823515728791076863288440277983854056472903481625299174865860036734731122707870406148096000000000000000000
EOD

use Test::More;
chop $ref;
is ($result, $ref);
done_testing();
