#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sorting_algorithms/Stooge_sort
#c# 2018-08-15 <RC
#p# OK

use strict;
use warnings;
use feature 'say';

sub stooge {
        use integer;
        my ($x, $i, $j) = @_;

        $i //= 0;
        $j //= $#$x;

        if ( $x->[$j] < $x->[$i] ) {
                @$x[$i, $j] = @$x[$j, $i];
        }
        if ( $j - $i > 1 ) {
                my $t = ($j - $i + 1) / 3;
                stooge( $x, $i,      $j - $t );
                stooge( $x, $i + $t, $j      ); 
                stooge( $x, $i,      $j - $t );
        }
}

use Test::More;
say 'input: ' . join ' ', my @a = my @b = map +(int rand 100), 1 .. 50;
stooge(\@b);
is_deeply(\@b, [sort { $a <=> $b } @b]);
done_testing();

