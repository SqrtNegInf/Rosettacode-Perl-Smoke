#!/usr/local/bin/perl
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sparkline_in_unicode
#c# 2018-08-14 <RC
#p# OK
#f# RC file: sparkline.txt

use open ':std', ':encoding(utf8)';

binmode(STDOUT, ":utf8");

sub sparkline {
  my $s = shift;
  my @n = split(/[\s,]+/,$s);
  return unless @n;
  my($min,$max) = ($n[0],$n[0]);
  for my $v (@n) { $min = $v if $v < $min; $max = $v if $v > $max; }
  $result .= sprintf "min: %5f; max %5f\n", $min, $max;
  my @bars = map { chr($_) } 0x2581 .. 0x2588;
  my $div = ($max - $min) / $#bars;
  $result .= join("", map { $bars[$div ? ($_-$min) / $div : @bars/2] } @n), "\n";
  $result .= "\n";
}

#while (1) {
#  print "Numbers separated by spaces/commas: ";
#  exit unless sparkline(scalar(<>));
#}

sparkline('1 2 3 4 5 6 7 8 7 6 5 4 3 2 1');
sparkline('1.5, 0.5 3.5, 2.5 5.5, 4.5 7.5, 6.5');
sparkline('3 2 1 0 -1 -2 -3 -4 -3 -2 -1 0 1 2 3');
sparkline('12 12 12 12');

open F, '>', 'run/sparkline.txt';
print F $result; 

my $ref = <<'EOD';
min: 1.000000; max 8.000000
▁▂▃▄▅▆▇█▇▆▅▄▃▂▁
min: 0.500000; max 7.500000
▂▁▄▃▆▅█▇
min: -4.000000; max 3.000000
█▇▆▅▄▃▂▁▂▃▄▅▆▇█
min: 12.000000; max 12.000000
▅▅▅▅
EOD
