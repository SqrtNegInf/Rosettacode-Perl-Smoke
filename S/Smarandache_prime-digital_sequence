#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Smarandache_prime-digital_sequence
#c# 2019-08-xx >RC
#p# OK

use strict;
use warnings;
use feature 'say';
use feature 'state';

use ntheory qw<is_prime>;
use Lingua::EN::Numbers qw(num2en_ordinal);

my @res;

my @prime_digits = <2 3 5 7>;

#my @spds = grep { is_prime($_) && /^[2357]+$/ } 1..100;
my @spds = grep { is_prime($_) && /^[@{[join '',@prime_digits]}]+$/ } 1..100;

#my @p = <23 27 33 37 53 57 73 77>;
my @p = map { $_+3, $_+7 } map { 10*$_ } @prime_digits;

while ($#spds < 100_000) {
    state $o++; 
    my $oom = 10**(1+$o); 
    my @q;
    for my $l (@prime_digits) {
        push @q, map { $l*$oom + $_ } @p;
    }
    push @spds, grep { is_prime($_) } @p = @q;
}

say 'Smarandache prime-digitals:';
push @res, sprintf "%22s: %s", ucfirst(num2en_ordinal($_)), $spds[$_-1] for 1..25, 100, 1000, 10_000, 100_000;

say my $result = join "\n", @res;

my $ref = <<'EOD';
                 First: 2
                Second: 3
                 Third: 5
                Fourth: 7
                 Fifth: 23
                 Sixth: 37
               Seventh: 53
                Eighth: 73
                 Ninth: 223
                 Tenth: 227
              Eleventh: 233
               Twelfth: 257
            Thirteenth: 277
            Fourteenth: 337
             Fifteenth: 353
             Sixteenth: 373
           Seventeenth: 523
            Eighteenth: 557
            Nineteenth: 577
             Twentieth: 727
          Twenty-first: 733
         Twenty-second: 757
          Twenty-third: 773
         Twenty-fourth: 2237
          Twenty-fifth: 2273
         One hundredth: 33223
        One thousandth: 3273527
        Ten thousandth: 273322727
One hundred thousandth: 23325232253
EOD

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre></pre>
