#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sum_of_elements_below_main_diagonal_of_matrix
#c# 2021-07-22 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use List::Util 'sum';

sub lower_triangle_sum_alt {
    our(@m,@elems); local *m = shift;
    push @elems, $m[$_]->@[0..$_-1] for 1..$#m;  # postfix de-ref avoids this: (@{$m[$_]})[0..$_-1]
    sum @elems;
}

sub lower_triangle_sum {
    our @m; local *m = shift;
    my $total;
    $total += sum splice @{$m[$_]}, 0, $_ for 1..$#m;
    $total;
}

say my $result = lower_triangle_sum(
[
    [  1,  3,  7,  8, 10 ],
    [  2,  4, 16, 14,  4 ],
    [  3,  1,  9, 18, 11 ],
    [ 12, 14, 17, 18, 20 ],
    [  7,  1,  3,  9,  5 ]
]);

use Test::More;
is($result, '69');
done_testing();
