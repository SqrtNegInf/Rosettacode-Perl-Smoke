#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Stern-Brocot_sequence
#c# 2018-08-13 <RC, 2018-11-06 <RC
#p# OK

use feature 'say';
my $result;

use ntheory qw/gcd vecsum vecfirst/;

sub stern_diatomic {
  my ($p,$q,$i) = (0,1,shift);
  while ($i) {
    if ($i & 1) { $p += $q; } else { $q += $p; }
    $i >>= 1;
  }
  $p;
}

my @s = map { stern_diatomic($_) } 1..15;
$result .= "First fifteen: [@s]\n";
@s = map { my $n=$_; vecfirst { stern_diatomic($_) == $n } 1..10000 } 1..10;
$result .= "Index of 1-10 first occurrence: [@s]\n";
$result .= "Index of 100 first occurrence: ". (vecfirst { stern_diatomic($_) == 100 } 1..10000). "\n";
$result .= "The first 999 consecutive pairs are ";
$result .= (vecsum( map { gcd(stern_diatomic($_).stern_diatomic($_+1)) } 1..999 ) == 999) ? "all coprime.\n" : "NOT all coprime!\n";

say $result;
my $ref = <<'END';
First fifteen: [1 1 2 1 3 2 3 1 4 3 5 2 5 3 4]
Index of 1-10 first occurrence: [1 3 5 9 11 33 19 21 35 39]
Index of 100 first occurrence: 1179
The first 999 consecutive pairs are NOT all coprime!
END

use Test::More;
is ($result, $ref);
done_testing();
