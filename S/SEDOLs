#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/SEDOLs
#c# 2018-08-18 <RC, 2023-04-07 >RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

use List::Util qw(sum);
use POSIX qw(strtol);

sub zip :prototype(&\@\@) {
  my $f = shift;
  my @a = @{shift()};
  my @b = @{shift()};
  my @result;
  push(@result, $f->(shift @a, shift @b)) while @a && @b;
  return @result;
}

my @weights = (1, 3, 1, 7, 3, 9);
sub sedol :prototype($) {
  my $s = shift;
  $s =~ /[AEIOU]/ and die "No vowels";
  my @vs = map {(strtol $_, 36)[0]} split //, $s;
  my $checksum = sum (zip {$_[0] * $_[1]} @vs, @weights);
  my $check_digit = (10 - $checksum % 10) % 10;
  return $s . $check_digit;
}

push @res, sedol($_) for <710889 B0YBKJ 406566 B0YBLH 228276 B0YBKL 557910 B0YBKR 585284 B0YBKT B00030>;

say my $result = join "\n", @res;

my $ref = <<'END';
7108899
B0YBKJ7
4065663
B0YBLH2
2282765
B0YBKL9
5579107
B0YBKR5
5852842
B0YBKT7
B000300
END

use Test::More;
chop $ref;
is ($result, $ref);
done_testing();
