#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Smallest_number_k_such_that_k%2B2%5Em_is_composite_for_all_m_less_than_k
#c# 2022-01-12 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use bigint;
use ntheory 'is_prime';
#use Math::AnyNum 'is_prime'; # also needs 'use bigint'

my $result;

my($k,$cnt) = (1,0);
LOOP: while (1) {
    next unless 1 == ++$k % 2;
    for my $m (1..$k-1) {
        #next LOOP if is_prime $k + (1<<$m) # cleverer, but not faster
        next LOOP if is_prime $k + 2**$m
    }
    $result .= "$k ";
    last if ++$cnt == 5;
}

# slightly terser version
#my($k,$cnt) = (1,0);
#LOOP: while (1) {
#    next if 0 == ++$k % 2;
#    is_prime($k + 2**$_) and next LOOP for 1..$k-1;
#    $result .= "$k " and ++$cnt == 5 and last;
#}

say $result;

use Test::More;
is($result, '773 2131 2491 4471 5101 ');
done_testing;
