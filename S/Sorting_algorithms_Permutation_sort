#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sorting_algorithms/Permutation_sort
#c# 2018-08-15 <RC
#p# OK
#n# slows dramatically for n > 10

use strict;
use warnings;
use feature 'say';

# Pass a list in by reference, and sort in situ.

sub psort {
        my ($x, $d) = @_;

        unless ($d //= $#$x) {
                $x->[$_] < $x->[$_ - 1] and return for 1 .. $#$x;
                return 1
        }

        for (0 .. $d) {
                unshift @$x, splice @$x, $d, 1;
                next if $x->[$d] < $x->[$d - 1];
                return 1 if psort($x, $d - 1);
        }
}

use Test::More;
srand 123;
say 'input: ' . join ' ', my @a = my @b = map+(int rand 100), 0 .. 10;
psort(\@b);
is_deeply(\@b, [sort { $a <=> $b } @b]);
done_testing();
