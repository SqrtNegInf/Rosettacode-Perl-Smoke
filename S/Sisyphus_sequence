#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Sisyphus_sequence
#c# 2023-0x-xx NOT ON RC
#p# OK

my @res;

#use v5.36;
use strict; use warnings; use feature 'say';

use ntheory 'next_prime';
use  List::Util <any max>;

sub comma { reverse ((reverse shift) =~ s/.{3}\K/,/gr) =~ s/^,//r }
sub table { my $t = 10 * (my $c = 1 + length max @_); ( sprintf( ('%'.$c.'d')x@_, @_) ) =~ s/.{1,$t}\K/\n/gr }

my ($i, $j, $p, @S, %H) = (3, 7, 1, 1);
while () {
   push @S, (0 == $S[-1] % 2) ? $S[-1]/2 : $S[-1] + ($p = next_prime($p));
   ($H{scalar @S}{value} = $S[-1] and $H{scalar @S}{prime} = $p) if any { 10**$_ == scalar @S } $i..$j;
   last if 10**$j == scalar @S;
}


push @res, 'The first 100 members of the Sisyphus sequence are:';
push @res, table @S[0..99];

push @res, sprintf "%12s member is: %10s with prime: %10s", comma($_), comma($H{$_}{value}), comma($H{$_}{prime})
    for map { 10**$_ } $i..$j;

say my $result = join "\n", @res;

my $ref = <<'END';
The first 100 members of the Sisyphus sequence are:
   1   3   6   3   8   4   2   1   8   4
   2   1  12   6   3  16   8   4   2   1
  18   9  28  14   7  30  15  44  22  11
  42  21  58  29  70  35  78  39  86  43
  96  48  24  12   6   3  62  31  92  46
  23  90  45 116  58  29 102  51 130  65
 148  74  37 126  63 160  80  40  20  10
   5 106  53 156  78  39 146  73 182  91
 204 102  51 178  89 220 110  55 192  96
  48  24  12   6   3 142  71 220 110  55

       1,000 member is:        990 with prime:      2,273
      10,000 member is:     24,975 with prime:     30,713
     100,000 member is:    265,781 with prime:    392,111
   1,000,000 member is:  8,820,834 with prime:  4,761,697
  10,000,000 member is: 41,369,713 with prime: 55,900,829
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre>
</pre>
