#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Sub-unit_squares
#c# 2022-09-23 NOT ON RC
#p# OK
#n# like J, but even a little more so (and slightly skeezy)
#n# 8th term is slow:  488.51s user 0.87s system 99% cpu 8:09.53 total
#n# (but roughly twice the speed of -1)

my @res = 1;

use v5.36;
use ntheory 'is_square';

my($u,$c) = (-5);

LOOP:
while ($u += 10) {
    my $n = join '', map { ++$_ } split '', $u**2;
    next unless is_square($n);
    next if $n =~ /0/;  # need for > 7 
    push @res, $n; 
    last LOOP if ++$c == 6;
}

say my $result = join "\n", @res;

my $ref = <<'END';
1
36
3136
24336
5973136
71526293136
318723477136
END
# 54_697_349_106_126_736 # false match if 0's not blocked
#264_779_654_424_693_136 # 8th term

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
