#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sieve_of_Eratosthenes
#c# 2018-08-16 <RC
#p# OK

use strict;
use warnings;
use feature 'say';

sub sieve2 {
  my($n) = @_;
  return ([],[],[2],[2,3],[2,3])[$n] if $n <= 4;

  my @composite;
  for (my $t = 3;  $t*$t <= $n;  $t += 2) {
     if (!$composite[$t]) {
        for (my $s = $t*$t;  $s <= $n;  $s += $t*2)
           { $composite[$s]++ }
     }
  }
  my @primes = (2);
  for (my $t = 3;  $t <= $n;  $t += 2) { 
     $composite[$t] || push @primes, $t;
  }
  @primes;
}

say my $result = join ' ', sieve2(100);

use Test::More;
is ($result, '2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97');
done_testing;
