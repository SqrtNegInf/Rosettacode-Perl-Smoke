#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sorting_algorithms/Merge_sort
#c# 2018-08-15 <RC
#p# OK

use strict;
use warnings;
use feature 'say';

sub merge_sort {
    my @x = @_;
    return @x if @x < 2;
    my $m = int @x / 2;
    my @a = merge_sort(@x[0 .. $m - 1]);
    my @b = merge_sort(@x[$m .. $#x]);
    for (@x) {
        $_ = !@a            ? shift @b
           : !@b            ? shift @a
           : $a[0] <= $b[0] ? shift @a
           :                  shift @b;
    }
    @x;
}

use Test::More;
say 'input: ' . join ' ', my @a = map (int rand 100), 0 .. 50;
is_deeply([merge_sort(@a)], [sort { $a <=> $b } @a]);
done_testing();
