#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sieve_of_Pritchard
#c# 2022-xx-xx >RC
#p# OK

my @res;

use v5.36;

use List::Util 'min';

my $limit  = 150;
my $maxS   = 1;
my $length = 2;
my $p      = 3;
my @s;

sub append($w) {
    $s[$maxS-1] = $w;
    $s[$w-2] = $maxS;
    $maxS = $w;
}

sub next_($w) { $s[$w-1] }
sub prev($w)  { $s[$w-2] }

sub delete_multiples_of($p) {
    my $f = $p;
    while ($p*$f <= $length) { $f = next_($f) }
    while ($f > 1) {
        $f = prev($f);
        delete_pf($p*$f);
    }
}

sub delete_pf($pf) {
    my($temp1, $temp2) = ($s[$pf-2], $s[$pf-1]);
    $s[$temp1-1]       = $temp2;
    $s[($temp2-2)%@s]  = $temp1;
}

sub extend_to($n) {
    my($w,$x) = (1,$length + 1);
    while ($x <= $n) {
        append $x;
        $w = next_($w);
        $x = $length + $w;
    }
    $length = $n;
    append $limit+2 if $length == $limit
}

while ($p*$p <= $limit) {
    extend_to min $p*$length, $limit if $length < $limit;
    delete_multiples_of($p);
    $p = next_(1);
    extend_to $limit if $length < $limit
}

# Done, build the list of actual primes from the array
$p = 3;
my @primes = 2; 
while ($p <= $limit) {
    push @primes, $p;
    $p = next_($p);
}

say my $result = join ' ', @primes;

my $ref = '2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149';

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|xx}}
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre style="height:20ex">
</pre>
[[File:xx|300px|thumb|right]]
# or
[https://github.com/SqrtNegInf/Rosettacode-Perl-Smoke/blob/master/ref/xx xx]
