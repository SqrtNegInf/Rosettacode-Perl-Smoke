#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Square_Root_by_Hand
#c# 2020-12-xx >RC
#p# OK

use strict;
use warnings;
use feature 'say';

my @res;

sub integral   { my($n) = @_; (length($n) % 2 != 0 ? '0' . $n  : $n) =~ /../g }
sub fractional { my($n) = @_; (length($n) % 2 == 0 ? $n  . '0' : $n) =~ /../g }

sub SpigotSqrt {
    my($in) = @_;

    my(@dividends, @fractional, $dividend, $quotient, $remainder, $accum);
    my $d   = 9;
    my $D   = '';
    my $dot = 0;

    if ($in == int $in) {
        @dividends =    integral($in);
    } else {
        @dividends  =   integral($in =~ /(.*)\./);
        @fractional = fractional($in =~ /\.(.*)/);
    }
    $dividend = shift @dividends;

    while () {
        until ( ( $remainder = $dividend - ($D.$d) * $d ) >= 0) { $d-- } 

        $accum    .= $d;
        $quotient .= $d;
        unless (@dividends) {
            last if $remainder == 0 and $quotient != 0 and !@fractional;
            unless ($dot) { $accum .= '.' and $dot = 1 }
            if (@fractional) {
                push @dividends, @fractional;
                @fractional = ();
            } else {
                push @dividends, '00';
            }
        }
        $dividend = $remainder . shift @dividends;
        $D = 2 * $quotient;
        $d = 9
    }
    return $accum;
}

push @res, "The square root of $_ is " . SpigotSqrt $_ for < 25 0.0625 152.2756 >;

#for (< 25 0.0625 152.2756 >) { # 13579.02468
#   push @res, "The square root of $_ is " . SpigotSqrt $_;
#}

say my $result = join "\n", @res;

my $ref = <<'END';
The square root of 25 is 5
The square root of 0.0625 is 0.25
The square root of 152.2756 is 12.34
END

#The square root of 13579.02468 is 116.5290722523782903561833846788464631805119729204989141878325473726703822155976113726101636833624692173...

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Raku}}
<lang perl></lang>
{{out}}
<pre></pre>
