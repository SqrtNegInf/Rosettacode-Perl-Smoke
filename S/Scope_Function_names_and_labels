#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Scope/Function_names_and_labels
#c# 2019-09-11 >RC
#p# OK

use strict;
use warnings;
no warnings 'redefine';
use feature 'say';

my @res;

sub logger { push @res, shift . ": Dicitur clamantis in deserto." }; 

logger('A');

Highlander::logger('B');

package Highlander { 

logger('C');

sub logger { push @res, shift . ": I have something to say." }; 

sub down_one_level {

    sub logger { push @res, shift . ": I am a man, not a fish." };

    sub down_two_levels {
        sub logger { push @res, shift . ": There can be only one!" };
    }
}

logger('D');

}

logger('E');

sub logger { push @res, shift . ": This thought intentionally left blank." }; 

my $ref = <<'END';
A: This thought intentionally left blank.
B: There can be only one!
C: There can be only one!
D: There can be only one!
E: This thought intentionally left blank.
END

say my $result = join "\n", @res;

use Test::More;
chomp $ref;
is($result,$ref);
done_testing();
