#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Statistics/Basic
#c# 2018-08-13 <RC
#p# OK
#n# oops, was not displaying Mean/Stddev

srand 123456;

use strict;
use warnings;
use feature 'say';
my $result;

sub calc {
my($n) = @_;
my @histogram = (0) x 10;
my $sum = 0;
my $sum_squares = 0;
#my $n = $ARGV[0];

for (1..$n) { 
  my $current = rand();
  $sum+= $current;
  $sum_squares+= $current ** 2;
  $histogram[$current * @histogram]+= 1;
}

my $mean = $sum / $n;

$result .= "$n numbers\n". 
      "Mean:   $mean\n".
      "Stddev: ". sqrt(($sum_squares / $n) - ($mean ** 2)); $result .= "\n";

for my $i (0..$#histogram) {
  $result .= sprintf "%.1f - %.1f : ", $i/@histogram, (1 + $i)/@histogram;

  $result .= "*" x (30 * $histogram[$i] * @histogram/$n); # 30 stars expected per row
  $result .= "\n";
}
$result .= "\n";

}

#Usage: perl rand_statistics.pl (number of values)
#$ perl rand_statistics.pl 100

calc(100);
calc(1000);
calc(100000);

say $result;
my $ref = <<'EOD'; 
100 numbers
Mean:   0.531078896994115
Stddev: 0.314206913418202
0.0 - 0.1 : ***************************************
0.1 - 0.2 : ******************
0.2 - 0.3 : ************************************
0.3 - 0.4 : *********************
0.4 - 0.5 : ***************************
0.5 - 0.6 : ************************
0.6 - 0.7 : ******************************
0.7 - 0.8 : ************************
0.8 - 0.9 : ***************************
0.9 - 1.0 : ******************************************************

1000 numbers
Mean:   0.508186429717573
Stddev: 0.2879059975643
0.0 - 0.1 : **************************
0.1 - 0.2 : ******************************
0.2 - 0.3 : *******************************
0.3 - 0.4 : ************************
0.4 - 0.5 : *******************************
0.5 - 0.6 : ************************************
0.6 - 0.7 : **************************
0.7 - 0.8 : **********************************
0.8 - 0.9 : ************************
0.9 - 1.0 : *********************************

100000 numbers
Mean:   0.498177100872547
Stddev: 0.288778316107295
0.0 - 0.1 : ******************************
0.1 - 0.2 : ******************************
0.2 - 0.3 : ******************************
0.3 - 0.4 : ******************************
0.4 - 0.5 : *****************************
0.5 - 0.6 : ******************************
0.6 - 0.7 : *****************************
0.7 - 0.8 : *****************************
0.8 - 0.9 : ******************************
0.9 - 1.0 : *****************************

EOD

use Test::More;
is ($result, $ref);
done_testing;
