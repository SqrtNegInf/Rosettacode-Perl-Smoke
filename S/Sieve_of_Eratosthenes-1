#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sieve_of_Eratosthenes
#c# 2018-08-16 <RC
#p# OK

use strict;
use warnings;
use feature 'say';
my $result;

sub sieve {
  my $n = shift;
  my @composite;
  for my $i (2 .. int(sqrt($n))) {
    if (!$composite[$i]) {
      for (my $j = $i*$i; $j <= $n; $j += $i) {
        $composite[$j] = 1;
      }
    }
  }
  my @primes;
  for my $i (2 .. $n) {
    $composite[$i] || push @primes, $i;
  }
  @primes;
}

say $result = join ' ', sieve(100);

use Test::More;
is ($result, '2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97');
done_testing();
