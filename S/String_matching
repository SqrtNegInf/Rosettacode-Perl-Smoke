#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/String_matching
#c# 2018-08-13 <RC
#p# OK

my $result;

use strict;
use warnings;

my $str1 = 'abc ghi def ghi';
my $str2 = 'ghi';

# Using regexes:
$result .= $str1 =~ /^\Q$str2\E/ ?  'y' : 'n'; # true if $str1 starts with $str2
$result .= $str1 =~ /\Q$str2\E/ ?  'y' : 'n';  # true if $str1 contains $str2
$result .= $str1 =~ /\Q$str2\E$/ ?  'y' : 'n'; # true if $str1 ends with $str2

# Using index:
$result .= index($str1, $str2) == 0 ?  'y' : 'n';                              # true if $str1 starts with $str2
$result .= index($str1, $str2) != -1 ?  'y' : 'n';                             # true if $str1 contains $str2
$result .= rindex($str1, $str2) == length($str1) - length($str2) ?  'y' : 'n'; # true if $str1 ends with $str2

# Using substr:
$result .= substr($str1, 0, length($str2)) eq $str2 ?  'y' : 'n'; # true if $str1 starts with $str2
$result .= substr($str1, - length($str2)) eq $str2 ?  'y' : 'n';  # true if $str1 ends with $str2

$result .= ' ';

# Bonus task (printing all positions where $str2 appears in $str1):
$result .= $-[0] . ' ' while $str1 =~ /\Q$str2\E/g;  # using a regex
my $i = -1; $result .= $i . ' ' while ($i = index $str1, $str2, $i + 1) != -1;  # using index

print "$result\n";

use Test::More;
is ($result, 'nyynyyny 4 12 4 12 ');
done_testing();
