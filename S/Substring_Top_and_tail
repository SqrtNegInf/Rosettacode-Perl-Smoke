#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Substring/Top_and_tail
#c# 2018-08-13 <RC
#p# OK

my $result;

use strict;
use warnings;
use feature 'say';

use utf8;
binmode(STDOUT, ':utf8');

$result .= substr("knight",1). "\n";        # strip first character
$result .= substr("socks", 0, -1). "\n";    # strip last character
$result .= substr("brooms", 1, -1). "\n";   # strip both first and last characters

#In perl, we can also remove the last character from a string variable with the chop function:
my $string = 'ouch';
my $bits = chop($string);       # The last letter is returned by the chop function
$result .= $bits . "\n";        # h
$result .= $string . "\n";      # ouc    # See we really did chop the last letter off

# fine with 'narrow' chars;
my $s = '♯♮♭𝄫';
say substr($s,0,$_) for <1 2 3 4>;
chop $s; say $s;
chop $s; say $s;
say '';

# but this is not right
my $t = '1n⃗34';
say "$_ chars: " . substr($t,0,$_) for <1 2 3 4>;
say '';

say $result; 
my $ref = <<'EOD';
night
sock
room
h
ouc
EOD

use Test::More;
is ($result, $ref);
done_testing;
