#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Sum_of_divisors
#c# 2020-12-xx >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use ntheory 'divisor_sum';

my @x;
push @x, scalar divisor_sum($_) for 1..100;

say "Divisor sums - first 100:";

say my $result = ((sprintf "@{['%4d' x 100]}", @x[0..100-1]) =~ s/(.{80})/$1\n/gr);

my $ref = <<'END';
   1   3   4   7   6  12   8  15  13  18  12  28  14  24  24  31  18  39  20  42
  32  36  24  60  31  42  40  56  30  72  32  63  48  54  48  91  38  60  56  90
  42  96  44  84  78  72  48 124  57  93  72  98  54 120  72 120  80  90  60 168
  62  96 104 127  84 144  68 126  96 144  72 195  74 114 124 140  96 168  80 186
 121 126  84 224 108 132 120 180  90 234 112 168 128 144 120 252  98 171 156 217
END

use Test::More;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{libheader|ntheory}}
<lang perl></lang>
{{out}}
<pre></pre>
