#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Selection_bias_in_clinical_sciences
#t# inprogress
#c# 2022-11-2x >RC
#p# OK

use v5.036;

srand 123456;

use Data::Printer;          # debug only
use Time::HiRes qw(sleep);  # debug only
use List::Util 'sum';

use enum qw<False True UNTREATED REGULAR IRREGULAR>;
use constant DOSE_FOR_REGULAR => 100;

my ($nSubjects,$duration,$interval) = (10000, 180, 30);
my (@dosage)   = (0)         x $nSubjects;
my (@category) = (UNTREATED) x $nSubjects;
my (@hadcovid) = (False)     x $nSubjects;

sub update {
   my $pCovid=1e-3; 
   my $pStartTreatment=5e-3; 
   my $pRedose=1/4;
   my @dRange=<3 6 9>;
   for my $i (0 .. $#dosage) { 
      unless ($hadcovid[$i]) { 
         if (rand() < $pCovid) { 
            $hadcovid[$i] = True
         } else {
            my $dose = $dosage[$i];
            if ($dose==0 && rand() < $pStartTreatment or $dose > 0 && rand() < $pRedose) {               
	           $dosage[$i]   = $dose += $dRange[3*rand()];
               $category[$i] = ($dose > DOSE_FOR_REGULAR) ? REGULAR : IRREGULAR
            } 
         } 
      } 
   } 
}

sub kruskal (@sets) {
   my @ranked     = sort { $a cmp $b } @sets;
   my $n          = @ranked;
   my @sr         = (0) x @sets;
   my $ix         = 0; #(@ranked.first: * == True, :k)+1, 
   my ($arf,$art) = ($ix/2, ($ix+$n)/2);

  #for @sets.kv -> \i,@set { for @set -> $b { @sr[i] += $b ?? $art !! $arf } } 

   my $H = sum map { my $s = $sr[$_]; $s**2 / scalar($sets[$_]) } 0..$#sr; # [+] @sr.kv.map: -> \i,\s { s*s/@sets[i].elems }
   return 12/($n*($n+1)) * $H - 3 * ($n + 1)
}

my($unt,$irr,$reg,$hunt,$hirr,$hreg,@sunt,@sirr,@sreg);
my $midpoint = int $duration / 2;

my $result = "Total subjects: $nSubjects\n";

for my $day (1 .. $duration) { 
   update();
   if (0 == $day % $interval or $day == $duration or $day == $midpoint) { 
      #@sunt = @hadcovid[ @category.grep: UNTREATED,:k ];
      #@sirr = @hadcovid[ @category.grep: IRREGULAR,:k ]; 
      #@sreg = @hadcovid[ @category.grep: REGULAR,  :k ]; 
      $unt  = @sunt;
      $irr  = @sirr;
      $reg  = @sreg;
      $hunt = sum @sunt;
      $hirr = sum @sirr;
      $hreg = sum @sreg;
   } 
   if (0 == $day % $interval) {
      $result .= sprintf "Day %d:\n", $day;
      $result .= sprintf "Untreated:     N = %4d, with infection = %4d\n",  $unt,$hunt;
      $result .= sprintf "Irregular Use: N = %4d, with infection = %4d\n",  $irr,$hirr;
      $result .= sprintf "Regular Use:   N = %4d, with infection = %4d\n\n",$reg,$hreg
   } 
   if ($day == $midpoint or $day == $duration) { 
      my $stage = $day == $midpoint ? 'midpoint' : 'study end';
      $result .= sprintf "At $stage, Infection case percentages are:\n";
      $result .= sprintf "  Untreated : %f\n",  100*$hunt/$unt;
      $result .= sprintf "  Irregulars: %f\n",  100*$hirr/$irr;
      $result .= sprintf "  Regulars  : %f\n\n",100*$hreg/$reg
   }    
}

$result .= sprintf "Final statistics: H = %f\n", kruskal ( @sunt, @sirr, @sreg );

say $result;

my $ref = <<'END';
Total subjects: 10000
Day 30:
Untreated:     N = 8684, with infection =  252
Irregular Use: N = 1316, with infection =   16
Regular Use:   N =    0, with infection =    0

Day 60:
Untreated:     N = 7599, with infection =  481
Irregular Use: N = 2249, with infection =   65
Regular Use:   N =  152, with infection =    1

Day 90:
Untreated:     N = 6616, with infection =  658
Irregular Use: N = 2333, with infection =  141
Regular Use:   N = 1051, with infection =   16

At midpoint, Infection case percentages are:
  Untreated : 9.945586
  Irregulars: 6.043721
  Regulars  : 1.522360

Day 120:
Untreated:     N = 5765, with infection =  811
Irregular Use: N = 2176, with infection =  187
Regular Use:   N = 2059, with infection =   60

Day 150:
Untreated:     N = 5067, with infection =  956
Irregular Use: N = 1901, with infection =  245
Regular Use:   N = 3032, with infection =  128

Day 180:
Untreated:     N = 4505, with infection = 1068
Irregular Use: N = 1654, with infection =  308
Regular Use:   N = 3841, with infection =  210

At study end, Infection case percentages are:
  Untreated : 23.706992
  Irregulars: 18.621524
  Regulars  : 5.467326

Final statistics: H = 211.439120

END

use Test::More;
chomp $ref;
is($result, $ref);
#is(($result =~ s/\s//gr), ($ref =~ s/\s//gr));
done_testing();

__END__

=={{header|Perl}}==
{{trans|Raku}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre>
</pre>
