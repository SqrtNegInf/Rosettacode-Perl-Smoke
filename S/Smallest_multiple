#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Smallest_multiple
#c# 2021-10-xx >RC
#p# OK
#n# borrowed code from 'Least_common_multiple'

my @res;

use strict;
use warnings;
use feature 'say';

use bigint;

sub gcd {
	my ($x, $y) = @_;
	while ($x) { ($x, $y) = ($y % $x, $x) }
	$y
}

sub lcm {
	my ($x, $y) = @_;
	($x && $y) and $x / gcd($x, $y) * $y or 0
}

for my $n (<10 20 200>) {
    my $m = 1;
    map { $m = lcm($m,$_) }  2..$n;
    push @res, "$n: $m";
}

say my $result = join "\n", @res; 

my $ref = <<'EOD';
10: 2520
20: 232792560
200: 337293588832926264639465766794841407432394382785157234228847021917234018060677390066992000
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
