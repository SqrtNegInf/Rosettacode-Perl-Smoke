#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Vector
#c# 2018-08-06 <RC, 2023-03-19 >RC
#p# OK
#n# typically we would use a module, such as Math::Vector::Real or Math::Complex. Here is a very basic Moose class.

my @res;

use v5.36;

package Vector;
use Moose;

use overload '+'  => \&add,
             '-'  => \&sub,
             '*'  => \&mul,
             '/'  => \&div,
             '""' => \&stringify;

has 'x' => (is =>'rw', isa => 'Num', required => 1);
has 'y' => (is =>'rw', isa => 'Num', required => 1);

sub add ($a, $b, $) { Vector->new( x => $a->x + $b->x, y => $a->y + $b->y) }
sub sub ($a, $b, $) { Vector->new( x => $a->x - $b->x, y => $a->y - $b->y) }
sub mul ($a, $b, $) { Vector->new( x => $a->x * $b,    y => $a->y * $b)    }
sub div ($a, $b, $) { Vector->new( x => $a->x / $b,    y => $a->y / $b)    }
sub stringify ($self, $, $) { '(' . $self->x . ',' . $self->y . ')' }

package main;

my $a = Vector->new(x => 5, y => 7);
my $b = Vector->new(x => 2, y => 3);
push @res, "a:    $a";
push @res, "b:    $b";
push @res, "a+b:  ".($a+$b);
push @res, "a-b:  ".($a-$b);
push @res, "a*11: ".($a*11);
push @res, "a/2:  ".($a/2 );

say my $result = join "\n", @res; 

my $ref = <<'EOD';
a:    (5,7)
b:    (2,3)
a+b:  (7,10)
a-b:  (3,4)
a*11: (55,77)
a/2:  (2.5,3.5)
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
