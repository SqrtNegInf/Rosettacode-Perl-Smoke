#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Verhoeff_algorithm
#c# 2021-08-26 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

my @inv = qw(0 4 3 2 1 5 6 7 8 9);

my @d = map [ split ], split /\n/, <<'END';
0 	1 	2 	3 	4 	5 	6 	7 	8 	9
1 	2 	3 	4 	0 	6 	7 	8 	9 	5
2 	3 	4 	0 	1 	7 	8 	9 	5 	6
3 	4 	0 	1 	2 	8 	9 	5 	6 	7
4 	0 	1 	2 	3 	9 	5 	6 	7 	8
5 	9 	8 	7 	6 	0 	4 	3 	2 	1
6 	5 	9 	8 	7 	1 	0 	4 	3 	2
7 	6 	5 	9 	8 	2 	1 	0 	4 	3
8 	7 	6 	5 	9 	3 	2 	1 	0 	4
9 	8 	7 	6 	5 	4 	3 	2 	1 	0
END

my @p = map [ split ], split /\n/, <<'END';
0 	1 	2 	3 	4 	5 	6 	7 	8 	9
1 	5 	7 	6 	2 	8 	3 	0 	9 	4
5 	8 	0 	3 	7 	9 	6 	1 	4 	2
8 	9 	1 	6 	0 	4 	3 	5 	2 	7
9 	4 	5 	3 	1 	2 	6 	8 	7 	0
4 	2 	8 	6 	5 	7 	3 	9 	0 	1
2 	7 	9 	3 	8 	0 	6 	4 	1 	5
7 	0 	4 	6 	9 	1 	3 	2 	5 	8
END

my $debug;

sub generate {
  local $_ = shift() . 0;
  my $c = my $i = 0;
  my ($n, $p);
  $debug and push @res, "i ni d(c,p(i%8,ni)) c";
  while( length ) {
    $c = $d[ $c ][ $p = $p[ $i % 8 ][ $n = chop ] ];
    $debug and push @res, sprintf "%d%3d%7d%10d", $i, $n, $p, $c;
    $i++;
  }
  return $inv[ $c ];
}

sub validate { shift =~ /(\d+)(\d)/ and $2 == generate($1) }

for ( 236, 12345, 123456789012 ) {
  push @res, "testing $_";
  $debug = length() < 6;
  my $checkdigit = generate($_);
  push @res, "check digit for $_ is $checkdigit";
  $debug = 0;
  for my $cd ( $checkdigit, 9 ) {
    push @res, "$_$cd is " . (validate($_ . $cd) ? '' : 'not ') . "valid";
  }
  push @res, '';
}

say my $result = join "\n", @res;

my $ref = <<'EOD';
testing 236
i ni d(c,p(i%8,ni)) c
0  0      0         0
1  6      3         3
2  3      3         1
3  2      1         2
check digit for 236 is 3
2363 is valid
2369 is not valid

testing 12345
i ni d(c,p(i%8,ni)) c
0  0      0         0
1  5      8         8
2  4      7         1
3  3      6         7
4  2      5         2
5  1      2         4
check digit for 12345 is 1
123451 is valid
123459 is not valid

testing 123456789012
check digit for 123456789012 is 0
1234567890120 is valid
1234567890129 is not valid
EOD

use Test::More;
is ($result, $ref);
done_testing;
