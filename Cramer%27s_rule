#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Cramer%27s_rule
#c# 2018-07-26 <RC
#p# OK

use feature 'say';
my $result;

use Math::Matrix;
 
sub cramers_rule {
    my ($A, $terms) = @_;
    my @solutions;
    my $det = $A->determinant;
    foreach my $i (0 .. $#{$A}) {
        my $Ai = $A->clone;
        foreach my $j (0 .. $#{$terms}) {
            $Ai->[$j][$i] = $terms->[$j];
        }
        push @solutions, $Ai->determinant / $det;
    }
    @solutions;
}
 
my $matrix = Math::Matrix->new(
    [2, -1,  5,  1],
    [3,  2,  2, -6],
    [1,  3,  3, -1],
    [5, -2, -3,  3],
);
 
my $free_terms = [-3, -32, -47, 49];
my ($w, $x, $y, $z) = cramers_rule($matrix, $free_terms);
 
$result .=  "w = $w\n";
$result .=  "x = $x\n";
$result .=  "y = $y\n";
$result .=  "z = $z\n";

say $result; 

my $ref = <<'EOD';
w = 2
x = -12
y = -4
z = 1
EOD

use Test::More;
is ($result, $ref);
done_testing();
