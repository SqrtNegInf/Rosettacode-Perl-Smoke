#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Generate_Chess960_starting_position
#c# 2018-08-09 <RC
#p# OK

my $result;

srand 123456;

use strict;
use warnings;
use feature 'say';

# Directly generates a configuration by inserting pieces at random appropriate places. 
# Each config has an equal chance of being produced.

sub rnd :prototype($) { int(rand(shift)) }

sub empties { grep !$_[0][$_], 0 .. 7 }

sub chess960 {
	my @s = (undef) x 8;
	@s[2*rnd(4), 1 + 2*rnd(4)] = qw/B B/;

	for (qw/Q N N/) {
		my @idx = empties \@s;
		$s[$idx[rnd(@idx)]] = $_;
	}

	@s[empties \@s] = qw/R K R/;
	@s
}
$result .= "@{[chess960]}\n" for 0 .. 10;

say $result; 

my $ref = <<'EOD';
N N R Q K B B R
R B B K N R N Q
N N B B Q R K R
R Q B K R B N N
R N K B R N B Q
R K N Q R N B B
B N R Q K B N R
B R K R N Q N B
N Q R K N R B B
N R K Q R N B B
N N B R K B R Q
EOD

use Test::More;
is ($result, $ref);
done_testing;
