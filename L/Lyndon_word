#!/usr/local/bin/perl
#u# https://www.rosettacode.org/wiki/Lyndon_word
#c# 2024-09-12 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

sub nextword {
   my ($n, $w, $alphabet) = @_;
   my $x = substr($w x (int($n / length($w)) + 1), 0, $n);
   while ($x && substr($x, -1) eq substr($alphabet, -1)) {
      substr($x, -1) = ''
   }
   if ($x ne '') {
      my $next_char_index = (index($alphabet, substr($x, -1)) // 0) + 1;
      substr($x, -1, 1) = substr($alphabet, $next_char_index, 1);
   }
   return $x;
}

sub generate_words {
   my ($n, $alphabet) = @_;
   my $w = substr($alphabet, 0, 1);
   my @result;
   while (length($w) <= $n) {
      push @result, $w;
      last unless $w = nextword($n, $w, $alphabet);
   }
   return @result;
};

push @res, $_ for generate_words(5, '01');

say my $result = join "\n", @res;

my $ref = <<'EOD';
0
00001
0001
00011
001
00101
0011
00111
01
01011
011
0111
01111
1
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
