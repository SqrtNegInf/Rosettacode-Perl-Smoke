#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Loop_over_multiple_arrays_simultaneously
#c# 2018-08-17 <RC
#p# OK
#n# This implementation will stop producing items when the shortest array ends.

my $result;

use strict;
use warnings;
use feature 'say';

sub zip :prototype(&@) {
    my $code = shift;
    my $min;
    $min = $min && $#$_ > $min ? $min : $#$_ for @_;

    for my $i(0..$min){ $code->(map $_->[$i] ,@_) }
}

my @a1 = < a b c >;
my @a2 = < A B C >;
my @a3 = < 1 2 3 >;

zip { $result .= join(' ', @_)."\n" } \(@a1, @a2, @a3);

say $result; 

my $ref = <<'EOD';
a A 1
b B 2
c C 3
EOD

use Test::More;
is ($result, $ref);
done_testing();
