#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Least_m_such_that_n!_%2B_m_is_prime
#c# 2023-04-30 >RC
#p# OK

my @res;

use v5.36;
#use strict; use warnings; use feature 'say';
use ntheory qw<is_prime factorial vecfirstidx>;
use constant Inf => 1e5;

my @least_m;
my $n = 0;
do {
    push @least_m, 1 + vecfirstidx { is_prime(factorial($n) + $_) } 1..Inf;
    $n++;
} until @least_m == 50;

push @res, "Least positive m such that n! + m is prime; first fifty:";
push @res, sprintf(('%4d')x50, @least_m[0..49]) =~ s/.{40}\K(?=.)/\n/gr;

say my $result = join "\n", @res;

my $ref = <<'END';
Least positive m such that n! + m is prime; first fifty:
   1   1   1   1   5   7   7  11  23  17
  11   1  29  67  19  43  23  31  37  89
  29  31  31  97 131  41  59   1  67 223
 107 127  79  37  97  61 131   1  43  97
  53   1  97  71  47 239 101 233  53  83
END

use Test::More;
chomp $ref;
is($result, $ref);
#is(($result =~ s/\s//gr), ($ref =~ s/\s//gr));
done_testing();

#for (1..3).map: * Ã— 1e3 {
#    my $key = @least-m.first: * > $_, :k;
#    @res.push: sprintf "\nFirst m > $_ is %d at position %d", @least-m[$key], $key;
#}

#First m > 4000 is 4943 at position 284
#First m > 5000 is 5233 at position 384
#First m > 6000 is 6131 at position 388
#First m > 7000 is 9067 at position 445
#First m > 8000 is 9067 at position 445
#First m > 9000 is 9067 at position 445
#First m > 10000 is 12619 at position 599

__END__

=={{header|Perl}}==
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre>
</pre>
