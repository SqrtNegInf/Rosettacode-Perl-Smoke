#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Balanced_brackets
#c# 2018-07-16 <RC
#p# OK

srand 123456;

use strict;
use warnings;
use feature 'say';
my $result;

use Regexp::Common 'balanced';
my $re = qr/^$RE{balanced}{-parens=>'[]'}$/;

sub balanced {
  return shift =~ $re;
}

sub generate {
    my $n = shift;
    my $str = '[' x $n;
    substr($str, rand($n + $_), 0) = ']' for 1..$n;
    return $str;
}

for (0..8) {
    my $input = generate($_);
    $result .= (sprintf balanced($input) ? " ok:" : "bad:") . " '$input'\n";
}

say $result;

my $ref = <<END;
bad: ''
 ok: '[]'
 ok: '[[]]'
bad: ']]][[['
bad: '[][][[]]'
bad: ']][]]][[[['
bad: '[][][[]][[]]'
 ok: '[[[]][[][[]]]]'
bad: ']][][[[]]]][[[[]'
END

use Test::More;
is ($result, $ref);
done_testing();
