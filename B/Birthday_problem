#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Birthday_problem
#c# 2019-09-30 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use List::AllUtils qw(max min uniqnum count_by any);
use Math::Random qw(random_uniform_integer);

my @res;

srand 123456;

my $debug = 0;

sub simulation {
    my($c) = shift;
    my $max_trials =     500_000;
    my $min_trials =       5_000;

my $n = int 47 * ($c-1.5)**1.5; # OEIS/A050256: 16 86 185 307
my $N = min $max_trials, max $min_trials, 1000 * sqrt $n;

#say "starting with n = $n and N = $N" if $debug;

if ($c == 0) {
    while (1) {
        my $no = 0;
        for (1..$N) {
            $no++ if $n == scalar uniqnum random_uniform_integer($n, 1, 365);
        }
        my $p = 1 - $no/$N;
        return($n, $p) if $p > 0.5;
        $N = min $max_trials, max $min_trials, int 1000/(0.5-$p)**1.5;
        say "n: $n  p: $p  next N: $N" if $debug;
        $n++;
      }
} else {
    while (1) {
        my $yes = 0;
        for (1..$N) {
            my @bdays; $bdays[$n] = 0;
            $bdays[$_] = 1 + int rand(365) for 0..$n-1;
            my %hits = count_by { $_ } @bdays;
            #my %hits = count_by { $_ } random_uniform_integer($n, 1, 365); # not for testing, answers vary

            $yes++ if any { $hits{$_} >= $c } keys %hits;

        }
        my $p = $yes/$N;
        return($n, $p) if $p > 0.5;
        $N = min $max_trials, max $min_trials, int 1000/(0.5-$p)**1.75;
        say "n: $n  p: $p  next N: $N" if $debug;
        $n++;
}

}

}

for (2..3) {
    push @res, sprintf "$_ people in a group of %s share a common birthday. (%.4f)", simulation($_);
}

say my $result = join "\n", @res;

my $ref = <<'END';
2 people in a group of 23 share a common birthday. (0.5083)
3 people in a group of 88 share a common birthday. (0.5120)
END
#4 people in a group of 187 share a common birthday. (0.5034)
#5 people in a group of 313 share a common birthday. (0.5008)

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
