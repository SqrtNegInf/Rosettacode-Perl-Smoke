#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Delegates
#c# 2018-07-28 <RC
#p# OK
#n# skipping Moose implementation
#n# 2023-03-22 hey, testing ain't that hard...

use strict;
use warnings;
use feature 'say';

package Delegator;
sub new {
   bless {}
}

sub operation {
   my ($self) = @_;
   if (defined $self->{delegate} && $self->{delegate}->can('thing')) {
      $self->{delegate}->thing;
   } else {
      'default implementation';
   }
}
 
package Delegate;
sub new {
   bless {};
}

sub thing {
   'delegate implementation'
}
 
package main;
use Test::More;

# No delegate
my $a = Delegator->new;
is $a->operation, 'default implementation';
 
# With a delegate that does not implement "thing"
is $a->{delegate}, undef;
is $a->operation , 'default implementation';
 
# With delegate that implements "thing"
$a->{delegate} = Delegate->new;
is $a->operation, 'delegate implementation';
 
done_testing();
