#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Digital_root
#c# 2018-07-28 <RC
#p# OK

my @res;

use v5.36;

use List::Util 'sum';
 
my @digit = (0..9, 'a'..'z');
my %digit = map { $digit[$_], $_ } 0 .. $#digit;
 
sub base ($n, $b) {
   $b ||= 10;
   die if $b > @digit;
   my $result = '';
   while ($n) {
      $result .= $digit[ $n % $b ];
      $n = int $n/$b;
   }
   reverse $result || 0;
}
 
sub digital-root ($n, $b) {
   my $inbase = base($n, $b);
   my $additive_persistance = 0;
   while( length($inbase) > 1 ) {
      $additive_persistance++;
      $n = sum @digit{split '', $inbase};
      $inbase = base($n, $b);
   }
   $additive_persistance, $n;
}
 
my @numbers = <5 627615 39390 588225 393900588225>;
my @bases   = <2 3 8 10 16 36>;
my $fmt     = '%25s(%2s): persistance = %s, root = %2s';
 
if( eval { require Math::BigInt; 1 } ) {
    push @numbers, Math::BigInt->new('58142718981673030403681039458302204471300738980834668522257090844071443085937');
}
 
for my $base (@bases) {
    for my $num (@numbers) {
        my $inbase = base($num, $base);
        $inbase = 'BIG' if length($inbase) > 25;
        push @res, sprintf $fmt, $inbase, $base, digital-root $num, $base;
    }
    push @res, '';
}

say my $result = join "\n", @res; 

my $ref = <<'EOD';
                      101( 2): persistance = 2, root =  1
     10011001001110011111( 2): persistance = 3, root =  1
         1001100111011110( 2): persistance = 3, root =  1
     10001111100111000001( 2): persistance = 3, root =  1
                      BIG( 2): persistance = 3, root =  1
                      BIG( 2): persistance = 4, root =  1

                       12( 3): persistance = 2, root =  1
            1011212221000( 3): persistance = 3, root =  1
               2000000220( 3): persistance = 2, root =  2
            1002212220010( 3): persistance = 3, root =  1
1101122201121110011000000( 3): persistance = 3, root =  1
                      BIG( 3): persistance = 4, root =  1

                        5( 8): persistance = 0, root =  5
                  2311637( 8): persistance = 3, root =  2
                   114736( 8): persistance = 3, root =  1
                  2174701( 8): persistance = 3, root =  1
            5566623376301( 8): persistance = 3, root =  4
                      BIG( 8): persistance = 3, root =  3

                        5(10): persistance = 0, root =  5
                   627615(10): persistance = 2, root =  9
                    39390(10): persistance = 2, root =  6
                   588225(10): persistance = 2, root =  3
             393900588225(10): persistance = 2, root =  9
                      BIG(10): persistance = 3, root =  4

                        5(16): persistance = 0, root =  5
                    9939f(16): persistance = 2, root = 15
                     99de(16): persistance = 2, root = 15
                    8f9c1(16): persistance = 2, root = 15
               5bb64dfcc1(16): persistance = 2, root = 15
                      BIG(16): persistance = 3, root =  7

                        5(36): persistance = 0, root =  5
                     dg9r(36): persistance = 2, root = 30
                      ue6(36): persistance = 2, root = 15
                     clvl(36): persistance = 2, root = 15
                 50ye8n29(36): persistance = 2, root = 25
                      BIG(36): persistance = 3, root = 17
EOD

use Test::More;
is ($result, $ref);
done_testing();
