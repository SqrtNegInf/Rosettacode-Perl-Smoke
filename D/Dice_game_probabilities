#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Dice_game_probabilities
#c# 2018-07-28 <RC
#p# OK

my $result;

use strict;
use warnings;
use feature 'say';

use List::Util qw(sum0 max);
 
sub comb {
    my ($s, $n) = @_;
    return 1 unless $n;
    #my @r = (0) x ($n - max(@$s) + 1); # warning on 'negative repeat count'
    my $repeat = $n - max(@$s) + 1;
    my @r = $repeat > 0 ? (0) x $repeat : ();
    my @c = comb($s, $n - 1);
    for my $i (0 .. $#c) {
        $c[$i] || next;
        for my $k (@$s) {
            $r[$i + $k] += $c[$i];
        }
    }
    return @r;
}
 
sub winning {
    my ($s1, $n1, $s2, $n2) = @_;
    my @p1 = comb($s1, $n1);
    my @p2 = comb($s2, $n2);
    my ($win, $loss, $tie) = (0, 0, 0);
 
{
    no warnings 'uninitialized';
    for my $i (0 .. $#p1) {
        $win  += $p1[$i] * sum0(@p2[0    .. $i - 1]);
        $tie  += $p1[$i] * sum0(@p2[$i   .. $i    ]);
        $loss += $p1[$i] * sum0(@p2[$i+1 .. $#p2  ]);
    }
    my $total = sum0(@p1) * sum0(@p2);
    map { $_ / $total } ($win, $tie, $loss);
}

}
 
$result .= '('. join(', ', winning([1 ..  4], 9, [1 .. 6], 6)). ")\n";
$result .= '('. join(', ', winning([1 .. 10], 5, [1 .. 7], 6)). ")\n";

say $result; 

my $ref = <<'EOD';
(0.57314407678298, 0.070766169838454, 0.356089753378566)
(0.642788628717626, 0.0444960303104999, 0.312715340971874)
EOD

use Test::More;
is ($result, $ref);
done_testing();
