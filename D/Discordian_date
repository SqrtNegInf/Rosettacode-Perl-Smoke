#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Discordian_date
#c# 2018-07-28 <RC
#p# OK
#n# cf 'First_power_of_2_that_has_leading_decimal_digits_of_12' method of adding ordinal suffix

use strict;
use warnings;
use feature 'say';

my $result;

use Time::Piece;
 
my @seasons = (< Chaos Discord Confusion Bureaucracy >, 'The Aftermath');
my @week_days = (< Sweetmorn Boomtime Pungenday Prickle-Prickle >, 'Setting Orange');
 
sub ordinal {
	my ($n) = @_;
	return $n . "th" if int($n/10) == 1;
	return $n . ((< th st nd rd th th th th th th>)[$n % 10]);
}
 
sub ddate {
	my $d = Time::Piece->strptime( $_[0], '%Y-%m-%d' );
	my $yold = 'in the YOLD ' . ($d->year + 1166);
 
	my $day_of_year0 = $d->day_of_year;
 
	if( $d->is_leap_year ) {
		return "St. Tib's Day, $yold" if $d->mon == 2 and $d->mday == 29;
		$day_of_year0-- if $day_of_year0 >= 60; # Compensate for St. Tib's Day
	}
 
	my $weekday = $week_days[ $day_of_year0 % @week_days ];
	my $season = $seasons[ $day_of_year0 / 73 ];
	my $season_day = ordinal( $day_of_year0 % 73 + 1 );
 
	return "$weekday, the $season_day day of $season $yold";
}
 
$result .= "$_ is " . ddate($_) . "\n" for < 2010-07-22 2012-02-28 2012-02-29 2012-03-01 >;
 
say $result; 

my $ref = <<'EOD';
2010-07-22 is Pungenday, the 57th day of Confusion in the YOLD 3176
2012-02-28 is Prickle-Prickle, the 59th day of Chaos in the YOLD 3178
2012-02-29 is St. Tib's Day, in the YOLD 3178
2012-03-01 is Setting Orange, the 60th day of Chaos in the YOLD 3178
EOD

use Test::More;
is ($result, $ref);
done_testing;
