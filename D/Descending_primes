#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Descending_primes
#c# 2022-03-27 <RC, 2023-05-02 >RC
#p# OK
#n# cf A/Ascending_primes, handles sort/map/sprintf differently

my @res;

use strict;
use warnings;
use feature 'say';

use ntheory 'is_prime';

push @res, 
    join( '', 
      sort 
      map { sprintf '%9d', $_ }
      grep /./ && is_prime $_,
      glob join '', map "{$_,}", reverse 1..9
    ) =~ s/.{45}\K/\n/gr;

say my $result = join "\n", @res;

my $ref = <<'EOD';
        2        3        5        7       31
       41       43       53       61       71
       73       83       97      421      431
      521      541      631      641      643
      653      743      751      761      821
      853      863      941      953      971
      983     5431     6421     6521     7321
     7541     7621     7643     8431     8521
     8543     8641     8731     8741     8753
     8761     9421     9431     9521     9631
     9643     9721     9743     9851     9871
    75431    76421    76541    76543    86531
    87421    87541    87631    87641    87643
    94321    96431    97651    98321    98543
    98621    98641    98731   764321   865321
   876431   975421   986543   987541   987631
  8764321  8765321  9754321  9875321 97654321
 98764321 98765431
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
