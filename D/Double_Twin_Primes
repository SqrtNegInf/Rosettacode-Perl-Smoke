#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Double_Twin_Primes
#c# 2023-03-24 >RC
#p# OK

my @res;

use v5.36;

use ntheory 'is_prime';

sub dt ($p) { $p, $p+2, $p+6, $p+8 }
for my $n (1..1000) { say "@{[dt($n)]}" if 4 == +(grep { is_prime $_ } dt $n) } # for RC
for my $n (1..1000) { push @res, join ' ', dt $n if 4 == +(grep { is_prime $_ } dt $n) }

my $result = join "\n", @res;

my $ref = <<'END';
5 7 11 13
11 13 17 19
101 103 107 109
191 193 197 199
821 823 827 829
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>use v5.36;
use ntheory 'is_prime';

sub dt ($p) { $p, $p+2, $p+6, $p+8 }
for my $n (1..1000) { say "@{[dt($n)]}" if 4 == +(grep { is_prime $_ } dt $n) }</syntaxhighlight>
{{out}}
<pre>5 7 11 13
11 13 17 19
101 103 107 109
191 193 197 199
821 823 827 829</pre>
