#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Date_manipulation
#c# 2018-07-28 <RC
#p# OK

use strict;
use warnings;
use feature 'say';
my $result;

# We use Mountain Daylight Time for output.

use DateTime;
use DateTime::Format::Strptime 'strptime';
use feature 'say';
 
my $input =  'March 7 2009 7:30pm EST';
$input    =~ s{EST}{America/New_York};
 
say $result = strptime('%b %d %Y %I:%M%p %O', $input)
        ->add(hours => 12) 
        ->set_time_zone('America/Edmonton')
        ->format_cldr('MMMM d yyyy h:mma zzz');

# If we're given an ambiguous timezone like 'EST' for input, we can handle this by changing it to the unambiguous Olson timezone id. This ensures daylight savings is correctly handled (which is especially tricky here, since March 7/8 is the DST rollover, and times jump ahead skipping an hour)

use Test::More;
is ($result, 'March 8 2009 6:30AM MDT');
done_testing();
