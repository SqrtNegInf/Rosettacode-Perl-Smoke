#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Display_an_outline_as_a_nested_table
#c# 2019-12-28 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

my @rows;
my $row = -1;
my $width = 0;
my $color = 0;
our $bg = 'e0ffe0';

parseoutline( do { local $/ = undef; <DATA> =~ s/\t/  /gr } );

push @res, "<table border=1 cellspacing=0>";
for ( @rows )
  {
  my $start = 0;
  push @res, "  <tr>";
  for ( @$_ ) # columns
    {
    my ($data, $col, $span, $bg) = @$_;
    push @res, "    <td></td>\n" x ( $col - $start ) .
      "    <td colspan=$span align=center bgcolor=#$bg> $data </td>";
    $start = $col + $span;
    }
  push @res, "    <td></td>" x ( $width - $start ), "  </tr>";
  }
push @res, "</table>";

sub parseoutline
  {
  ++$row;
  while( $_[0] =~ /^( *)(.*)\n((?:\1 .*\n)*)/gm )
    {
    my ($head, $body, $col) = ($2, $3, $width);
    $row == 1 and local $bg = qw( ffffe0 ffe0e0 )[ $color ^= 1];
    if( length $body ) { parseoutline( $body ) } else { ++$width }
    push @{ $rows[$row] }, [ $head, $col, $width - $col, $bg ];
    }
  --$row;
  }

say my $result = join "\n", @res;

my $ref = <<'EOD';
<table border=1 cellspacing=0>
  <tr>
    <td colspan=7 align=center bgcolor=#e0ffe0> Display an outline as a nested table. </td>

  </tr>
  <tr>
    <td colspan=3 align=center bgcolor=#ffe0e0> Parse the outline to a tree, </td>
    <td colspan=2 align=center bgcolor=#ffffe0> count the leaves descending from each node, </td>
    <td colspan=2 align=center bgcolor=#ffe0e0> and write out a table with 'colspan' values </td>

  </tr>
  <tr>
    <td colspan=1 align=center bgcolor=#ffe0e0> measuring the indent of each line, </td>
    <td colspan=1 align=center bgcolor=#ffe0e0> translating the indentation to a nested structure, </td>
    <td colspan=1 align=center bgcolor=#ffe0e0> and padding the tree to even depth. </td>
    <td colspan=1 align=center bgcolor=#ffffe0> defining the width of a leaf as 1, </td>
    <td colspan=1 align=center bgcolor=#ffffe0> and the width of a parent node as a sum. </td>
    <td colspan=1 align=center bgcolor=#ffe0e0> either as a wiki table, </td>
    <td colspan=1 align=center bgcolor=#ffe0e0> or as HTML. </td>

  </tr>
  <tr>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td colspan=1 align=center bgcolor=#ffffe0> (The sum of the widths of its children) </td>
    <td></td>    <td></td>
  </tr>
</table>
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing;

__DATA__
Display an outline as a nested table.
    Parse the outline to a tree,
        measuring the indent of each line,
        translating the indentation to a nested structure,
        and padding the tree to even depth.
    count the leaves descending from each node,
        defining the width of a leaf as 1,
        and the width of a parent node as a sum.
            (The sum of the widths of its children)
    and write out a table with 'colspan' values
        either as a wiki table,
        or as HTML.
