#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Dominoes
#c# 2021-11-17 <RC, NOT ON RC
#p# OK
#n# works with v5.036, eliminate reliance on global, no 'eval'; should update RC with this version?

my $result;

use v5.036;

my $gap = qr/(.{15}) (.{15})/s;

my $grid1 = <<END;
0 5 1 3 2 2 3 1
               
0 5 5 0 5 2 4 6
               
4 3 0 3 6 6 2 0
               
0 6 2 3 5 1 2 6
               
1 1 3 0 0 2 4 5
               
2 1 4 3 3 4 6 6
               
6 4 5 1 5 4 1 4
END

my $grid2 = <<END;
0 0 0 1 1 1 0 2
               
1 2 2 2 0 3 1 3
               
2 3 3 3 0 4 1 4
               
2 4 3 4 4 4 0 5
               
1 5 2 5 3 5 4 5
               
5 5 0 6 1 6 2 6
               
3 6 4 6 5 6 6 6
END

sub find ($x, $y, $try, $orig) {
    state $solution;

    if( $x > $y ) {
        $x = 0;
        $solution = $orig |. $try and return if ++$y > 6; # solved!
    }

    while ( $try =~ /(?=(?|$x $gap $y|$y $gap $x))/gx ) { # vertical
        my $new = $try;
        substr $new, $-[0], 33, " $1+$2 ";
        find( $x + 1, $y, $new, $orig );
    }

    while ( $try =~ /(?=$x $y|$y $x)/g ) {                # horizontal
        my $new = $try;
        substr $new, $-[0], 3, ' + ';
        find( $x + 1, $y, $new, $orig );
    }

    $solution
}

$result  = find( 0, 0, $grid1, $grid1 );
$result .= "\n=======\n\n";
$result .= find( 0, 0, $grid2, $grid2 );
say $result;

my $ref = <<'EOD';
0+5 1+3 2 2+3 1
        +     +
0 5+5 0 5 2+4 6
+     +        
4 3 0 3 6+6 2 0
  + +       + +
0 6 2 3+5 1 2 6
+         +    
1 1 3 0+0 2 4 5
  + +       + +
2 1 4 3+3 4 6 6
+         +    
6 4+5 1+5 4 1+4

=======

0 0+0 1 1+1 0+2
+     +        
1 2+2 2 0+3 1+3
               
2+3 3+3 0+4 1+4
               
2+4 3+4 4+4 0+5
               
1+5 2+5 3+5 4+5
               
5+5 0+6 1+6 2+6
               
3+6 4+6 5+6 6+6
EOD

use Test::More;
is ($result, $ref);
done_testing();
