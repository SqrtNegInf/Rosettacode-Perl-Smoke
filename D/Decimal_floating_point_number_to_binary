#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Decimal_floating_point_number_to_binary
#c# 2019-10-04 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

my @res;

sub dec2bin {
    my($l,$r) = split /\./, shift;
    my $int  = unpack('B*',  pack('N',               $l ));
    my $frac = unpack('B32', pack('N',4294967296 * ".$r"));   # DH P:C complains...
    "$int.$frac" =~ s/^0*(.*?)0*$/$1/r;
}

sub bin2dec {
    my($l,$r) = split /\./, shift;
    my $frac = my $i = 0;
    (--$i, $frac += $_ * 2**$i) for split '', $r;
    eval('0b'.$l) + $frac;
}

push @res, dec2bin(23.34375);
push @res, bin2dec('1011.11101');

say my $result = join "\n", @res;
my $ref = <<'END';
10111.01011
11.90625
END

use Test::More;
chomp $ref;
is($result, $ref);
is(bin2dec(dec2bin(23.34375)),23.34375);
is(dec2bin(bin2dec('1011.11101')),'1011.11101');
done_testing;
