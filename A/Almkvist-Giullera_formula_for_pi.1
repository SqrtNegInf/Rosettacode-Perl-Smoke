#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Almkvist-Giullera_formula_for_pi
#c# 2021-01-12 >RC
#p# OK

use strict;
use warnings;
use feature <say state>;

use Math::AnyNum <:overload factorial>;

my @res;

my $Precision = 70;

sub Integral {
    my($n) = @_;
    int (2**5 * factorial(6*$n) * (532*$n**2 + 126*$n + 9)) / (3*factorial($n)**6)
}

sub A_G {
    my($n) = @_;
    Integral($n) / (10**(6*$n + 3));
}

sub Pi {
    my($n) = @_;
    local $Math::AnyNum::PREC = 5 * $Precision;
    state $AGcache = 0;
    $AGcache += A_G($n);
   Math::AnyNum::pow($AGcache,-0.5)->round(-$Precision)->stringify;
}

push @res, 'First 10 integer portions: ';
push @res, "$_  " . Integral($_) for 0..9;

my $next = ''; 
my $target = Pi(my $Nth = 0);
while () {
    last if ($next = Pi(++$Nth)) eq $target; 
    $target = $next; 
}

push @res, sprintf "π to $Precision decimal places is:\n$target";

say my $result = join "\n", @res;

my $ref = <<'END';
First 10 integer portions: 
0  96
1  5122560
2  190722470400
3  7574824857600000
4  312546150372456000000
5  13207874703225491420651520
6  567273919793089083292259942400
7  24650600248172987140112763715584000
8  1080657854354639453670407474439566400000
9  47701779391594966287470570490839978880000000
π to 70 decimal places is:
3.1415926535897932384626433832795028841971693993751058209749445923078164
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
