#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Associative_array/Creation
#c# 2018-07-15 <>RC
#p# OK

my $result;

use strict;
use warnings;
use feature 'say';

# using => key does not need to be quoted unless it contains special chars
my %hash1 = (
  key1 => 'val1',
  'key-2' => 2,
  three => -238.83,
  4 => 'val3',
);
 
# using , both key and value need to be quoted if containing something non-numeric in nature
my %hash2 = (
  'key1', 'val1',
  'key-2', 2,
  'three', -238.83,
  4, 'val3',
);

$result .= $hash2{key1} . "\n";
$hash2{key1} = 'val1';
@hash2{'key1', 'three'} = ('val1', -238.83);

my $hashref = {
 key1 => 'val1',
  'key-2' => 2,
  'three' => -238.83, # ?
  4 => 'val3',
};

$result .= $hashref->{key1} . "\n";
$hashref->{key1} = 'val1';
 
@{$hashref}{('key1', 'three')} = ('glorp', -47.42);
#@{$hashref}{'key1', 'three'} = ('val1', -238.83);
$result .= $hashref->{'key1'};
$result .= ' ' . $hashref->{'three'};

say $result;

my $ref = <<'EOD';
val1
val1
glorp -47.42
EOD

use Test::More;
chop $ref;
is ($result, $ref);
done_testing;
