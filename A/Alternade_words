#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Alternade_words
#c# 2020-11-30 <RC
#p# OK

use strict;
use warnings;
use feature 'say';

my @res;

my $words = do { local (@ARGV, $/) = 'ref/unixdict.txt'; <> };
my %words = map { $_, 1 } $words =~ /^.{3,}$/gm;
for ( $words =~ /^.{6,}$/gm ) {
    my $even = s/(.).?/$1/gr;
    my $odd = s/.(.?)/$1/gr;
    $words{$even} && $words{$odd} and push(@res, "$_ => [ $even $odd ]");
    #$words{$even} && $words{$odd} and print "$_ => [ $even $odd ]\n";
}

say my $result = join "\n", @res;

my $ref = <<'EOD';
accost => [ acs cot ]
accuse => [ acs cue ]
afield => [ ail fed ]
agleam => [ ala gem ]
alcott => [ act lot ]
allele => [ all lee ]
allied => [ ale lid ]
alpert => [ apr let ]
ambient => [ abet min ]
annette => [ ante net ]
apport => [ apr pot ]
ariadne => [ aide ran ]
assist => [ ass sit ]
battle => [ btl ate ]
blaine => [ ban lie ]
brenda => [ bed rna ]
calliope => [ clip aloe ]
choose => [ cos hoe ]
choosy => [ cos hoy ]
claire => [ car lie ]
collude => [ clue old ]
effete => [ eft fee ]
fabric => [ fbi arc ]
fealty => [ fat ely ]
fluent => [ fun let ]
forwent => [ fret own ]
friend => [ fin red ]
george => [ gog ere ]
inroad => [ ira nod ]
israel => [ ire sal ]
jaunty => [ jut any ]
joanne => [ jan one ]
lounge => [ lug one ]
oriole => [ oil roe ]
oswald => [ owl sad ]
parrot => [ pro art ]
peoria => [ poi era ]
pierre => [ per ire ]
poodle => [ pol ode ]
pounce => [ puc one ]
racial => [ rca ail ]
realty => [ rat ely ]
sordid => [ sri odd ]
spatial => [ sail pta ]
sprain => [ sri pan ]
strain => [ sri tan ]
strait => [ sri tat ]
sturdy => [ sud try ]
sweaty => [ set way ]
tattle => [ ttl ate ]
theorem => [ term hoe ]
though => [ tog huh ]
throaty => [ tray hot ]
triode => [ tid roe ]
triune => [ tin rue ]
troupe => [ top rue ]
truant => [ tun rat ]
twirly => [ til wry ]
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing;
