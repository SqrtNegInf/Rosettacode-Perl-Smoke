#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/World_Cup_group_stage
#c# 2018-09-19 >RC
#p# BROKEN

use feature 'say';
use Data::Dumper;

use constant scoring => 0, 1, 3;
my @row = (0) x 10;
push @histo, [(0) x 10] for 1..4;
#my @histo = [[@row], [@row], [@row], [@row]];
my @alto  = @histo;
say Dumper @histo;

say 'end';
__END__

for [X] ^3 xx 6 -> @results {
    my @s;

    for @results Z (^4).combinations(2) -> ($r, @g) {
        @s[@g[0]] += scoring[$r];
        @s[@g[1]] += scoring[2 - $r];
    }

    for (@histo Z @s.sort)  -> (@h, $v) {
        @h[$v]++;
    }

    @alto[$_][(@s.sort)[$_]]++ for ^4; # alternate method

}

my @res.push: .fmt('%3d',' ') for @histo.reverse;
my @alt.push: .fmt('%3d',' ') for @alto.reverse;
say for @res;


say $result = join "\n", @res;
$alternate  = join "\n", @alt;

my $ref = <<'EOD';
  0   0   0   1  14 148 152 306   0 108
  0   0   4  33 338 172 164  18   0   0
  0  18 136 273 290   4   8   0   0   0
108 306 184 125   6   0   0   0   0   0
EOD

use Test::More;
#is ($result, $ref);
#is ($alternate, $ref);
#done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre  style="height:35ex"></pre>
