#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Simulate_input/Keyboard
#t# skiptest
#c# 2018-08-16 <RC
#p# OK

# Perl on linux can do this for PseudoTerminals (ptys) and Terminals (ttys) using IOCTL TIOCSTI. The same can be done with C or any other language that can use IOCTL either natively or via FFI such as JNI or JNA.
# Target may be externally created, but process must be able to open tty/pty for writing.

$target = "/dev/pts/51"; 
### How to get the correct value for $TIOCSTI is discussed here : http://www.perlmonks.org/?node_id=10920
$TIOCSTI = 0x5412 ; 
open(TTY,">$target") or die "cannot open $target" ; 
$b="sleep 99334 &\015"; 
@c=split("",$b); 
sleep(2); 
foreach $a ( @c ) { ioctl(TTY,$TIOCSTI,$a); select(undef,undef,undef,0.1);} ; 
print "DONE\n";


# Perl on X11 can do this using the SendKeys function from X11::GUITest
# Perl on Windows can do this using the SendKeys function from Win32::GUITest
# Target may be externally created.

# SendKeys("Hello, how are you?\n");
