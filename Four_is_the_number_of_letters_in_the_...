#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Four_is_the_number_of_letters_in_the_...
#c# 2018-09-0x >RC
#p# BROKEN

use feature 'say';

use Lingua::EN::Numbers qw(num2en);

my $index = 1;
my @sentence = split / /, 'Four is the number of letters in the first word of this sentence, ';
  { @sentence[$index++].&alpha.&cardinal, 'in', 'the', |($index.&ordinal.&no-commas~',').words } ... * ;

sub alpha { length @_[0].subst(/\W/, '', :g).chars }
sub no-commas ( $str ) { $str.subst(',', '', :g) }
sub count ( $index ) { @sentence[^$index].join(' ').chars ~ " characters in the sentence, up to and including this word.\n" }

say 'First 201 word lengths in the sequence:';
put ' ', map { @sentence[$_].&alpha.fmt("%2d") ~ (((1+$_) %% 25) ? "\n" : '') }, 0..201;
say 201.&count;

__END__
my @res;
#for 1e3, 1e4, 1e5, 1e6, 1e7 {
for 1e3, 1e4, 1e5 {
    @res.push: "{.&ordinal.tc} word, '{@sentence[$_ - 1]}', has {@sentence[$_ - 1].&alpha} characters. ", .&count
}
.say for @res;

my $ref = qq:to/END/;
One thousandth word, 'in', has 2 characters.
6249 characters in the sentence, up to and including this word.

Ten thousandth word, 'in', has 2 characters.
64097 characters in the sentence, up to and including this word.

One hundred thousandth word, 'one', has 3 characters.
659455 characters in the sentence, up to and including this word.

say $result; 
#say $result = join "\n", @res;
my $ref = <<'EOD';
EOD

use Test::More;
#is ($result, $ref);
#done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre></pre>
