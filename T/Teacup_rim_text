#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Teacup_rim_text
#c# 2019-10-15 >RC
#p# OK

use strict;
use warnings;
use feature 'say';
use List::Util qw(uniqstr any);

my @res;
my(%words, %seen, @teacups);

open my $fh, '<', 'ref/wordlist.10000';
while (<$fh>) {
    chomp(my $w = uc $_);
    next if length $w < 3;
    push @{$words{join '', sort split //, $w}}, $w;
}

#(length($_) < 3 or @{$words{$_}} < 2) and delete $words{$_} for keys %words;

for my $these (values %words) {
    next if @$these < 3;
    MAYBE: for (@$these) {
        next if $seen{my $maybe = $_};
        my @print;
        for my $i (0 .. length $maybe) {
            if (any { $maybe eq $_ } @$these) {
                push @print, $maybe;
                $maybe = substr($maybe,1) . substr($maybe,0,1)
            } else {
                @print = () and next MAYBE
            }
        }
        if (@print) {
            push @teacups, [@print];
            $seen{$_}++ for @print;
        }
    }
}

push @res, join ', ', uniqstr @$_ for sort @teacups;

say my $result = join "\n", sort @res;

my $ref = <<'END';
AIM, IMA, MAI
ARC, RCA, CAR
ASP, SPA, PAS
ATE, TEA, EAT
IPS, PSI, SIP
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
