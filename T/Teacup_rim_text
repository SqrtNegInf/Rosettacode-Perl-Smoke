#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Teacup_rim_text
#t# inprogress
#c# 2019-10-xx >RC
#p# OK

use Data::Printer;
use Time::HiRes qw(sleep);

use List::Util qw(uniqstr any);

use strict;
use warnings;
use feature 'say';

my @res;

my %words;
open my $fh, '<', 'ref/wordlist.10000';
while ($_ = <$fh>) {
    chomp;
    next if length($_) < 3;
    my $w = uc $_;
    push @{$words{join '', sort split //, $w}}, $w;
}

for my $w (keys %words) {
    delete $words{$w} if length($w) < 3 or +@{$words{$w}} < 2
}

my @teacups;
my %seen;

for my $k (sort keys %words) {
    my $these = $words{$k};
     next if @$these < 3;
    MAYBE: for (@$these) {
        my $maybe = $_;
        next if $seen{$_};
        my @print;
        for my $i (0 .. length($maybe)) {
            if (any { $maybe eq $_ } @$these) {
                push @print, $maybe;
                my @mlist = split //, $maybe;
                push @mlist, shift @mlist;
                $maybe = join '', @mlist;
            } else {
                @print = ();
                next MAYBE
            }
        }
        if (@print) {
            push @teacups, [@print];
            $seen{$_}++ for @print;
        }
    }
}


push @res, join ', ', uniqstr @$_ for sort @teacups;

say my $result = join "\n", @res;
exit;

my $ref = <<'END';
ARC, RCA, CAR
AIM, IMA, MAI
IPS, PSI, SIP
ATE, TEA, EAT
ASP, SPA, PAS
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre></pre>
