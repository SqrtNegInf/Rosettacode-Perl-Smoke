#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Topological_sort/Extracted_top_item
#c# 2019-01-17 <RC
#p# OK

use feature 'say';

my @res;

use List::Util qw( uniq );

my $deps = <<END;
top1    des1 ip1 ip2
top2    des1 ip2 ip3
ip1     extra1 ip1a ipcommon
ip2     ip2a ip2b ip2c ipcommon
des1    des1a des1b des1c
des1a   des1a1 des1a2
des1c   des1c1 extra1
END

sub before
  {
  map { $deps =~ /^$_\b(.+)/m ? before( split ' ', $1 ) : (), $_ } @_
  }

1 while $deps =~ s/^(\w+)\b.*?\K\h+\1\b//gm; # remove self dependencies
push @res, "TOP LEVELS: @{[grep $deps !~ /\h$_\b/, $deps =~ /^\w+/gm]}";
push @res, "TARGET $_ ORDER: @{[ uniq before split ]}"
  for $deps =~ /^\w+/gm, 'top1 top2';

say $result = join "\n", @res;

my $ref = <<'EOD';
TOP LEVELS: top1 top2
TARGET top1 ORDER: des1a1 des1a2 des1a des1b des1c1 extra1 des1c des1 ip1a ipcommon ip1 ip2a ip2b ip2c ip2 top1
TARGET top2 ORDER: des1a1 des1a2 des1a des1b des1c1 extra1 des1c des1 ip2a ip2b ip2c ipcommon ip2 ip3 top2
TARGET ip1 ORDER: extra1 ip1a ipcommon ip1
TARGET ip2 ORDER: ip2a ip2b ip2c ipcommon ip2
TARGET des1 ORDER: des1a1 des1a2 des1a des1b des1c1 extra1 des1c des1
TARGET des1a ORDER: des1a1 des1a2 des1a
TARGET des1c ORDER: des1c1 extra1 des1c
TARGET top1 top2 ORDER: des1a1 des1a2 des1a des1b des1c1 extra1 des1c des1 ip1a ipcommon ip1 ip2a ip2b ip2c ip2 top1 ip3 top2
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
