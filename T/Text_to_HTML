#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Text_to_HTML
#c# 2020-10-23 <RC
#p# OK

use strict;
use warnings;
use feature 'say';

use Pod::Simple::HTML;

# POD example taken from https://juerd.nl/site.plp/perlpodtut
my $pod = <<'POD';
=head1 NAME

My::Module - An example module

=head1 SYNOPSIS

    use My::Module;
    my $object = My::Module->new();
    print $object->as_string;

=head1 DESCRIPTION

This module does not really exist, it
was made for the sole purpose of
demonstrating how POD works.

=head2 Methods

=over 12

=item C<new>

Returns a new My::Module object.

=item C<as_string>

Returns a stringified representation of
the object. This is mainly for debugging
purposes.

=back

=head1 LICENSE

This is released under the Artistic
License. See L<perlartistic>.

=head1 AUTHOR

Juerd - L<http://juerd.nl/>

=head1 SEE ALSO

L<perlpod>, L<perlpodspec>

=cut
POD

my $parser = Pod::Simple::HTML->new();
$parser->output_string(\my $result);
$parser->parse_string_document($pod);

$result =~ s/under.*?GMT//; # remove time/date

my $ref = <<'END';
<html><head><title>My::Module</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" >
</head>
<body class='pod'>
<!--
  generated by Pod::Simple::HTML v3.43,
  using Pod::Simple::PullParser v3.43,
  .

 If you want to change this HTML document, you probably shouldn't do that
   by changing it directly.  Instead, see about changing the calling options
   to Pod::Simple::HTML, and/or subclassing Pod::Simple::HTML,
   then reconverting this document from the Pod source.
   When in doubt, email the author of Pod::Simple::HTML for advice.
   See 'perldoc Pod::Simple::HTML' for more info.

-->

<!-- start doc -->
<a name='___top' class='dummyTopAnchor' ></a>

<h1><a class='u'
name="NAME"
>NAME</a></h1>

<p>My::Module - An example module</p>

<h1><a class='u'
name="SYNOPSIS"
>SYNOPSIS</a></h1>

<pre>    use My::Module;
    my $object = My::Module-&#62;new();
    print $object-&#62;as_string;</pre>

<h1><a class='u'
name="DESCRIPTION"
>DESCRIPTION</a></h1>

<p>This module does not really exist, it was made for the sole purpose of demonstrating how POD works.</p>

<h2><a class='u'
name="Methods"
>Methods</a></h2>

<dl>
<dt><a name="new"
><code>new</code></a></dt>

<dd>
<p>Returns a new My::Module object.</p>

<dt><a name="as_string"
><code>as_string</code></a></dt>

<dd>
<p>Returns a stringified representation of the object. This is mainly for debugging purposes.</p>
</dd>
</dl>

<h1><a class='u'
name="LICENSE"
>LICENSE</a></h1>

<p>This is released under the Artistic License. See <a href="https://metacpan.org/pod/perlartistic" class="podlinkpod"
>perlartistic</a>.</p>

<h1><a class='u'
name="AUTHOR"
>AUTHOR</a></h1>

<p>Juerd - <a href="http://juerd.nl/" class="podlinkurl"
>http://juerd.nl/</a></p>

<h1><a class='u'
name="SEE_ALSO"
>SEE ALSO</a></h1>

<p><a href="https://metacpan.org/pod/perlpod" class="podlinkpod"
>perlpod</a>, <a href="https://metacpan.org/pod/perlpodspec" class="podlinkpod"
>perlpodspec</a></p>

<!-- end doc -->

</body></html>

END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
