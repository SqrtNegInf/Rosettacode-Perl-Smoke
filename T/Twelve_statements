#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Twelve_statements
#c# 2018-08-09 <RC
#p# OK

my $result;

use strict;
use warnings;
use feature 'say';

use List::Util 'sum';

my @condition = ( 
                 sub { 0 }, # dummy sub for index 0
                 sub { 13==@_ },
                 sub { 3==sum @_[7..12] },
                 sub { 2==sum @_[2,4,6,8,10,12] },
                 sub { $_[5] ? ($_[6] and $_[7]) : 1 },
                 sub { !$_[2] and !$_[3] and !$_[4] },
                 sub { 4==sum @_[1,3,5,7,9,11] },
                 sub { $_[2]==1-$_[3] },
                 sub { $_[7] ? ($_[5] and $_[6]) : 1 },
                 sub { 3==sum @_[1..6] },
                 sub { 2==sum @_[11..12] },
                 sub { 1==sum @_[7,8,9] },
                 sub { 4==sum @_[1..11] },
                );

sub miss { grep { $condition[$_]->(@_) != $_[$_] } 1..12 }

for (0 .. 2**12-1) {
  my @no = miss my @truth = split '', sprintf "0%012b", $_;
  $result .= "Solution: true statements are ". join( " ", grep { $truth[$_] } 1..12). "\n"            unless @no; # if 0 == @no;
  $result .= "1 miss (".$no[0]."): true statements are ". join( " ", grep { $truth[$_] } 1..12). "\n" if 1 == @no;
}

say $result; 

my $ref = <<'EOD';
1 miss (1): true statements are 5 8 11
1 miss (1): true statements are 5 8 10 11 12
1 miss (1): true statements are 4 8 10 11 12
1 miss (8): true statements are 1 5
1 miss (11): true statements are 1 5 8
1 miss (12): true statements are 1 5 8 11
1 miss (12): true statements are 1 5 8 10 11 12
1 miss (8): true statements are 1 5 6 9 11
1 miss (8): true statements are 1 4
1 miss (12): true statements are 1 4 8 10 11 12
1 miss (6): true statements are 1 4 6 8 9
1 miss (7): true statements are 1 3 4 8 9
Solution: true statements are 1 3 4 6 7 11
1 miss (9): true statements are 1 3 4 6 7 9
1 miss (12): true statements are 1 2 4 7 9 12
1 miss (10): true statements are 1 2 4 7 9 10
1 miss (8): true statements are 1 2 4 7 8 9
EOD

use Test::More;
is ($result, $ref);
done_testing;
