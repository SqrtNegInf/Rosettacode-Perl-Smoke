#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Integer_roots
#c# 2018-09-09 >RC
#p# OK

use feature 'say';

use bigint;

sub integer_root {
    our($a,$b) = @_;
    our $a1 = $a - 1; 
    my $c = 1;
    my $d = f($c);
    my $e = f($d);
    ($c, $d, $e) = ($d, $e, f($e)) until abs($d - $e) <= 1;
    return $d < $e ? $d : $e;

    sub f { ($a1*$_[0]+$b/($_[0]**$a1))/$a }
}

push @res, integer_root( 3, 8);
push @res, integer_root( 3, 9);
push @res, integer_root( 2, 2 * 100 ** 200);

say my $result = join "\n", @res;

my $ref = <<'EOD';
2
2
141421356237309504880168872420969807856967187537694807317667973799073247846210703885038753432764157273501384623091229702492483605585073721264412149709993583141322266592750559275579995050115278206057147
EOD

use Test::More;
chop $ref;
is ($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre></pre>
