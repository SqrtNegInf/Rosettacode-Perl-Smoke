#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/First-class_functions
#c# 2018-08-06 <RC
#p# OK

use feature 'say';
my $result;


use Math::Complex ':trig';

sub compose {
    my ($f, $g) = @_;

    sub {
        $f -> ($g -> (@_));
    };
}

my $cube  = sub { $_[0] ** (3)   };
my $croot = sub { $_[0] ** (1/3) };

my @flist1 = ( \&Math::Complex::sin, \&Math::Complex::cos, $cube  );
my @flist2 = ( \&asin,               \&acos,               $croot );

$result .= join "\n", map {
    compose($flist1[$_], $flist2[$_]) -> (0.5)   
} 0..2;

say $result; 
my $ref = <<'EOD';
0.5
0.5
0.5
EOD

use Test::More;
chop $ref;
is ($result, $ref);
done_testing();
