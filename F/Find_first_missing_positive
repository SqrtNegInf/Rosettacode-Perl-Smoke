#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Find_first_missing_positive
#c# 2021-02-28 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';
use List::Util 'first';

my @tests = ( [1,2,0], [3,4,-1,1], [7,8,9,11,12],
  [3, 4, 1, 1], [1, 2, 3, 4, 5], [-6, -5, -2, -1], [5, -5], [-2], [1], []);

for my $test ( @tests ) {
  push @res, "[ @$test ]  ==>  " .
    first { not { map { $_ => 1 } @$test }->{$_}  } 1 .. @$test + 1;
}

say my $result = join "\n", @res;

my $ref = <<'EOD';
[ 1 2 0 ]  ==>  3
[ 3 4 -1 1 ]  ==>  2
[ 7 8 9 11 12 ]  ==>  1
[ 3 4 1 1 ]  ==>  2
[ 1 2 3 4 5 ]  ==>  6
[ -6 -5 -2 -1 ]  ==>  1
[ 5 -5 ]  ==>  1
[ -2 ]  ==>  1
[ 1 ]  ==>  2
[  ]  ==>  1
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
