#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Forbidden_numbers
#c# 2023-04-29 >RC
#p# OK

my @res;

use v5.36;

use List::AllUtils 'firstidx';
use Lingua::EN::Numbers qw(num2en);

my $limit = 1 + int 5e6 / 8;
my @f = map { $_*8 - 1 } 1..$limit;

my @forbidden = $f[0];
my($p0,$p1) = (1,0);
do {
    push @forbidden, ($f[$p0] < $forbidden[$p1]*4) ? $f[$p0++] : $forbidden[$p1++]*4;
} until $p0 == $limit or $p1 == $limit;

push @res, sprintf "First %s forbidden numbers:", num2en 50;
push @res, sprintf(('%4d')x50, @forbidden[0..49]) =~ s/.{40}\K(?=.)/\n/gr;
push @res, '';

for my $x (5e2, 5e3, 5e4, 5e5, 5e6) {
    push @res, sprintf "%6d = forbidden number count up to %s", 
            (firstidx { $_> $x } @forbidden),
            num2en($x);  
}

say my $result = join "\n", @res;

my $ref = <<'END';
First fifty forbidden numbers:
   7  15  23  28  31  39  47  55  60  63
  71  79  87  92  95 103 111 112 119 124
 127 135 143 151 156 159 167 175 183 188
 191 199 207 215 220 223 231 239 240 247
 252 255 263 271 279 284 287 295 303 311

    82 = forbidden number count up to five hundred
   831 = forbidden number count up to five thousand
  8330 = forbidden number count up to fifty thousand
 83331 = forbidden number count up to five hundred thousand
833329 = forbidden number count up to five million
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
<syntaxhighlight lang="perl" line>use strict; 
use warnings;

</syntaxhighlight>
{{out}}
<pre>
</pre>
