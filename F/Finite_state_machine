#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Finite_state_machine
#c# 2021-01-31 <RC
#p# OK
#n# Added a dummy input called "IMPLICIT" that does not actually require input but automatically transitions to next state.
#=# RC pipe: DEPOSIT\nSELECT\nREMOVE\nQUIT

my @res;

use strict;
use warnings;
use feature 'say';

my ($state, $action, %fsm) = 'ready';
while( <DATA> )
  {
  my ($start, $action, $end, $message) = split ' ', $_, 4;
  $fsm{$start}{$action} = { next => $end, message => $message || "\n" };
  }

while( $state ne 'exit' )
  {
  push @res, "in state $state\n";
  do
    {
    ($action) = grep $_ eq 'IMPLICIT', my @actions = sort keys %{$fsm{$state}};
    if( not $action )
      {
      push @res, "Enter " . join(' or ', @actions) . " : ";
      chomp($action = uc <>);
      }
    }
  until $fsm{$state}{$action};
  push @res, $fsm{$state}{$action}{message};
  $state = $fsm{$state}{$action}{next};
  }

say my $result = join "", @res;

my $ref = <<'EOD';
in state ready
Enter DEPOSIT or QUIT : deposit coins
in state waiting
Enter REFUND or SELECT : remove item
in state dispense
Enter REMOVE : Thank You
in state ready
Enter DEPOSIT or QUIT : 
EOD

use Test::More;
is ($result, $ref);
done_testing();

__END__
ready     DEPOSIT  waiting    deposit coins
ready     QUIT     exit
waiting   SELECT   dispense   remove item
waiting   REFUND   refunding  take the refund
dispense  REMOVE   ready      Thank You
refunding IMPLICIT ready
