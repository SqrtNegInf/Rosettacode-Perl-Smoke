#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Free_polyominoes_enumeration
#c# 2020-11-30 <RC
#p# OK
#n# OEIS:A000105

use strict;
use warnings;
use feature 'say';

my @res;

my @new = "#\n";

for my $N ( 2 .. 10 )
  {
  @new = find( @new );
  my %allbest;
  $allbest{best($_)}++ for @new;
  my @show = @new = sort keys %allbest;
  push @res, sprintf "rank: %2d  count: %d\n", $N, scalar @show;
  if( @show <= 12 )
    {
    my $fmt = join '', map({ /\n/; '%' . ($+[0] + 1) . 's' } @show), "\n";
    my $line;
   #grep $_, @show and $line .= sprintf($fmt, map s/(.*)\n// && $1, @show) for 0 .. $N;
    for (0..$N) { $line .= sprintf($fmt, map { s/(.*)\n// && $1} @show ) if grep $_, @show }
    push(@res,$line);
    }
  }

sub bare {
  local $_ = shift;
  s/^ *\n//gm;
  s/^ //gm until /^#/m;
  s/ $//gm until /#$/m;
  $_;
}

sub transpose {
  local $_ = shift;
  my $t = '';
  $t .= "\n" while s/^./ $t .= $&; '' /gem;
  $t;
}

sub rotate {
  local $_ = shift;
  my $t = '';
  $t .= "\n" while s/.$/ $t .= $&; '' /gem;
  $t;
}

sub best {
  my %all = (shift, 1);
  for my $p (keys %all)
    {
    $all{ my $tmp = rotate $p }++;
    $all{ rotate $tmp }++;
    }
  $all{ transpose $_ }++ for keys %all;
  $all{ s/(.+)/reverse $1/ger }++ for keys %all;        # mirror
  (sort keys %all)[-1];
}

sub find {
  my @before = @_;
  my %new;
  for my $p ( @before ) {
    local $_ = $p;
    s/^/ /gm;
    s/\n/ \n/g;
    my $line = s/\n.*/\n/sr =~ tr/\n/ /cr;
    $_ = $line . $_ . $line;
    my $n = -1 + length $line;
    my $gap = qr/.{$n}/s;
    $new{ bare "$`#$'" }++ while / (?=#)/g;
    $new{ bare "$`#$'" }++ while / (?=$gap#)/g;
    $new{ bare "$`#$'" }++ while /(?<=#) /g;
    $new{ bare "$`#$'" }++ while /(?<=#$gap) /g;
  }
  keys %new;
}

say my $result = join "\n", @res;

my $ref = <<'EOD';
rank:  2  count: 1

  ##

rank:  3  count: 2

  ##  ###
  #      

rank:  4  count: 5

  ##  ##   ###  ###  ####
  ##   ##   #   #        

rank:  5  count: 12

   #   ##   ##   ##   ###  ###  ###  ###  ###   ####  ####  #####
  ###   #    ##   ##   #   #    # #  ##     ##   #    #          
   #    ##    #   #    #   #                                     

rank:  6  count: 35

rank:  7  count: 108

rank:  8  count: 369

rank:  9  count: 1285

rank: 10  count: 4655

EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
