#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Cubic_Special_Primes
#c# 2021-04-19 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use  ntheory 'is_prime';

my @sp = my $previous = 2;

do { 
    my($next,$n);
    while () { last if is_prime( $next = $previous + ++$n**3 ) }
    push @sp, $next;
    $previous = $next;
} until $sp[-1] >= 15000;

pop @sp and say my $result = join ' ', @sp;
# say scalar @sp . " matching numbers:\n" . join ' ', @sp;

my $ref = '2 3 11 19 83 1811 2027 2243 2251 2467 2531 2539 3539 3547 4547 5059 10891 12619 13619 13627 13691 13907 14419';

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
