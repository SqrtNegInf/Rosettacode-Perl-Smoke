#!/usr/local/bin/perl
#u# https://www.rosettacode.org/wiki/Centre_and_radius_of_a_circle_passing_through_3_points_in_a_plane
#c# 2024-09-14 <RC
#p# OK

use strict;
use warnings;
use feature 'say';

sub circle {
   my ($point1, $point2, $point3) = @_;
   my (($x1, $y1), ($x2, $y2), ($x3, $y3)) = ( @$point1,  @$point2, @$point3);

   my $C_x = ((($x1**2 + $y1**2) * ($y3 - $y2)  +
               ($x2**2 + $y2**2) * ($y1 - $y3)  +
               ($x3**2 + $y3**2) * ($y2 - $y1)) /
               ($x1*($y3 - $y2) + $x2*($y1 - $y3) + $x3*($y2 - $y1)) / 2);

   my $C_y = ((($x1**2 + $y1**2) * ($x3 - $x2)  +
               ($x2**2 + $y2**2) * ($x1 - $x3)  +
               ($x3**2 + $y3**2) * ($x2 - $x1)) /
               ($y1*($x3 - $x2) + $y2*($x1 - $x3) + $y3*($x2 - $x1)) / 2);

   my $radius = sqrt(($C_x - $x1)**2 + ($C_y - $y1)**2);

   return { center => [$C_x, $C_y], radius => $radius };
}

my $PT = circle([22.83, 2.07], [14.39, 30.24], [33.65, 17.31]);
say my $result = 'center => (' . join(' ', @{$PT->{'center'}}) . ') radius => ' . $PT->{'radius'};

use Test::More;
is ($result, 'center => (18.9785156601488 16.2654107977159) radius => 14.7086239783342');
done_testing();
