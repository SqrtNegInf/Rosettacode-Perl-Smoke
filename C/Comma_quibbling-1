#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Comma_quibbling
#c# 2018-07-23 <RC
#p# OK

my $result;

use strict;
use warnings;
use feature 'say';

sub comma_quibbling :prototype(@) {
    return "{$_}" for
        @_ < 2 ? "@_" :
        join(', ', @_[0..@_-2]) . ' and ' . $_[-1];
}

$result .= comma_quibbling(@$_). "\n" for
    [], [qw<ABC>], [<ABC DEF>], [<ABC DEF G H>]; # DH note the 'qw' cannot be elided

say $result;

my $ref = <<'END';
{}
{ABC}
{ABC and DEF}
{ABC, DEF, G and H}
END

use Test::More;
is ($result, $ref);
done_testing;
