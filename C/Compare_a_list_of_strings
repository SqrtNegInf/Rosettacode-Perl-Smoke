#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Compare_a_list_of_strings
#c# 2018-07-24 <>RC
#p# OK
#n# had a bug: \1 replaces $1

use feature 'say';

use List::Util 1.33 qw(all);
 
@strings = qw(abc);
$t1 = all { $strings[0] eq $strings[$_] } 1..$#strings;  # All equal
$t2 = all { $strings[$_-1] lt $strings[$_] } 1..$#strings;  # Strictly ascending
$t3 = join("\0", @strings) =~ /^ ( [^\0]*+ ) (?: \0 \1 )* $/x;  # All equal
$result .= "t1:$t1 t2:$t2 t3:$t3 : ";

@strings = qw(abc def ghi);
$t1 = all { $strings[0] eq $strings[$_] } 1..$#strings;  # All equal
$t2 = all { $strings[$_-1] lt $strings[$_] } 1..$#strings;  # Strictly ascending
$t3 = join("\0", @strings) =~ /^ ( [^\0]*+ ) (?: \0 \1 )* $/x;  # All equal
$result .= "t1:$t1 t2:$t2 t3:$t3 : ";

@strings = qw(abc abc abc);
$t1 = all { $strings[0] eq $strings[$_] } 1..$#strings;  # All equal
$t2 = all { $strings[$_-1] lt $strings[$_] } 1..$#strings;  # Strictly ascending
$t3 = join("\0", @strings) =~ /^ ( [^\0]*+ ) (?: \0 \1 )* $/x;  # All equal # buggy?
$result .= "t1:$t1 t2:$t2 t3:$t3 : ";

say $result;

use Test::More;
is ($result, 't1:1 t2:1 t3:1 : t1: t2:1 t3: : t1:1 t2: t3:1 : ');
done_testing();
