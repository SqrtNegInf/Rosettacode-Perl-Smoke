#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/CalmoSoft_primes
#c# 2023-04-23 >RC
#p# OK

my @res;

use v5.36;

use ntheory <primes is_prime vecsum>;

for my $limit (<100 250 500 1000>) {
    my @primes = @{ primes(2,$limit) };
    T: for my $terms (reverse 1 .. @primes) {
        for my $i (0 .. @primes-$terms) {
            my @primes = @primes[$i..($i+$terms)-1];
            next unless is_prime (my $sum = vecsum @primes);
            push @res, "For primes up to $limit:";
            push @res, join ' ... ', join(' + ',@primes[0..5]), join(' + ',@primes[-5..-1]) . " = $sum ($terms primes)\n"; 
            last T;
        }
    }
}

say my $result = join "\n", @res;

my $ref = <<'END';
For primes up to 100:
7 + 11 + 13 + 17 + 19 + 23 ... 71 + 73 + 79 + 83 + 89 = 953 (21 primes)

For primes up to 250:
11 + 13 + 17 + 19 + 23 + 29 ... 227 + 229 + 233 + 239 + 241 = 5813 (49 primes)

For primes up to 500:
31 + 37 + 41 + 43 + 47 + 53 ... 467 + 479 + 487 + 491 + 499 = 21407 (85 primes)

For primes up to 1000:
13 + 17 + 19 + 23 + 29 + 31 ... 971 + 977 + 983 + 991 + 997 = 76099 (163 primes)

END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
