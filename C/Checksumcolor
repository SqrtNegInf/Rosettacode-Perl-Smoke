#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Checksumcolor
#c# 2019-04-23 >RC
#p# OK
#n# inspired by Sidef, but even simpler
#n# RC task HTML output generated by filtering through 'aha'

use strict;
use warnings;
use Term::ANSIColor qw<colored :constants256>;
my $result;

open my $fh, '<', 'ref/checksumcolor.dat';

while (<$fh>) {
    my($cs,$fn) = /(^\S+)\s+(.*)/;
    $result .= colored($_, 'ansi' . hex $_) for $cs =~ /(..)/g;
    $result .= " $fn\n";
}

print $result; 

my $ref = <<'EOD';
[38;5;178mb2[0m[38;5;179mb3[0m[38;5;192mc0[0m[38;5;244mf4[0m[38;5;129m81[0m[38;5;21m15[0m[38;5;152m98[0m[38;5;94m5e[0m[38;5;12m0c[0m[38;5;138m8a[0m[38;5;64m40[0m[38;5;104m68[0m[38;5;131m83[0m[38;5;215md7[0m[38;5;250mfa[0m[38;5;197mc5[0m ref/test/not-in-kansas.txt
[38;5;87m57[0m[38;5;233me9[0m[38;5;105m69[0m[38;5;221mdd[0m[38;5;103m67[0m[38;5;151m97[0m[38;5;203mcb[0m[38;5;105m69[0m[38;5;138m8a[0m[38;5;180mb4[0m[38;5;68m44[0m[38;5;104m68[0m[38;5;219mdb[0m[38;5;242mf2[0m[38;5;183mb7[0m[38;5;164ma4[0m ref/test/reverse_words.txt
[38;5;144m90[0m[38;5;49m31[0m[38;5;207mcf[0m[38;5;10m0a[0m[38;5;199mc7[0m[38;5;255mff[0m[38;5;169ma9[0m[38;5;108m6c[0m[38;5;213md5[0m[38;5;176mb0[0m[38;5;74m4a[0m[38;5;168ma8[0m[38;5;5m05[0m[38;5;67m43[0m[38;5;162ma2[0m[38;5;104m68[0m ref/test/sample.txt
EOD

use Test::More;
is($result, $ref);
done_testing;
