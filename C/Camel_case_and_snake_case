#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Camel_case_and_snake_case
#c# 2021-11-26 <RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

my @words = (  
  "snakeCase", "snake_case", "variable_10_case", "variable10Case", "#rgo rE tHis",
  "hurry-up-joe!", "c://my-docs/happy_Flag-Day/12.doc", "  spaces  "
);

sub tosnake { shift =~ s/^ +| +$//gr =~ s/[A-Z]/_\l$&/gr =~ tr/ -/_/r =~ s/__+/_/gr }
sub tocamel { shift =~ s/^ +| +$//gr =~ s/[ _-]([a-z0-9])/\u$1/gir }

push @res, "to snake case\n";
for my $word ( @words ) { push @res, sprintf "%35s -> %s", $word, tosnake($word) }

push @res, "\nto camel case\n";
for my $word ( @words ) { push @res, sprintf "%35s -> %s", $word, tocamel($word) }

say my $result = join "\n", @res;

my $ref = <<'EOD';
to snake case

                          snakeCase -> snake_case
                         snake_case -> snake_case
                   variable_10_case -> variable_10_case
                     variable10Case -> variable10_case
                       #rgo rE tHis -> #rgo_r_e_t_his
                      hurry-up-joe! -> hurry_up_joe!
  c://my-docs/happy_Flag-Day/12.doc -> c://my_docs/happy_flag_day/12.doc
                           spaces   -> spaces

to camel case

                          snakeCase -> snakeCase
                         snake_case -> snakeCase
                   variable_10_case -> variable10Case
                     variable10Case -> variable10Case
                       #rgo rE tHis -> #rgoRETHis
                      hurry-up-joe! -> hurryUpJoe!
  c://my-docs/happy_Flag-Day/12.doc -> c://myDocs/happyFlagDay/12.doc
                           spaces   -> spaces
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing();
