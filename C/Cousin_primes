#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Cousin_primes
#c# 2021-03-22 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use ntheory 'is_prime';

# sorta like Raku
my @c;
map { push @c, [$_,$_+4] if is_prime($_) and is_prime($_+4) } 2..199;
print '(' . join(' ', @$_) . ') ' for @c; print "\n"; print "\n";

# on RC
my($limit, @cp) = 1000;
is_prime($_) and is_prime($_+4) and push @cp, "$_/@{[$_+4]}" for 2..$limit;
say my $result = @cp . " cousin prime pairs < $limit:\n" . 
        (sprintf "@{['%8s' x @cp]}", @cp) =~ s/(.{56})/$1\n/gr;

my $ref = <<'END';
41 cousin prime pairs < 1000:
     3/7    7/11   13/17   19/23   37/41   43/47   67/71
   79/83  97/101 103/107 109/113 127/131 163/167 193/197
 223/227 229/233 277/281 307/311 313/317 349/353 379/383
 397/401 439/443 457/461 463/467 487/491 499/503 613/617
 643/647 673/677 739/743 757/761 769/773 823/827 853/857
 859/863 877/881 883/887 907/911 937/941 967/971
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
