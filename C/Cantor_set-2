#!/usr/bin/env perl
#u# http://rosettacode.org/wiki/Cantor_set
#c# 2018-11-05 NOT ON RC
#p# OK
#f# RC file: cantor-set.png
#n# graphical version, translated from Raku
#n# NB: subroutines must be nested

use Imager;

sub cantor {
    my($height) = @_;
    my $width = 3 ** ($height - 1);
 
    my @lines = ('#' x $width) x $height;
 
    sub trim_middle_third {
        my($len, $start, $index) = @_;
        my $seg = int $len / 3
            or return;
 
        for $i ( $index .. $height - 1 ) {
          for $j ( 0 .. $seg - 1 ) {
            substr @lines[$i], $start + $seg + $j, 1, ' ';
          }
        }
 
        trim_middle_third( $seg, $start + $_, $index + 1 ) for 0, $seg * 2;
    }
 
    trim_middle_third( $width, 0, 1 );
    @lines;
}
 
$y_zoom = 10;

@img = cantor(8);
my $x= length($img[0]); my $y = @img;
$png = Imager->new(xsize => length($img[0]), ysize => ($y_zoom-1)*@img);
for $y (0..$#img) {
    for $x (0..length($img[$y])) {
      for $scale (0..$y_zoom-1) {
        $png->setpixel(x => $x, y => 1+($y_zoom*($y-1)+$scale), color => substr($img[$y],$x,1) eq '#' ? [255, 255, 32] : [16, 16, 16]);
      }
    }
}
$png->write(file => "run/cantor-set.png");
