#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Chowla_numbers
#c# 2019-03-23 >RC
#p# OK

use strict;
use warnings;
my $result;

use ntheory 'divisor_sum';

sub comma { reverse ((reverse shift) =~ s/.{3}\K/,/gr) =~ s/^,//r }     # yep, this works too
#sub comma { reverse ((reverse shift) =~ s/(.{3})/$1,/gr) =~ s/^,//r }

sub chowla {
    my($n) = @_;
    $n < 2 ? 0 : divisor_sum($n) - ($n + 1);
}

sub prime_cnt {
    my($n) = @_;
    my $cnt = 1;
    for (3..$n) {
        $cnt++ if $_%2 and chowla($_) == 0
    }
    #map { $cnt++ if $_%2 and chowla($_) == 0 } 2..$n; # speed penalty
    $cnt;
}

sub perfect {
    my($n) = @_;
    my @p;
    for my $i (1..$n) {
        push @p, $i if $i > 1 and chowla($i) == $i-1;
    }
    #map { push @p, $_ if $_ > 1 and chowla($_) == $_-1 } 1..$n;  # speed penalty
    @p;
}

$result .= sprintf "chowla(%2d) = %2d\n", $_, chowla($_) for 1..37;
$result .= "\nCount of primes up to:\n";
$result .= sprintf "%10s %s\n", comma(10**$_), comma(prime_cnt(10**$_)) for 2..7;
my @perfect = perfect(my $limit = 35_000_000);
$result .= sprintf "\nThere are %d perfect numbers up to %s: %s\n", 
    1+$#perfect, comma($limit), join(' ', map { comma($_) } @perfect);

print $result;

my $ref = <<'EOD';
chowla( 1) =  0
chowla( 2) =  0
chowla( 3) =  0
chowla( 4) =  2
chowla( 5) =  0
chowla( 6) =  5
chowla( 7) =  0
chowla( 8) =  6
chowla( 9) =  3
chowla(10) =  7
chowla(11) =  0
chowla(12) = 15
chowla(13) =  0
chowla(14) =  9
chowla(15) =  8
chowla(16) = 14
chowla(17) =  0
chowla(18) = 20
chowla(19) =  0
chowla(20) = 21
chowla(21) = 10
chowla(22) = 13
chowla(23) =  0
chowla(24) = 35
chowla(25) =  5
chowla(26) = 15
chowla(27) = 12
chowla(28) = 27
chowla(29) =  0
chowla(30) = 41
chowla(31) =  0
chowla(32) = 30
chowla(33) = 14
chowla(34) = 19
chowla(35) = 12
chowla(36) = 54
chowla(37) =  0

Count of primes up to:
       100 25
     1,000 168
    10,000 1,229
   100,000 9,592
 1,000,000 78,498
10,000,000 664,579

There are 5 perfect numbers up to 35,000,000: 6 28 496 8,128 33,550,336
EOD

use Test::More;
is($result, $ref);
done_testing();
