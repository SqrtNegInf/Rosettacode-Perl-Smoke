#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Zig-zag_matrix
#c# 2018-07-11 <RC
#p# OK

use feature 'say';
my $result;

use 5.010;

sub zig_zag {
    my $n          = shift;
    my $max_number = $n**2;
    my @matrix;
    my $number = 0;
    for my $j ( 0 .. --$n ) {
        for my $i (
            $j % 2
            ? 0 .. $j
            : reverse 0 .. $j
          )
        {
            $matrix[$i][ $j - $i ] = $number++;
            #next if $j == $n;
            $matrix[ $n - $i ][ $n - ( $j - $i ) ] = $max_number - $number;
        }
    }
    return @matrix;
}

my @zig_zag_matrix = zig_zag(5);
$result .= (join("\t", @{$_}) . "\n" ) foreach @zig_zag_matrix;
say $result;

my $ref = <<END;
0	1	5	6	14
2	4	7	13	15
3	8	12	16	21
9	11	17	20	22
10	18	19	23	24
END

use Test::More;
is ($result, $ref);
done_testing();
