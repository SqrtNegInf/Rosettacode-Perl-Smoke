#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Zig-zag_matrix
#c# 2018-07-11 <RC
#p# OK

use strict;
use warnings;
use feature 'say';
my $result;

sub zig_zag {
    my ($w, $h, @r, $n) = @_;

    $r[ $_->[1] ][ $_->[0] ] = $n++	for
    	sort {	$a->[0] + $a->[1] <=> $b->[0] + $b->[1]	  or
		($a->[0] + $a->[1]) % 2
			? $a->[1] <=> $b->[1]
			: $a->[0] <=> $b->[0]
	}
	map  {	my $e = $_;
		map{ [$e, $_] } 0 .. $w-1
	} 0 .. $h - 1;
    @r
}

say $result = join '', map{ "@$_\n" } zig_zag(3, 5);

my $ref = <<END;
0 1 5 6 11
2 4 7 10 12
3 8 9 13 14
END

use Test::More;
is ($result, $ref);
done_testing();
