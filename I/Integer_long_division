#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Integer_long_division
#c# 2021-09-21 >RC
#p# OK

my @res;

use strict;
use warnings;
use feature 'say';

sub long_division {
    my($n, $d) = @_;
    my %seen;

    my$cnt;
    my($numerator,$denominator) = (abs $n, abs $d);
    my $negative = ($n < 0 xor $d < 0) ? '-' : '';

    my $fraction = sprintf '%d.', $numerator / $denominator;
    my $position = length $fraction;
    $numerator %= $denominator;
    while (!$seen{$numerator}) {
        return 0, $fraction =~ s/\.$//r unless $numerator;
        $cnt++;
        $seen{$numerator} = $position;
        $fraction  .= int 10 * $numerator / $denominator;
        $numerator  =     10 * $numerator % $denominator;
        $position++;
    }

    my $period = length($fraction) - $seen{$numerator};
    substr($fraction, $seen{$numerator}, 0, '{'); $fraction .= '}';
    $period, $negative . $fraction  # "$negative$fraction}"
}

push @res, sprintf  "%35s Period is %5d : %s", $_, long_division split '/', $_
    for <0/1 1/1 1/5 1/3 -1/3 1/7 -83/60 1/17 10/13 3227/555 476837158203125/9223372036854775808 1/149>; # aka 5**21/2**63

say my $result = join "\n", @res;

my $ref = <<'END';
                                0/1 Period is     0 : 0
                                1/1 Period is     0 : 1
                                1/5 Period is     0 : 0.2
                                1/3 Period is     1 : 0.{3}
                               -1/3 Period is     1 : -0.{3}
                                1/7 Period is     6 : 0.{142857}
                             -83/60 Period is     1 : -1.38{3}
                               1/17 Period is    16 : 0.{0588235294117647}
                              10/13 Period is     6 : 0.{769230}
                           3227/555 Period is     3 : 5.8{144}
476837158203125/9223372036854775808 Period is     0 : 0.0000516987882845642321427703791414387524127960205078125
                              1/149 Period is   148 : 0.{0067114093959731543624161073825503355704697986577181208053691275167785234899328859060402684563758389261744966442953020134228187919463087248322147651}
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
