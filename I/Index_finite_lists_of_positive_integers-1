#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Index_finite_lists_of_positive_integers
#c# 2018-09-07 >RC
#p# OK

use strict;
use warnings;
use feature 'say';
my @res;

#Here is a cheap solution using a base-11 encoding and string operations:

use bigint try => 'GMP';
use ntheory <todigits fromdigits todigitstring>;

sub rank   { join   '', fromdigits(join('a',@_), 11) }
sub unrank { split 'a', todigitstring($_[0],     11) }

push @res, join ' ', my @n = <12 11 0 7 9 15 15 5 7 13 5 5>;
push @res, my $n = rank(@n);
push @res, join ' ', unrank $n;

say my $result = join "\n", @res;

my $ref = <<'EOD';
12 11 0 7 9 15 15 5 7 13 5 5
16588666500024842935939135419
12 11 0 7 9 15 15 5 7 13 5 5
EOD

use Test::More;
@n = sort { -1 + 2*int(rand 2) } 1..1000;
is (@n, unrank(rank(@n)));
chop $ref;
is ($result, $ref);
done_testing;
