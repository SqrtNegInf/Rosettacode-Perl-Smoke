#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Inverted_index
#c# 2018-08-13 <RC
#p# OK
#n# returns files that contain *all* words

use strict;
use warnings;
use feature 'say';
my $result;

use Set::Object 'set';

# given an array of files, returns the index
sub createindex {
    my @files = @_;
    my %iindex;

    for my $file (@files) {
	   open(my $F, '<', $file) or die "Can't read file $file: $!";
	   while(<$F>) {
          s/\A\W+//;
	      foreach my $w (map {lc} grep {length() >= 3} split /\W+/) {
		     if ( exists($iindex{$w}) ) {
		        $iindex{$w}->insert($file);
		     } else {
		        $iindex{$w} = set($file);
		     }
	      }
	   }
	   close($F);
    }
    return %iindex;
}

# given an index, search for words
sub search_words {
    my %idx = %{shift()};
    my @words = @_;
    my $res = set();

    foreach my $w (map {lc} @words) {
	$w =~ s/\W+//g;            # strip non-words chars
        length $w < 3 and next;
        exists $idx{$w} or return set();
        $res = $res->is_null
          ? set(@{$idx{$w}})
          : $res * $idx{$w};       # set intersection
    }
    @$res;
}

# TESTING
# USAGE: invidx.pl the,list,of,words file1 file2 .. fileN
#my @searchwords = split /,/, shift;
# first arg is a comma-separated list of words to search for
my @files = <ref/sample.txt ref/sample1.txt ref/sample2.txt>;
my @searchwords = <glorp zizzer>;

say $result = "$_"
    foreach search_words({createindex(@files)}, @searchwords);

use Test::More;
is ($result, 'ref/sample1.txt');
done_testing;
