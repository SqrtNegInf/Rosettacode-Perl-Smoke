#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Idiomatically_determine_all_the_characters_that_can_be_used_for_symbols
#n# nocode
#c# 2018-09-15 >RC
#p# OK
#n# it's child's play really...

use feature 'say';

use warnings;
use utf8;
use experimentals;

my $id_pattern = qr/
    (?(DEFINE)
            (?<variable>
                    (?&sigil)
                    (?:
                                    (?&normal_identifier)
                            |   \{ \s* (?&normal_identifier) \s* \}
                    )
            )
            (?<normal_identifier>
                    (?: :: )* '?
                      (?&basic_identifier)
                      (?: (?= (?: :: )+ '? | (?: :: )* ' ) (?&normal_identifier) )?
                    (?: :: )*
            )
            (?<basic_identifier>
                # is use utf8 on?
                    (?(?{ (caller(0))[8] & $utf8::hint_bits })
                            (?&Perl_XIDS) (?&Perl_XIDC)*
                        | (?aa) (?!\d) \w+
                    )
            )
            (?<sigil> [&*\$\@\%])
            (?<Perl_XIDS> (?[ ( \p{Word} & \p{XID_Start} ) + [_] ]) )
            (?<Perl_XIDC> (?[ \p{Word} & \p{XID_Continue} ]) )
    )
  /x;

#for $t (qw<foo _foo 1foo _>) {
#    say "good: $t" if $t =~ /$id_pattern/;
#}

# $::::'foo and $foo::'bar are legal, but $::'::foo and $foo'::bar
#  $'foo and $foo'bar are legal, but $foo'bar' is not.
$x = q{$foo'bar'};
say $x; 
say 'good 1' if q{$foo'::bar} =~ /$id_pattern/;

#say $result; 
#say $result = join "\n", @res;
my $ref = <<'EOD';
EOD

use Test::More;
#is ($result, $ref);
#done_testing();

__END__

=={{header|Perl}}==
{{trans|Perl 6}}
<lang perl></lang>
{{out}}
<pre  style="height:35ex"></pre>
