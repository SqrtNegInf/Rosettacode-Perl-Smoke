#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Quadrat_Special_Primes
#c# 2021-04-19 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use  ntheory 'is_prime';

my @sp = my $previous = 2;

do { 
    my($next,$n);
    while () { last if is_prime( $next = $previous + ++$n**2 ) }
    push @sp, $next;
    $previous = $next;
} until $sp[-1] >= 16000;

pop @sp and say my $result = (sprintf '%-7d'x@sp, @sp) =~ s/.{1,$#sp}\K\s/\n/gr;

my $ref = <<'END';
2      3      7      11     47     83     227   
263    587    911    947    983    1019   1163  
1307   1451   1487   1523   1559   2459   3359  
4259   4583   5483   5519   5843   5879   6203  
6779   7103   7247   7283   7607   7643   8219  
8363   10667  11243  11279  11423  12323  12647 
12791  13367  13691  14591  14627  14771  15671 
END

use Test::More;
is($result, $ref);
done_testing;
