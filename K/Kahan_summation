#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Kahan_summation
#c# 2019-10-04 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

my @res;

sub kahan {
    my(@nums) = @_;
    my $summ = my $c = 0e0;
    for my $num (@nums) {
        my $y = $num - $c;
        my $t = $summ + $y;
        $c = ($t - $summ) - $y;
        $summ = $t;
    }
    $summ
}

my $eps = 1;
do { $eps /= 2 } until 1e0 == 1e0 + $eps;

push @res, 'Epsilon:    ' . $eps;
push @res, 'Simple sum: ' . sprintf "%.16f", ((1e0 + $eps) - $eps);
push @res, 'Kahan sum:  ' . sprintf "%.16f", kahan(1e0, $eps, -$eps);

say my $result = join "\n", @res;

my $ref = <<'END';
Epsilon:    1.11022302462516e-16
Simple sum: 0.9999999999999999
Kahan sum:  1.0000000000000000
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
