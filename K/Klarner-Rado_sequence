#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Klarner-Rado_sequence
#c# 2022-09-13 >RC
#p# OK

my @res;

use v5.36;
use List::Util <max min>;

sub comma { reverse ((reverse shift) =~ s/(.{3})/$1,/gr) =~ s/^,//r }
sub table ($c, @V) { my $t = $c * (my $w = 2 + length max @V); ( sprintf( ('%'.$w.'d')x@V, @V) ) =~ s/.{1,$t}\K/\n/gr }

# generate terms up to 'n', as needed
sub Klarner_Rado ($n) {
    state @klarner_rado = 1;
    state @next = ( x2(), x3() );

    return @klarner_rado if +@klarner_rado >= $n; # no additional terms required

    until (@klarner_rado == $n) {
        push @klarner_rado, my $min = min @next;
        $next[0] = x2() if $next[0] == $min;
        $next[1] = x3() if $next[1] == $min;
    }

    sub x2 { state $i = 0; $klarner_rado[$i++] * 2 + 1 }
    sub x3 { state $i = 0; $klarner_rado[$i++] * 3 + 1 }

    @klarner_rado
}

push @res, "First 100 elements of Klarner-Rado sequence:";
push @res, table 10, Klarner_Rado(100);
push @res, 'Terms by powers of 10:';
push @res, sprintf "%10s = %s", comma($_), comma( (Klarner_Rado $_)[$_-1] ) for map { 10**$_ } 0..6; 

say my $result = join "\n", @res;

my $ref = <<'END';
First 100 elements of Klarner-Rado sequence:
    1    3    4    7    9   10   13   15   19   21
   22   27   28   31   39   40   43   45   46   55
   57   58   63   64   67   79   81   82   85   87
   91   93   94  111  115  117  118  121  127  129
  130  135  136  139  159  163  165  166  171  172
  175  183  187  189  190  193  202  223  231  235
  237  238  243  244  247  255  256  259  261  262
  271  273  274  279  280  283  319  327  331  333
  334  343  345  346  351  352  355  364  367  375
  379  381  382  387  388  391  405  406  409  418

Terms by powers of 10:
         1 = 1
        10 = 21
       100 = 418
     1,000 = 8,487
    10,000 = 157,653
   100,000 = 2,911,581
 1,000,000 = 54,381,285
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
