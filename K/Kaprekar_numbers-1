#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Kaprekar_numbers
#c# 2018-08-14 <RC
#p# OK

use strict;
use warnings;
use feature 'say';
my $result;

sub isKap {
  my $k = shift;
  return if $k*($k-1) % 9;  # Fast return "casting out nines"
  my($k2, $p) = ($k*$k, 10);
  do {
    my $i = int($k2/$p);
    my $j = $k2 % $p;
    return 1 if $j && $i+$j == $k;
    $p *= 10;
  } while $p <= $k2;
  0;
}

$result .= "[". join(" ", grep { isKap($_) } 1..9999). "]\n\n";
my @kaprekar;
isKap($_) && push @kaprekar,$_ for 1..1_000_000;
$result .= "Kaprekar Numbers below 1000000: ". scalar(@kaprekar). "\n";

say $result;
my $ref = <<'END';
[1 9 45 55 99 297 703 999 2223 2728 4879 4950 5050 5292 7272 7777 9999]

Kaprekar Numbers below 1000000: 54
END

use Test::More;
is ($result, $ref);
done_testing;
