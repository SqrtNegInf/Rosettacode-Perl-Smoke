#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Kaprekar_numbers
#c# 2018-08-14 <RC
#p# OK

use strict;
use warnings;
use feature 'say';
my $result;

use ntheory qw/fordivisors gcd invmod/;

my %kap;
for my $n (1..15) {
  my $np = int(10**$n)-1;
  fordivisors {
    my($d, $dp) = ($_, $np/$_);
    $kap{ $dp==1 ? $d : invmod($d,$dp)*$d }++
      if  gcd($d, $dp) == 1;
  } $np;
}
my @kap = sort { $a<=>$b } keys %kap;
for my $n (6 .. 14) {
  my $np = int(10**$n)-1;
  $result .= sprintf "Kaprekar numbers <= 10^%2d:  %5d\n",
         $n, scalar(grep { $_ <= $np } @kap);
}

say $result;
my $ref = <<'END';
Kaprekar numbers <= 10^ 6:     54
Kaprekar numbers <= 10^ 7:     62
Kaprekar numbers <= 10^ 8:     91
Kaprekar numbers <= 10^ 9:    102
Kaprekar numbers <= 10^10:    132
Kaprekar numbers <= 10^11:    149
Kaprekar numbers <= 10^12:    264
Kaprekar numbers <= 10^13:    281
Kaprekar numbers <= 10^14:    316
END

use Test::More;
is ($result, $ref);
done_testing;
