#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Kolakoski_sequence
#c# 2018-12-01 >RC
#p# OK

use feature 'say';

sub kolakoski {
    my($terms,@seed) = @_;
    my @k;
    my $k = $seed[0] == 1 ? 1 : 0;
    if ($k == 1) { @k = (1, split '', (($seed[1]) x $seed[1])) }
    else         { @k = ($seed[0]) x $seed[0] }
    while ($terms > @k) {
        $k++; 
        push @k, ($seed[$k % @seed]) x $k[$k];
    }
    @k[0..$terms-1]
}

sub rle {
    (my $string = join '', @_) =~ s/((.)\2*)/length $1/eg;
    split '', $string
}

for ([20,1,2], [20,2,1], [30,1,3,1,2], [30,1,3,2,1]) {
    $terms = shift @$_;
    push @res, "\n$terms members of the series generated from [@$_] is:";
    push @res, join ' ', @kolakoski = kolakoski($terms, @$_);
    $status = join('', @rle = rle(@kolakoski)) eq join('', @kolakoski[0..$#rle]) ? 'True' : 'False';
    push @res, "Looks like a Kolakoski sequence?: $status";
}

say $result = join "\n", @res;

my $ref = <<'EOD';

20 members of the series generated from [1 2] is:
1 2 2 1 1 2 1 2 2 1 2 2 1 1 2 1 1 2 2 1
Looks like a Kolakoski sequence?: True

20 members of the series generated from [2 1] is:
2 2 1 1 2 1 2 2 1 2 2 1 1 2 1 1 2 2 1 2
Looks like a Kolakoski sequence?: True

30 members of the series generated from [1 3 1 2] is:
1 3 3 3 1 1 1 2 2 2 1 3 1 2 2 1 1 3 3 1 2 2 2 1 3 3 1 1 2 1
Looks like a Kolakoski sequence?: True

30 members of the series generated from [1 3 2 1] is:
1 3 3 3 2 2 2 1 1 1 1 1 3 3 2 2 1 1 3 2 1 1 1 1 3 3 3 2 2 1
Looks like a Kolakoski sequence?: False
EOD

use Test::More;
chop $ref;
is($result, $ref);
done_testing();
