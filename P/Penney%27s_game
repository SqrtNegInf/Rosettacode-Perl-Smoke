#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Penney%27s_game
#t# interactive
#c# 2018-08-21 <RC
#p# OK

srand 123456;

$| = 1;

use feature 'say';
my $result;

use 5.020;
#use strict;
#use warnings;

#Choose who goes first
binaryRand() == 0 ? flipCoin(userFirst()) : flipCoin(compFirst());

#Return a randomly generated 1 or 0 
sub binaryRand
{
    return int(rand(2));
}
#Converts 1's and 0's to H's and T's, respectively.
sub convert
{
    my $randNum = binaryRand();
    if($randNum == 0)
    {
        return "T"
    }
    else
    {
        return "H";
    }
}

#Prompts for and returns a user's sequence of 3
sub uSeq
{
    $result .=("Please enter a sequence of 3 of \"H\" and \"T\". EG: HHT\n>");
    #my $uString = <STDIN>;
    my $uString = 'THH';

    while(1)
    {
        #Make it uppercase and validate input
        chomp($uString);
        $uString = uc $uString;
        #Check length and content (H's and T's only!)
        if(length $uString == 3 && (substr($uString, 0, 1) =~ /[HT]/ &&
                                    substr($uString, 1, 1) =~ /[HT]/ &&
                                    substr($uString, 2, 1) =~ /[HT]/))
        {
            last;
        }
        else
        {
            $result .=("Error, try again. \n");
            $result .=("Please enter a sequence of 3 of \"H\" and \"T\". EG: HHT\n");
            $uString = <STDIN>;
        }
    }
    return $uString;
}

#Returns an array with two elements: [0] user's seq, [1] random computer seq.
sub compFirst
{
    my $cSeq;
    #Randomly draw a sequence of 3
    for(my $i = 0; $i < 3; $i++)
    {
        $cSeq = $cSeq . convert();
    }

    $result .=("The computer guesses first:\ncomp- $cSeq\n");
    my $uSeq = uSeq();
    $result .=("user- $uSeq\n");
    my @seqArr = ($uSeq, $cSeq);
    return @seqArr;
}

#Returns an array with two elements: [0] user's seq, [1] optimal computer seq.
sub userFirst
{
    $result .=("The user quesses first:\n");
    my $uSeq = uSeq();
    my $cSeq;
    #Generate the optimal sequence based on $uSeq
    my $middle = substr($uSeq, 1, 1);
    $middle eq "H" ? $cSeq = "T" : $cSeq = "H";
    $cSeq = $cSeq . substr($uSeq, 0, 2); 

    $result .=("user- $uSeq\ncomp- $cSeq\n");
    my @seqArr = ($uSeq, $cSeq);
    return @seqArr; 
}

#Flips a coin, checking both sequences against the contents of the given array
sub flipCoin
{
    my ($uSeq, $cSeq) = @_;
    my $coin;
    while(1)
    {
        $coin = $coin . convert();
        if($coin =~ m/$uSeq/)
        {
            $result .=("The sequence of tosses was: $coin\n");
            $result .= ("The player wins!\n");
            last;
        }
        elsif($coin =~ m/$cSeq/)
        {
            $result .=("The sequence of tosses was: $coin\n");
            $result .= ("The computer wins!\n");
            last;
        }
    }
}

say $result;

my $ref = <<'EOD';
The computer guesses first:
comp- HHT
Please enter a sequence of 3 of "H" and "T". EG: HHT
>user- THH
The sequence of tosses was: TTTHH
The player wins!
EOD

use Test::More;
is ($result, $ref);
done_testing();
