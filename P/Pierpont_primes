#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Pierpont_primes
#c# 2019-09-03 >RC
#p# OK

use strict;
use warnings;
use feature 'say';

use bigint try=>"GMP";
use ntheory qw<is_prime>;

my @res;

# index of mininum value in list
sub min_index { my $b = $_[my $i = 0]; $_[$_] < $b && ($b = $_[$i = $_]) for 0..$#_; $i }

sub iter1 { my $m = shift; my $e = 0; return sub { $m ** $e++;    } }
sub iter2 { my $m = shift; my $e = 1; return sub { $m * ($e *= 2) } }

sub pierpont {
    my($max ) = shift || die 'Must specify count of primes to generate.';
    my($kind) = @_ ? shift : 1;
    die "Unknown type: $kind. Must be one of 1 (default) or 2" unless $kind == 1 || $kind == 2;
    $kind = -1 if $kind == 2;

    my $po3     = 3;
    my $add_one = 3;
    my @iterators;
    push @iterators, iter1(2);
    push @iterators, iter1(3); $iterators[1]->();
    my @head = ($iterators[0]->(), $iterators[1]->());

    my @pierpont;
    do {
        my $key = min_index(@head);
        my $min = $head[$key];
        push @pierpont, $min + $kind if is_prime($min + $kind);

        $head[$key] = $iterators[$key]->();

        if ($min >= $add_one) {
            push @iterators, iter2($po3);
            $add_one = $head[$#iterators] = $iterators[-1]->();
           #$add_one = $head[$#iterators] = $iterators[$#iterators]->();
            $po3 *= 3;
        }
    } until @pierpont == $max; 
    @pierpont;
}

my @pierpont_1st = pierpont(250,1);
my @pierpont_2nd = pierpont(250,2);

push @res, "First 50 Pierpont primes of the first kind:";
for my $row (0..4) { push @res, sprintf '%9d'x10, map { $pierpont_1st[10*$row + $_] } 0..9 }

push @res, "\nFirst 50 Pierpont primes of the second kind:";
for my $row (0..4) { push @res, sprintf '%9d'x10, map { $pierpont_2nd[10*$row + $_] } 0..9 }

push @res, "\n250th Pierpont prime of the first kind:    " . $pierpont_1st[249];
push @res, "\n250th Pierpont prime of the second kind: "   . $pierpont_2nd[249];

say my $result = join "\n", @res;

my $ref = <<'EOD';
First 50 Pierpont primes of the first kind:
        2        3        5        7       13       17       19       37       73       97
      109      163      193      257      433      487      577      769     1153     1297
     1459     2593     2917     3457     3889    10369    12289    17497    18433    39367
    52489    65537   139969   147457   209953   331777   472393   629857   746497   786433
   839809   995329  1179649  1492993  1769473  1990657  2654209  5038849  5308417  8503057

First 50 Pierpont primes of the second kind:
        2        3        5        7       11       17       23       31       47       53
       71      107      127      191      383      431      647      863      971     1151
     2591     4373     6143     6911     8191     8747    13121    15551    23327    27647
    62207    73727   131071   139967   165887   294911   314927   442367   472391   497663
   524287   786431   995327  1062881  2519423 10616831 17915903 18874367 25509167 30233087

250th Pierpont prime of the first kind:    62518864539857068333550694039553

250th Pierpont prime of the second kind: 4111131172000956525894875083702271
EOD

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
