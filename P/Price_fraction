#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Price_fraction
#c# 2018-08-20 <RC
#p# OK

srand 123456;

use strict;
use warnings;
use feature 'say';
my $result;

my @table = map [ /([\d\.]+)/g ], split "\n", <<'TBL';
>=  0.00  <  0.06  :=  0.10
>=  0.06  <  0.11  :=  0.18
>=  0.11  <  0.16  :=  0.26
>=  0.16  <  0.21  :=  0.32
>=  0.21  <  0.26  :=  0.38
>=  0.26  <  0.31  :=  0.44
>=  0.31  <  0.36  :=  0.50
>=  0.36  <  0.41  :=  0.54
>=  0.41  <  0.46  :=  0.58
>=  0.46  <  0.51  :=  0.62
>=  0.51  <  0.56  :=  0.66
>=  0.56  <  0.61  :=  0.70
>=  0.61  <  0.66  :=  0.74
>=  0.66  <  0.71  :=  0.78
>=  0.71  <  0.76  :=  0.82
>=  0.76  <  0.81  :=  0.86
>=  0.81  <  0.86  :=  0.90
>=  0.86  <  0.91  :=  0.94
>=  0.91  <  0.96  :=  0.98
>=  0.96  <  1.01  :=  1.00
TBL

sub convert {
        my $money = shift;
        for (@table) {
                return $_->[2] if $_->[0] <= $money and $_->[1] > $money
        }
        die "Can't find currency conversion for $money. Counterfeit?"
}

# try it out
for (1 .. 10) {
        my $m = rand(1);
        $result .= sprintf "%.3f -> %g\n", $m, convert($m);
}



say $result; 
my $ref = <<'EOD';
0.941 -> 0.98
0.670 -> 0.78
0.632 -> 0.74
0.207 -> 0.32
0.055 -> 0.1
0.288 -> 0.44
0.222 -> 0.38
0.990 -> 1
0.546 -> 0.66
0.963 -> 1
EOD

use Test::More;
is ($result, $ref);
done_testing();
