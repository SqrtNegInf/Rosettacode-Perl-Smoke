#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Parsing/RPN_to_infix_conversion
#c# 2018-08-20 <RC
#p# OK

use feature 'say';
my $result;

# RPN to infix conversion
# Nigel Galloway April 1st., 2012

$WSb = '(?:^|\s+)';
$WSa = '(?:\s+|$)';
$num = '([+-/$]?(?:\.\d+|\d+(?:\.\d*)?))';
$op = '([-+*/^])';

while ($_ = <DATA>)  {
  $n = -1;
  while (s/$WSb$num\s+$num\s+$op$WSa/' '.('$'.++$n).' '/e)  {@elems[$n] = '('.$1.$3.$2.')';}
  while (s!(\$)(\d+)!@elems[$2]!e) {}
  $result .= substr($_,2,-2)."\n";
}

say $result; 
my $ref = <<'EOD';
((1+2)^(3+4))^(5+6)
3+((4*2)/((1-5)^(2^3)))
EOD

use Test::More;
is ($result, $ref);
done_testing();

__END__
1 2 + 3 4 + ^ 5 6 + ^
3 4 2 * 1 5 - 2 3 ^ ^ / +
