#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Prime_decomposition
#c# 2018-08-20 <RC
#p# OK
#n# Math::Pari 'factorint' produces unreliable results? 
#n# limit testing to what works 100% (cf 'C/Count_in_factors-2')

my $result;

use strict;
use warnings;
use feature 'say';

use Math::Pari qw/:int factorint isprime/;

# Convert Math::Pari's format into simple vector
sub factor {
    my ($pn,$pc) = @{Math::Pari::factorint(shift)};
    map { ($pn->[$_]) x $pc->[$_] } 0 .. $#$pn;
}

for (140 .. 150) {
    next unless isprime($_);
    my $p = 2 ** $_ - 1;
    $result .= "2**$_-1: ". join(" ", factor($p)). "\n";
}

say $result;

my $ref = <<'END';
2**149-1: 86656268566282183151 8235109336690846723986161
END

use Test::More;
is ($result, $ref);
done_testing();

__END__

a run of 20 iterations yielded: 

 210 2**149-1: 86656268566282183151 8235109336690846723986161
 210 2**137-1: 32032215596496435569 5439042183600204290159
 210 2**113-1: 3391 23279 65993 1868569 1066818132868207
 210 2**101-1: 7432339208719 341117531003194129
 201 2**139-1: 5625767248687 123876132205208335762278423601
 143 2**109-1: 745988807 870035986098720987332873
 133 2**107-1: 162259276829213363391578010288127
 132 2**131-1: 263 10350794431055162386718619237468234569
 108 2**103-1: 1970327387158391 3976656429941438590393
 105 2**127-1: 170141183460469231731687303715884105727
 105 2**127-1: 170141183460469231713242248492034818047
 102 2**103-1: 2550183799 3976656429941438590393
  78 2**131-1: 1970324836974855 10350794431055162386718619237468234569
  77 2**107-1: 162259276829194918336354161000447
  67 2**109-1: 1970325582963399 870035986098720987332873
   9 2**139-1: 1975950604223279 123876132205208335762278423601
