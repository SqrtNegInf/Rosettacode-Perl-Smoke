#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Palindromic_gapful_numbers
#c# 2021-01-12 >RC
#p# OK

use strict;
use warnings;
use feature 'say';
#use Math::AnyNum qw(Inf); # cannot use because: Range iterator outside integer range

my @res;

use constant Inf  => 1e10;

sub is_p_gapful {
    my($d,$n) = @_;
    return '' unless 0 == $n % 11;
    my @digits = split //, $n;
    $d eq $digits[0] and (0 == $n % ($digits[0].$digits[-1])) and $n eq join '', reverse @digits;
}

for ([100, 1, 20], [100, 86, 15]) {
    my($start, $offset, $count) = @$_;
    push @res, "Palindromic gapful numbers starting at $offset:";
    for my $d ('1'..'5') {
        my $n = 0; my $g = "$d: ";
        $g .= do { $n+1 < $count+$offset ? (is_p_gapful($d,$_) and ++$n and $n >= $offset and "$_ ") : last } for $start .. Inf;
        push @res, $g;
    }
    push @res, '';
}

say my $result = join "\n", @res;

my $ref = <<'END';
Palindromic gapful numbers starting at 1:
1: 121 1001 1111 1221 1331 1441 1551 1661 1771 1881 1991 10901 11011 12221 13431 14641 15851 17171 18381 19591 
2: 242 2002 2112 2222 2332 2442 2552 2662 2772 2882 2992 20702 21912 22022 23232 24442 25652 26862 28182 29392 
3: 363 3003 3333 3663 3993 31713 33033 36663 300003 303303 306603 309903 312213 315513 318813 321123 324423 327723 330033 333333 
4: 484 4004 4224 4444 4664 4884 40304 42724 44044 46464 48884 400004 401104 402204 403304 404404 405504 406604 407704 408804 
5: 5005 5115 5225 5335 5445 5555 5665 5775 5885 5995 50105 51315 52525 53735 54945 55055 56265 57475 58685 59895 

Palindromic gapful numbers starting at 86:
1: 165561 166661 167761 168861 169961 170071 171171 172271 173371 174471 175571 176671 177771 178871 179971 
2: 265562 266662 267762 268862 269962 270072 271172 272272 273372 274472 275572 276672 277772 278872 279972 
3: 30366303 30399303 30422403 30455403 30488403 30511503 30544503 30577503 30600603 30633603 30666603 30699603 30722703 30755703 30788703 
4: 4473744 4485844 4497944 4607064 4619164 4620264 4632364 4644464 4656564 4668664 4681864 4693964 4803084 4815184 4827284 
5: 565565 566665 567765 568865 569965 570075 571175 572275 573375 574475 575575 576675 577775 578875 579975 

END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
