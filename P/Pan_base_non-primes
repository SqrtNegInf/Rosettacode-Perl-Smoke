#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Pan_base_non-primes
#t# inprogress
#c# 2022-xx-xx >RC
#p# OK

use Data::Printer;          # debug only
use Time::HiRes qw(sleep);  # debug only

my @res;

use strict;
use warnings;
use feature 'say';

#use Base::Any;
#use List::Divvy;

my @np;

#my @np = 4,6,8,9, |lazy (11..*).grep( -> $n { ($n.substr(*-1) eq '0') || (1 < [gcd] $n.comb».Int) || none (2..$n).map: { try "$n".&from-base($_).is-prime } } );

#push @res, "First 50 pan-base composites:\n" ~ @np[^50].batch(10)».fmt("%3s").join: "\n";
#push @res, "\nFirst 20 odd pan-base composites:\n" ~ @np.grep(* % 2)[^20].batch(10)».fmt("%3s").join: "\n";

my $threshold = 300;
#push @res, "\nCount of pan-base composites up to and including $threshold: " ~ +@np.&upto($threshold);

#push @res, "Percent odd  up to and including $threshold: " ~ +@np.&upto($threshold).grep(* % 2) / +@np.&upto($threshold) × 100;
#push @res, "Percent even up to and including $threshold: " ~ +@np.&upto($threshold).grep(* %% 2) / +@np.&upto($threshold) × 100;

say my $result = join "\n", @res;

my $ref = <<'END';
First 50 pan-base composites:
  4   6   8   9  20  22  24  26  28  30
 33  36  39  40  42  44  46  48  50  55
 60  62  63  64  66  68  69  70  77  80
 82  84  86  88  90  93  96  99 100 110
112 114 116 118 120 121 130 132 134 136

First 20 odd pan-base composites:
  9  33  39  55  63  69  77  93  99 121
143 165 169 187 231 253 273 275 297 299

Count of pan-base composites up to and including 300: 115
Percent odd  up to and including 300: 17.391304
Percent even up to and including 300: 82.608696
END

#Count of pan-base composites up to and including 2500: 953
#Percent odd  up to and including 2500: 16.894019
#Percent even up to and including 2500: 83.105981

use Test::More;
chomp $ref;
is($result, $ref);
#is(($result =~ s/\s//gr), ($ref =~ s/\s//gr));
done_testing();

__END__

=={{header|Perl}}==
{{trans|Raku}}
{{libheader|ntheory}}
<lang perl>
</lang>
{{out}}
<pre>
</pre>
