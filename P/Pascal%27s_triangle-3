#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Pascal%27s_triangle
#c# 2018-08-20 <RC
#p# OK

use feature 'say';

{
  my @tartaglia ;  
  sub tartaglia {
      my ($x,$y) = @_;
      if ($x == 0 or $y == 0)  { $tartaglia[$x][$y]=1 ; return 1};
      my $ret ;
      foreach my $yps (0..$y){
        $ret += ( $tartaglia[$x-1][$yps] || tartaglia($x-1,$yps) );
      }
      $tartaglia[$x][$y] = $ret;
      return $ret;
  }
}
sub tartaglia_row {
    my $y = shift;
    my $x = 0;
    my @row;
    $row[0] = &tartaglia($x,$y+1);
    foreach my $pos (0..$y-1) {push @row, tartaglia(++$x,--$y)}
    return @row;
}

 
for (0..5) {$result .= join(' ', tartaglia_row($_)) . "\n" }
$result .= "\n\n";
 
$result .= tartaglia(3,3)."\n";
my @third = tartaglia_row(5);
$result .= "@third\n";

say $result;

my $ref =<<'EOD';
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
1 5 10 10 5 1


20
1 5 10 10 5 1
EOD

use Test::More;
is($result,$ref);
done_testing();
