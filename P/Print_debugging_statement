#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Print_debugging_statement
#c# 2019-09-07 >RC
#p# OK
#n# TIMTOWTDI, this seemed cleaner than Test::Output and wrapping with functions

use feature 'say';
use Carp 'cluck';
use Test::More;
use Test::Warn;

my $str = 'Resistance'; 

sub doodle { my ($str) = @_; cluck "'$str' is still futile." }

sub fiddle { faddle(2*shift) }
sub faddle { fuddle(3*shift) }
sub fuddle { ( cluck("'$_[0]', interesting number.") ); }

warnings_like {cluck "'$str' is futile."}   [qr/Resistance. is futile/];
warnings_like {doodle($str)}                [qr/Resistance. is still futile/];
warnings_like {fiddle(7)}                   [qr/42.*interesting number/];
done_testing();
