#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Periodic_table
#c# 2022-06-20 >RC
#p# OK
#n# count in base 18, advance and retard as needed

my @res;

#use v5.36.0; # generates warning: Use of uninitialized value in addition (+) ... line 28.

use strict;
use warnings; 
use feature <say signatures>;
no warnings qw<uninitialized experimental::signatures>;

use List::Util <sum head>;

sub divmod ($v, $r) { ( int $v/$r, $v%$r ) }

my $x = 2 * (my $b = 18);
my(@offset,@span,$cnt);  
push @span, ($cnt++) x $_ for <1 3 8 44 15 17 15 15>;
@offset = (16, 10, 10, $x+1, -$x-15, $x+1, -$x-15);
#@offset = (16, 10, 10, (2*$b)+1, (-2*$b)-15, (2*$b)+1, (-2*$b)-15);

for my $n (<1 2 29 42 56 57 58 71 72 88 89 90 103 104 118>) {
   #push @res, sprintf "%3d: %2d, %2d", $n, map { $_+1 } divmod $n-1 + sum(@offset[0..-1+$span[$n-1]]), $b;
    push @res, sprintf "%3d: %2d, %2d", $n, map { $_+1 } divmod $n-1 + sum(head $span[$n-1], @offset), $b;
}

say my $result = join "\n", @res;

my $ref = <<'END';
  1:  1,  1
  2:  1, 18
 29:  4, 11
 42:  5,  6
 56:  6,  2
 57:  8,  4
 58:  8,  5
 71:  8, 18
 72:  6,  4
 88:  7,  2
 89:  9,  4
 90:  9,  5
103:  9, 18
104:  7,  4
118:  7, 18
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
