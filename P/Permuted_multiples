#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Permuted_multiples
#c# 2021-08-18 <RC
#p# OK
#n# DRY (compare with .1 version)

my @res;

use strict;
use warnings;
use feature 'say';

my $n = 3;

LOOP: {
  1 while do {
    length($n += 3) < length(6*$n) and $n = 1 . $n =~ s/./0/gr + 2;
    my($hit, $sorted) = (0, join '', sort split //, $n * 6);
    $sorted ne join('', sort split(//, $n * $_)) and $hit++ for 1..5;
    last unless $hit;
  };
}

push @res, sprintf " n  %s", $n;
push @res, sprintf "%dn  %s", $_ , $n * $_ for 2 .. 6;

say my $result = join "\n", @res;

my $ref = <<'EOD';
 n  142857
2n  285714
3n  428571
4n  571428
5n  714285
6n  857142
EOD

use Test::More;
chomp $ref;
is ($result, $ref);
done_testing;
