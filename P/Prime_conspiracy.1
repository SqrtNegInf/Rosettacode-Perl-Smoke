#!/usr/local/bin/perl
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Prime_conspiracy
#c# 2018-09-30 >RC
#p# OK

use feature 'say';

use bignum;
use Math::Prime::Util "next_prime";

my $upto = 1_000_000;
 
my $b = $p = 2;
my $count = 0;
while () {
    $p = next_prime($p);
    my $a = $p % 10; 
    $conspiracy{"$b → $a count:"}++; 
    $b = $a;
    last if ++$count == $upto;
}

push @res, sprintf "$_\t%5d\tfrequency: %4.2f %%", $conspiracy{$_}, ($conspiracy{$_}/$upto*100) for sort keys %conspiracy;

say $result = join "\n", @res;

my $ref = <<'EOD';
1 → 1 count:	42853	frequency: 4.29 %
1 → 3 count:	77475	frequency: 7.75 %
1 → 7 count:	79453	frequency: 7.95 %
1 → 9 count:	50153	frequency: 5.02 %
2 → 3 count:	    1	frequency: 0.00 %
3 → 1 count:	58255	frequency: 5.83 %
3 → 3 count:	39668	frequency: 3.97 %
3 → 5 count:	    1	frequency: 0.00 %
3 → 7 count:	72828	frequency: 7.28 %
3 → 9 count:	79358	frequency: 7.94 %
5 → 7 count:	    1	frequency: 0.00 %
7 → 1 count:	64230	frequency: 6.42 %
7 → 3 count:	68595	frequency: 6.86 %
7 → 7 count:	39603	frequency: 3.96 %
7 → 9 count:	77586	frequency: 7.76 %
9 → 1 count:	84596	frequency: 8.46 %
9 → 3 count:	64371	frequency: 6.44 %
9 → 7 count:	58130	frequency: 5.81 %
9 → 9 count:	42843	frequency: 4.28 %
EOD

use Test::More;
chop $ref;
is($result, $ref);
done_testing;

__END__

=={{header|Perl}}==
<lang perl></lang>
{{out}}
<pre></pre>
