#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Permutations
#c# 2018-08-21 <RC, 2018-11-01 >RC
#p# OK

use strict;
use warnings;
use feature 'say';
my($result1,$result2);

sub permutation {
	my ($perm,@set) = @_;
	$result1 .= "$perm\n" || return unless (@set);
	permutation($perm.$set[$_],@set[0..$_-1],@set[$_+1..$#set]) foreach (0..$#set);
}
my @input = (qw/a b c d/);
permutation('',@input);

say $result1; 
my $ref1 = <<'EOD';
abcd
abdc
acbd
acdb
adbc
adcb
bacd
badc
bcad
bcda
bdac
bdca
cabd
cadb
cbad
cbda
cdab
cdba
dabc
dacb
dbac
dbca
dcab
dcba
EOD

use ntheory qw/forperm/;
my @tasks = (qw/party sleep study/);
forperm {
    $result2 .= "@tasks[@_]\n";
} @tasks;

say $result2;

my $ref2 = <<'EOD';
party sleep study
party study sleep
sleep party study
sleep study party
study party sleep
study sleep party
EOD

use Test::More;
is ($result1, $ref1);
is ($result2, $ref2);
done_testing;
