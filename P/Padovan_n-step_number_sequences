#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Padovan_n-step_number_sequences
#t# inprogress
#c# 2021-03-xx >RC
#p# OK

my @res;
my $result;

use strict;
use warnings;
use feature <state say>;

use List::Lazy 'lazy_list';

say 'Padovan N-step sequences; first 25 terms:';

#for 2..8 -> \N {
#    my @n-step = 1, 1, 1, { state $n = 2; @n-step[ ($n - N .. $n++ - 1).grep: * >= 0 ].sum } … *;
#    @res.push: "N = {N} |" ~ @n-step[^25]».fmt: "%5d";
#}

#.say for @res;

my $ref = <<'END';
N = 2 |    1     1     1     2     2     3     4     5     7     9    12    16    21    28    37    49    65    86   114   151   200   265   351   465   616
N = 3 |    1     1     1     2     3     4     6     9    13    19    28    41    60    88   129   189   277   406   595   872  1278  1873  2745  4023  5896
N = 4 |    1     1     1     2     3     5     7    11    17    26    40    61    94   144   221   339   520   798  1224  1878  2881  4420  6781 10403 15960
N = 5 |    1     1     1     2     3     5     8    12    19    30    47    74   116   182   286   449   705  1107  1738  2729  4285  6728 10564 16587 26044
N = 6 |    1     1     1     2     3     5     8    13    20    32    51    81   129   205   326   518   824  1310  2083  3312  5266  8373 13313 21168 33657
N = 7 |    1     1     1     2     3     5     8    13    21    33    53    85   136   218   349   559   895  1433  2295  3675  5885  9424 15091 24166 38698
N = 8 |    1     1     1     2     3     5     8    13    21    34    54    87   140   225   362   582   936  1505  2420  3891  6257 10061 16178 26014 41830
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

my $pad_recur = lazy_list { state @p = (1, 1, 1, 2); push @p, $p[1]+$p[2]; shift @p };

sub pad_floor { int 1/2 + $p**($_<3 ? 1 : $_-2) / $s }
#sub pad_floor { state $i; int 1/2 + $p**($i++ - 1) / $s }

my($l, $m, $n) = (10, 20, 32);

my(@pr, @pf);
push @pr, $pad_recur->next() for 1..$n; push @res, join ' ', @pr[0..$m-1];
push @pf,  pad_floor($_)     for 1..$n; push @res, join ' ', @pf[0..$m-1];

__END__

=={{header|Perl}}==
{{trans|Raku}}
<lang perl></lang>
{{out}}
<pre></pre>
