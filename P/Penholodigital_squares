#!/usr/local/bin/perl
#u# https://rosettacode.org/wiki/Penholodigital_squares
#t# inprogress
#c# 2023-03-17 >RC
#p# OK

my @res;

use v5.36;
#use strict; use warnings; use feature 'say';

use ntheory <fromdigits todigitstring>;

for my $base (2 .. 8) {
    say "b: $base";
    my $testr = reverse my $test  = substr('123456789abcdef',0,$base-1);
    my $start = int sqrt fromdigits($test,  $base);
    my $end   = int sqrt fromdigits($testr, $base);
#say $test ; say $testr; say todigitstring($start,$base); say todigitstring($end,$base); exit;
    my @nums = grep { $test eq join '', sort split '', todigitstring($_**2, $base) } $start .. $end;
    say todigitstring($_,$base) for @nums;
}

exit;

say my $result = join "\n", @res;
my $ref = <<'END';
END

use Test::More;
chomp $ref;
is($result, $ref);
#is(($result =~ s/\s//gr), ($ref =~ s/\s//gr));
done_testing();

__END__

=={{header|Perl}}==
{{trans|Raku}}
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre style="height:20ex">
</pre>
