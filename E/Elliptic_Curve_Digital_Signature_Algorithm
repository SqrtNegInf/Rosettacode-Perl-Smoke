#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm
#c# 2020-08-28 <RC
#p# OK

use strict;
use warnings;

use Crypt::EC_DSA;

my $ecdsa = new Crypt::EC_DSA;

my ($pubkey, $prikey) = $ecdsa->keygen;

print "Message: ", my $msg = 'Rosetta Code', "\n";

print "Private Key :\n$prikey \n";
print "Public key  :\n", $pubkey->x, "\n", $pubkey->y, "\n";

my $signature = $ecdsa->sign( Message => $msg, Key => $prikey );
print "Signature   :\n";
for (sort keys %$signature) { print "$_ => $signature->{$_}\n"; }

$ecdsa->verify( Message => $msg, Key => $pubkey, Signature => $signature ) and
   print "Signature verified.\n";

# this varies each run, so don't test against!
my $ref = <<'EOD';
Message: Rosetta Code
Private Key :
50896950174101144529764022934807089163030534967278433074982207331912857967110
Public key  :
98639220601877298644829563208621497413822596683110596662237522364057856411416
69976521993624103693270429074404825634551369215777879408776019358694823367135
Signature   :
r => 113328268998856048369024784426817827689451364968174533291969247274701793929451
s => 102496515866716695113707075780391660331998173218829535655149484671019624453603
Signature verified.
EOD

use Test::More;
ok $ecdsa->verify( Message => $msg, Key => $pubkey, Signature => $signature );
done_testing();
