#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Erd%C5%91s-Nicolas_numbers
#c# 2022-09-14 >RC, 2023-12-15 <RC
#p# OK
#n# speed improvement from Trizen++

my @res;

use v5.36;

use enum    qw(False True);
use ntheory qw(divisors divisor_sum);

sub is_Erdos_Nicolas ($n) {

    divisor_sum($n) > 2*$n or return False;

    my $sum   = 0;
    my $count = 0;

    foreach my $d (divisors($n)) {
        ++$count;        $sum += $d;
        return $count if ($sum == $n);
        return False  if ($sum > $n);
    }
}

my ($n, $count) = (2, 0);
until ($count == 8) {
    next unless 0 == ++$n % 2;
    if (my $key = is_Erdos_Nicolas $n) {
        push @res, sprintf "%8d == sum of its first %3d divisors", $n, $key;
        $count++;
    }
}

say my $result = join "\n", @res;

my $ref = <<'END';
      24 == sum of its first   6 divisors
    2016 == sum of its first  31 divisors
    8190 == sum of its first  43 divisors
   42336 == sum of its first  66 divisors
   45864 == sum of its first  66 divisors
  392448 == sum of its first  68 divisors
  714240 == sum of its first 113 divisors
 1571328 == sum of its first 115 divisors
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing;
