#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Erd%C5%91s-Nicolas_numbers
#c# 2022-09-14 >RC
#p# OK

my @res;

use v5.36;

use ntheory 'divisors';
use enum qw(False True);
use List::AllUtils <firstidx sum>;

sub proper_divisors ($n) {
  return 1 if $n == 0;
  my @d = divisors($n);
  pop @d;
  @d;
}

sub is_EN ($n) {
    my @divisors = proper_divisors($n);
    return False unless sum(@divisors) > $n;
    my $sum;
    my $key = firstidx { $_ == $n } map { $sum += $_ } @divisors;
    $key ? 1 + $key : False; 
}

my($n,$count) = (2,0);
until ($count == 8) {
    next unless 0 == ++$n % 2 and my $key = is_EN $n;
    push @res, sprintf "%8d == sum of its first %3d divisors", $n, $key;
    $count++
}

say my $result = join "\n", @res;

my $ref = <<'END';
      24 == sum of its first   6 divisors
    2016 == sum of its first  31 divisors
    8190 == sum of its first  43 divisors
   42336 == sum of its first  66 divisors
   45864 == sum of its first  66 divisors
  392448 == sum of its first  68 divisors
  714240 == sum of its first 113 divisors
 1571328 == sum of its first 115 divisors
END

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();
