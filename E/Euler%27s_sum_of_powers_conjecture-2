#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Euler%27s_sum_of_powers_conjecture
#c# 2018-07-31 <RC
#p# OK
#n# Adding some optimizations makes it ~5x faster with similar output, but obfuscates things.  (translation of: C++)

my $result;

use strict;
use warnings;
use feature 'say';

use constant MAX => 250;

my @p5 = (0,map { $_**5 } 1 .. MAX-1);
my $rs = 5;
LOOP:
for my $x0 (1..MAX-1) {
  for my $x1 (1..$x0-1) {
    for my $x2 (1..$x1-1) {
      my $s2 = $p5[$x0] + $p5[$x1] + $p5[$x2];
      $rs-- while $rs > 0 && $p5[$rs] > $s2;
      for (my $x3 = 1;  $x3 < $x2;  $x3++) {
        my $e30 = ($x0 + $x1 + $x2 + $x3 - $rs) % 30;
        $x3 += (30-$e30) if $e30;
        last if $x3 >= $x2;
        my $sum = $s2 + $p5[$x3];
        $rs++ while $rs < MAX-1 && $p5[$rs] < $sum;
        if ($p5[$rs] == $sum) {
            say $result = "$x3 $x2 $x1 $x0 $rs";
            last LOOP;
        }
      }
    }
  }
}

use Test::More;
is ($result, '27 84 110 133 144');
done_testing();
