#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Extensible_prime_generator
#c# 2018-08-01 <RC
#p# OK

my $result;

use strict;
use warnings;
use feature 'say';

#use Math::Prime::Util "prime_iterator_object";
use ntheory "prime_iterator_object";

my $it = prime_iterator_object;
$result .= "First 20: ". join(" ", map { $it->iterate() } 1..20) . "\n";
$it->seek_to_value(100);
$result .= "Between 100 and 150:" . "\n";
$result .= " ". $it->iterate() while $it->value() <= 150;
$result .= "\n";
$it->seek_to_value(7700);
my $c = 0;
$c++ while $it->iterate() <= 8000;
$result .= "$c primes between 7700 and 8000" . "\n";
$result .= "${_}th prime: ". $it->ith($_) . "\n" for map { 10**$_ } 1..8;

say $result;

my $ref = <<'END';
First 20: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71
Between 100 and 150:
 101 103 107 109 113 127 131 137 139 149
30 primes between 7700 and 8000
10th prime: 29
100th prime: 541
1000th prime: 7919
10000th prime: 104729
100000th prime: 1299709
1000000th prime: 15485863
10000000th prime: 179424673
100000000th prime: 2038074743
END

use Test::More;
is ($result, $ref);
done_testing();
