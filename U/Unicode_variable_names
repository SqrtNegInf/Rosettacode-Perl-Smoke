#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Unicode_variable_names
#c# 2018-08-07 <RC
#p# OK
#n# Was not working with v5.36 (these problems not related to use of Unicode):
#n#     Subroutine attributes must come before the signature at U/Unicode_variable_names
#n#     ++풊 form works while 풊++ does not
#n# 2023-07-09 fixes for v5.36 (and up) make old Perls fail
#n# not sure why BEGIN was used, doesn't appear needed? [$val is global regardless]

my $result;

use v5.36;

use utf8;
binmode(STDOUT, ':utf8');

#BEGIN {
    my $val;
   #sub 풊 () : lvalue {     # in pre-v5.36
    sub 풊 : lvalue () {
        $val;
    }
#}

my $풊 = 1;
++$풊;
$result .= $풊 . "\n";

# $ sigil can be omitted by using lvalue subroutine:
풊 = 1;
++풊;                        # in v5.36 this form doesn't work: 풊++;
$result .= 풊 . "\n";

#sub 洧램 () : lvalue {        # in pre-v5.36
sub 洧램 : lvalue () {
    state $val;
}

洧램 = 1;
++洧램;                        # as above
$result .= 洧램 . "\n";

# One can have Unicode in identifier or subroutine names and also in package or class names. 
# Use of Unicode for the last two purposes is, due to file and directory names, dependent on the filesystem.

print $result; 

my $ref = <<'EOD';
2
2
2
EOD

use Test::More;
is ($result, $ref);
done_testing();
