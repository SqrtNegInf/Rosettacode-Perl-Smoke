#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/Ulam_numbers
#c# 2020-12-xx >RC
#p# OK
#n# slowish @ 40sec for U(10_000)

use strict;
use warnings;
use feature <say state>;

my @res;
 
sub ulam {
    my($n) = @_;
    state %u     = (1 => 1, 2 => 1);
    state @ulams = <0 1 2>; # 0 a placeholder to shift indexing up one

    return $ulams[$n] if $ulams[$n-1];

    $n++;
    my $i = 3;

    while () {
        my $count = 0;

if (0) {
        for (0..$#ulams) {
           if ($u{ $i - $ulams[$_] } and $ulams[$_] != ($i - $ulams[$_]) ) {
               last if $count++ > 2
           }
        }

        if ($count == 2) {
            push @ulams, $i;
            $u{$i} = 1;
            last if @ulams == $n;
        }

} else {
        #$u{ $i - $ulams[$_] } and $ulams[$_] != ($i - $ulams[$_]) and $count++ > 2 and last for 0..$#ulams;
            $u{ $i - $ulams[$_] } 
        and $ulams[$_] != $i - $ulams[$_]
        and $count++ > 2 
        and last 
            for 0..$#ulams;

            $count == 2
        and push(@ulams,$i)
        and $u{$i} = 1
        and @ulams == $n
        and last;
}

        $i++
    }

    return $ulams[$n-1];
}

push @res, sprintf "The %dth Ulam number is: %d", 10**$_, ulam(10**$_) for 1..3;

say my $result = join "\n", @res;

my $ref = <<'END';
The 10th Ulam number is: 18
The 100th Ulam number is: 690
The 1000th Ulam number is: 12294
END
#The 10000th Ulam number is: 132788

use Test::More;
chomp $ref;
is($result, $ref);
done_testing();

__END__

=={{header|Perl}}==
{{trans|Julia}}
<lang perl></lang>
{{out}}
<pre></pre>
