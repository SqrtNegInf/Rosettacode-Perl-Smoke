#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/4-rings_or_4-squares_puzzle
#c# 2021-06-14 <RC
#p# OK
#n# tybalt89++

my $result;

use strict;
use warnings;
use feature 'say';

for ( [1 .. 7], [3 .. 9] ) {
  $result .= "for @$_\n\n";
  findunique( $_ );
  $result .= "\n";
}

my $count = 0;
findcount();
$result .= "count of non-unique 0-9: $count\n";

sub findunique {
  my @allowed = @{ shift @_ };
  if( @_ == 4 ) { $_[0] == $_[2] + $_[3] or return }
  elsif( @_ == 6 ) { $_[1] + $_[2] == $_[4] + $_[5] or return }
  elsif( @_ == 7 ) { $_[3] + $_[4] == $_[6] and $result .= "@_\n"; return }
  for my $n ( @allowed ) {
    findunique( [ grep $n != $_, @allowed ], @_, $n );
  }
}

sub findcount {
  if( @_ == 4 ) { $_[0] == $_[2] + $_[3] or return }
  elsif( @_ == 6 ) { $_[1] + $_[2] == $_[4] + $_[5] or return }
  elsif( @_ == 7 ) { $_[3] + $_[4] == $_[6] and $count++; return }
  findcount( @_, $_ ) for 0 .. 9;
}

say $result;

my $ref = <<'EOD';
for 1 2 3 4 5 6 7

3 7 2 1 5 4 6
4 5 3 1 6 2 7
4 7 1 3 2 6 5
5 6 2 3 1 7 4
6 4 1 5 2 3 7
6 4 5 1 2 7 3
7 2 6 1 3 5 4
7 3 2 5 1 4 6

for 3 4 5 6 7 8 9

7 8 3 4 5 6 9
8 7 3 5 4 6 9
9 6 4 5 3 7 8
9 6 5 4 3 8 7

count of non-unique 0-9: 2860
EOD

use Test::More;
is ($result, $ref);
done_testing;
