#!/usr/local/bin/perl
#u# http://rosettacode.org/wiki/100_doors
#c# 2018-07-09 <RC
#p# OK

use feature 'say';
my $result;

my @doors = (1) x 100;
for my $N (1 .. 100) {
   $doors[$_]=1-$doors[$_] for map { $_*$N - 1 } 1 .. int(100/$N);
}
$result .= join("\n", map { "Door $_ is Open" } grep { ! $doors[$_-1] } 1 .. 100) . "\n";
$result .= "The rest are closed\n";

say $result;

my $ref = <<END;
Door 1 is Open
Door 4 is Open
Door 9 is Open
Door 16 is Open
Door 25 is Open
Door 36 is Open
Door 49 is Open
Door 64 is Open
Door 81 is Open
Door 100 is Open
The rest are closed
END

use Test::More;
is ($result, $ref);
done_testing();
